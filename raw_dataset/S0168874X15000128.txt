@&#MAIN-TITLE@&#Implicit–explicit co-simulation of brake noise

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Hypothesis regarding capturing vibrations of the system through the outer layer of the disc.


                        
                        
                           
                           Simulation of brake noise instabilities using implicit/explicit co-simulation.


                        
                        
                           
                           Fourier transformation of the analysis results.


                        
                        
                           
                           Compare the analysis results with the Complex Eigenvalue Analysis results.


                        
                        
                           
                           Perform dynamometer tests and correlate the analysis results with the experimental data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Brake noise

Squeal

Implicit

Explicit

Co-simulation

Co-execution

Finite Element Analysis

Complex Eigenvalue Analysis

@&#ABSTRACT@&#


                  The Finite Element Analysis (FEA) method has long been used as a means of reliable simulation of brake noise. In the simulation and analysis of brake noise, computational time is a significant factor. Complex Eigenvalue Analysis (CEA) is the most common brake noise analysis method since it can provide a quick prediction of the frequency of the instability [19]. However, most non-linear behaviours of the system are simplified in order to achieve a quick analysis result in the frequency domain. The explicit analysis can provide a more comprehensive understanding of the system by taking into account non-linear variables of the system in time domain. However, performing an explicit analysis is expensive in terms of computing time and costs.
                  This study investigates effectiveness of a hybrid implicit/explicit FEA method which combines frequency domain and time domain solution schemes. The time/frequency domain co-simulation analysis simulates the brake unit partly in implicit and partly in explicit, and combines the results. The aim of the study is to investigate the suitability of implicit-explicit co-simulation for brake Noise, Vibration and Harshness (NVH) evaluations. The simulation results are correlated with the vehicle test results. The rotation of the disc is simulated in explicit domain while the rest of the loadings are based in the frequency domain using CEA implicit method. The performance of the co-simulation solution scheme is evaluated and compared to the implicit CEA analysis.
               

@&#INTRODUCTION@&#

Recent advances in the computer technology have enabled researchers to build more complicated and comprehensive numerical models to study the brake squeal problem. These models often provide relatively quick results compared to experimental methods. Improvements in algorithm and formulation of loads and boundary conditions have enabled researchers to obtain a more accurate representation of the phenomenon, and consequently improve the Noise, Vibration and Harshness (NVH) attributes of the brake system [4,5].

There are numerous experimental, analytical and numerical methods to investigate the brake noise problem [3]. Experimental approaches were the very first method of investigating brake noise. Early examples of this are Lamarque (1938) [11] and Mills (1939) [15]. Nowadays full-vehicle noise search tests are among the most reliable methods for investigating the problem, as well as confirming the findings of numerical investigations. Experimental methods are usually very useful for confirming results from other studies, as they demonstrate a complete presentation of the NVH performance of brakes.

There has been a long debate in choosing the right numerical method. Several studies have been published comparing the time domain and the frequency domain analyses, discussing their respective virtues [18]. The outcome of this debate in the literature recommends that probably the most reliable, accurate and comprehensive solution could be performing two different numerical approaches to identify the squeal mechanism; one being the Finite Element Analysis (FEA) modal analysis of the disc brake system to define its eigenvalues, and relate them to the squeal occurrence. Another one being a nonlinear analysis in the time domain, with a focus on the contact problem with the friction between deformable bodies, namely disc and friction materials (pads). Then the two approaches are compared, and the onset of squeal is predicted both in the frequency domain by the linear model and in the time domain by the nonlinear one [13].

FEA method is a common simulation technique for academic and industrial investigations of brake noise. FEA solution methods for brake noise investigation are typically either implicit or explicit and solved incrementally. In the implicit approach a solution to the set of Complex Eigenvalue Analysis (CEA) equations is obtained by iterations for each time increment, until a convergence criterion is obtained. The frequency domain results present the behaviour of the system over the range of frequency, in one step of time (
                        t
                        =
                        
                           
                              t
                           
                           
                              i
                           
                        
                     ). The system of equations in the explicit approach is reformulated to a dynamic system and is solved directly to determine the solution at the end of the time increment without iterations.

The equation solution phase of an FEA can use an implicit or explicit technique. The implicit method employs a more reliable and rigorous scheme in considering the equilibrium at each step of time increment. However, in the case of analyses involving large element deformation, highly non-linear plasticity or contact between surfaces the implicit solver is known to face problems in converging to a correct solution.

The implicit technique is ideally suited for long duration problems where the response is moderately nonlinear. While each time increment associated with the implicit solver is relatively large, it is computationally expensive and may pose convergence challenges.

On the other hand, the explicit technique is very robust and ideal for modelling short duration, highly nonlinear events involving rapid changes in contact state and large material deformation. In the case of the explicit FEA method the system equations are solved directly to determine the solution without iteration providing a more robust alternative method. In the explicit method non-linear properties of the system are taken into account at the cost of computing time.

Implicit or explicit, each of them has specific advantages and disadvantages. However, there is possibility of combining these two into a hybrid analysis, called co-simulation. Co-simulation is the coupling of different simulation systems where different substructures of a model exchange data during the integration time. Co-simulation technique allows combining heterogeneous solvers and is less time consuming when different load and model cases require different amount of time for the solution between two different solvers.

In the case of brake noise analysis, co-simulation capability combines the unique strengths of Abaqus-Standard and Abaqus-Explicit to more effectively perform complex simulations. Implicit-explicit co-simulation allows the FEA model to be strategically divided into two parts, one to be solved in the frequency domain and the other in the time domain. The two parts are solved as independent problems and coupled together to ensure continuity of the global solution across the interface boundaries [23]. Application of this analysis technique can provide significant savings of time and money in the automobile development cycle [2,7].

The equation of motion of a vibrating system is repeatedly reviewed in the literature [18,10,19,12,17]. Also, the concept and formulation of the complex eigenvalue problem is an established topic in various publications [9,21,16,20,22,6]. Furthermore, the application of the CEA problem to the modal analysis of a model is integrated in most FEA packages. The eigenvalue problem for natural modes of small vibration of a FEA model is:
                           
                              (1)
                              
                                 
                                    (
                                    
                                       
                                          
                                             μ
                                          
                                          2
                                       
                                       
                                          [
                                          M
                                          ]
                                       
                                       +
                                       μ
                                       
                                          [
                                          C
                                          ]
                                       
                                       +
                                       [
                                       K
                                       ]
                                    
                                    )
                                 
                                 {
                                 φ
                                 }
                                 =
                                 0
                              
                           
                        where 
                           [
                           M
                           ]
                        : mass matrix, symmetric and positive; 
                           [
                           C
                           ]
                        : damping matrix; 
                           [
                           K
                           ]
                        : stiffness matrix; 
                           μ
                        : eigenvalue and 
                           {
                           φ
                           }
                        : eigenvector (mode of vibration). Also, the equation of motion for a basic system of single degree of freedom is:
                           
                              (2)
                              
                                 m
                                 
                                    q
                                    ¨
                                 
                                 +
                                 c
                                 
                                    q
                                    ̇
                                 
                                 +
                                 k
                                 q
                                 =
                                 0
                              
                           
                        where m: mass, c: damping, k: stiffness, and q: modal amplitude. The solution will be in the format of 
                           q
                           =
                           A
                           exp
                           λ
                           t
                        , assuming A is a constant and
                           
                              (3)
                              
                                 λ
                                 =
                                 −
                                 
                                    c
                                    
                                       2
                                       m
                                    
                                 
                                 ±
                                 
                                    
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                2
                                             
                                          
                                          
                                             4
                                             
                                                
                                                   m
                                                
                                                2
                                             
                                          
                                       
                                       −
                                       
                                          k
                                          m
                                       
                                    
                                 
                              
                           
                        
                     

The solution may have real and imaginary parts, and that is because the terms under the square root can become negative. When 
                           c
                        , damping, is negative, the real part of the solution (
                           −
                           (
                           C
                           /
                           2
                           M
                           )
                        ) is positive. A negative damping causes system oscillations to grow rather than decaying them which is normally expected from damping phenomenon. Hence a positive real part is just another way of indicating potentiality of observing an instability [1].

In the implicit method the state of the FEA model is updated from time 
                           t
                         to 
                           t
                           +
                           Δ
                           t
                        . A fully implicit procedure means that the state at 
                           t
                           +
                           Δ
                           t
                         is determined based on information at time 
                           t
                           +
                           Δ
                           t
                        . On the other hand, the explicit method solves for 
                           t
                           +
                           Δ
                           t
                         based on information at time 
                           t
                         
                        [8]. There are different solution procedures used by implicit FEA solvers. A form of the Newton–Raphson method is the most common and is employed by Abaqus. When solving a quasi-static boundary value problem, a set of non-linear equations is assembled as:
                           
                              (4)
                              
                                 G
                                 
                                    (
                                    u
                                    )
                                 
                                 =
                                 
                                    ∫
                                    v
                                 
                                 
                                    
                                       B
                                    
                                    T
                                 
                                 σ
                                 
                                    (
                                    u
                                    )
                                 
                                 d
                                 V
                                 −
                                 
                                    ∫
                                    S
                                 
                                 
                                    
                                       N
                                    
                                    T
                                 
                                 t
                                 
                                 d
                                 S
                                 =
                                 0
                              
                           
                        where 
                           G
                         is a set of non-linear equations in 
                           u
                        , which is the vector of nodal displacements. 
                           B
                         is the matrix relating the strain vector to displacement. The product of 
                           
                              
                                 B
                              
                              T
                           
                         and the stress vector, 
                           σ
                        , is integrated over a volume, 
                           V
                        . 
                           N
                         is the matrix of element shape functions and is integrated over a surface, 
                           S
                        . The surface traction vector is denoted by 
                           t
                        .

Eq. (4) is solved by incremental methods where loads or displacements are applied in time steps of 
                           Δ
                           t
                         to an ultimate time of 
                           t
                        . The state of the analysis is updated incrementally from time 
                           t
                         to time 
                           t
                           +
                           Δ
                           t
                        . An estimation of the roots of Eq. (4) is made, such that for the 
                           i
                           th
                         iteration:
                           
                              (5)
                              
                                 δ
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                    
                                       t
                                       +
                                       Δ
                                       t
                                    
                                 
                                 −
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       t
                                       +
                                       Δ
                                       t
                                    
                                 
                                 =
                                 −
                                 
                                    
                                       [
                                       
                                          
                                             
                                                ∂
                                                G
                                                (
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      t
                                                      +
                                                      Δ
                                                      t
                                                   
                                                
                                                )
                                             
                                             
                                                ∂
                                                u
                                             
                                          
                                       
                                       ]
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 G
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       t
                                       +
                                       Δ
                                       t
                                    
                                 
                                 )
                              
                           
                        where 
                           
                              
                                 u
                              
                              
                                 i
                              
                              
                                 t
                                 +
                                 Δ
                                 t
                              
                           
                         is the vector of nodal displacements for the 
                           i
                           th
                         iteration at time 
                           t
                           +
                           Δ
                           t
                        . The partial derivative on the right-hand side of the equation is the Jacobian matrix of the governing equations which is referred to as the global stiffness matrix, 
                           K
                        . Eq. (5) is manipulated and inverted to produce a system of linear equations:
                           
                              (6)
                              
                                 K
                                 
                                    (
                                    
                                       
                                          
                                             u
                                          
                                          
                                             i
                                          
                                          
                                             t
                                             +
                                             Δ
                                             t
                                          
                                       
                                    
                                    )
                                 
                                 δ
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 −
                                 G
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       t
                                       +
                                       Δ
                                       t
                                    
                                 
                                 )
                              
                           
                        
                     

Eq. (6) is solved for each iteration for the change in incremental displacements, 
                           δ
                           
                              
                                 u
                              
                              
                                 i
                                 +
                                 1
                              
                           
                        . In order to solve for 
                           δ
                           
                              
                                 u
                              
                              
                                 i
                                 +
                                 1
                              
                           
                         the global stiffness matrix 
                           K
                        , is inverted. Although, this is a computationally expensive operation, iteration ensures that a relatively large time increment can be used while maintaining accuracy of solution [8]. Following the iteration 
                           i
                        , 
                           δ
                           
                              
                                 u
                              
                              
                                 i
                                 +
                                 1
                              
                           
                         is determined and a better approximation of the solution is made as 
                           
                              
                                 u
                              
                              
                                 i
                                 +
                                 1
                              
                              
                                 t
                                 +
                                 Δ
                                 t
                              
                           
                        , through Eq. (5). This is used as the current approximation to the solution of the subsequent iteration 
                           i
                        .

The accuracy of the solution is confirmed by the convergence criterion where the updated value for 
                           G
                         must be less than a tolerance value. For a complex job it can be difficult to predict how long it will take to solve or even if convergence will occur.

Abaqus-Standard uses a form of the Newton–Raphson iterative solution method to solve for the incremental set of equations. Formulating and solving the Jacobian matrix is the most computationally expensive process. The modified Newton–Raphson method is the most commonly used alternative and is suitable for non-linear problems. The Jacobian is only recalculated occasionally and in cases where the Jacobian is unsymmetrical it is not necessary to calculate an exact value for it [8].

The explicit method is best applicable to solve dynamic problems where deformable bodies are interacting. The explicit method is ideally suited for analysing high-speed dynamic events where accelerations and velocities at a particular point in time are assumed to be constant during a time increment and are used to solve for the next point in time [25,24]. The explicit solver in Abaqus uses a forward Euler integration scheme as follows:
                           
                              (7)
                              
                                 
                                    
                                       u
                                    
                                    
                                       (
                                       i
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                 
                                 +
                                 Δ
                                 
                                    
                                       t
                                    
                                    
                                       (
                                       i
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    
                                       
                                          u
                                          ̇
                                       
                                    
                                    
                                       (
                                       
                                          i
                                          +
                                          
                                             1
                                             2
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       
                                          u
                                          ̇
                                       
                                    
                                    
                                       (
                                       
                                          i
                                          +
                                          
                                             1
                                             2
                                          
                                       
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          u
                                          ̇
                                       
                                    
                                    
                                       (
                                       
                                          i
                                          −
                                          
                                             1
                                             2
                                          
                                       
                                       )
                                    
                                 
                                 +
                                 
                                    
                                       Δ
                                       
                                          
                                             t
                                          
                                          
                                             (
                                             i
                                             +
                                             1
                                             )
                                          
                                       
                                       +
                                       Δ
                                       
                                          
                                             t
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    2
                                 
                                 
                                    u
                                    ¨
                                 
                              
                           
                        where 
                           u
                         is the displacement and the superscripts refer to the time increment. Explicit method is when the state of the analysis is advanced by assuming constant values for the velocities 
                           
                              u
                              ̇
                           
                         and the accelerations 
                           
                              u
                              ¨
                           
                         across half-time intervals. The accelerations are computed at the start of the increment by:
                           
                              (9)
                              
                                 
                                    u
                                    ¨
                                 
                                 =
                                 
                                    
                                       M
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 ⋅
                                 (
                                 
                                    
                                       F
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                 
                                 −
                                 
                                    
                                       I
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                 
                                 )
                              
                           
                        where 
                           F
                         is the vector of externally applied forces, 
                           I
                         is the vector of internal element forces (
                           Q
                         in some notations) and 
                           M
                         is the lumped mass matrix [8]. The explicit integration operator is conditionally stable; it can be shown that the stability limit for the operator is given in terms of the highest eigenvalue in the system:
                           
                              (10)
                              
                                 Δ
                                 t
                                 ≤
                                 
                                    2
                                    
                                       
                                          
                                             ω
                                          
                                          
                                             m
                                             a
                                             x
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 ω
                              
                              
                                 m
                                 a
                                 x
                              
                           
                         is the maximum element eigenvalue. The explicit procedure is ideally suited for analysing high-speed dynamic events [25].

In development of numerical methods for investigating brake NVH attributes experimental approaches are significant as an indication of accuracy of the proposed numerical method. The vehicle test is the most accurate representation of the NVH performance of the brake in real life since some brake noise initiation mechanisms only exist on the car and are dependent on the actual manoeuvre performed.

To validate the FEA simulation using co-simulation technique, initially a full vehicle test was conducted. This is aimed at replicating the SAE J2521 dynamometer noise search procedure. The vehicle test is performed by installing various sensors at different parts of the vehicle, to record the required data. In order to record the brake noise, microphones were installed inside the car, approximately near the driver or passenger׳s ear. To obtain a robust and reliable result from the vehicle noise search tests, the SAE J2521 test procedure manoeuvres were repeated to identify the recurrent noises. These manoeuvres are described in 
                     Table 1.


                     
                     Fig. 1 previews the vehicle test results, based on the most frequent noise occurrences obtained from a set of tests.

As seen in Fig. 1, there are occurrences of brake noise in frequency ranges of 1.9kHz and 5.2kHz, which are repeated in different manoeuvres. Therefore, the numerical analysis of the same brake unit is expected to represent instabilities in these frequencies which indicates likelihood of noise occurrence.

The FEA model of the brake system consists of all components of the corner unit, excluding the suspension links and connections where the brake unit is connected to the chassis. 
                        Fig. 2 represents this.

Major components included in the model are disc, hub, calliper (and anchor), pad assembly. Brake fluid is also simulated to replicate the transfer of pressure which is more realistic than application of force on the pistons. Each component is assigned its corresponding material properties. The material properties of the FEA model are provided in 
                        Table 2.

Different iterations of CEA form a set of squeal analysis. Variables differentiating each iteration of the CEA in this study are the level of disc-pad contact interface Coefficient of Friction (COF) and brake pressure level. Different levels of COF are simulated and analysed as a safety margin for the analysis, to ensure every possible instability is captured. Although there are slight variations on the level of COF from one stop to the next (due to the surface undergoing different temperatures), this is assumed to be minimal and the overall COF does not vary significantly. The piston pressure variations simulate different levels of application of the brake. This level of pressure takes the pressure increase of the booster into account. The analysis procedure is repeated for different combinations of friction and pressure. The set of results obtained from all different iterations mentioned forms the squeal analysis results.

FEA model of the disc is constructed using first order hexahedral and pentahedral elements. The pad assembly consists of the friction material (pad), back-plate and the shim. The back-plates and the shims are made of steel and the pads are made of anisotropic friction material. The COF used for the friction material is in the range of [0.35, 0.7]. Different parts of the pad assembly are presented in 
                        Fig. 3. All parts are modelled using the hexahedral and pentahedral elements. All parts are meshed individually and tied together.

The outer mesh of the piston is in contact with the inner surface of the bore of the calliper and the brake fluid there in between is modelled with fluid elements. Calliper body and anchor are modelled with second order tetrahedral elements. Anchor spring which holds the calliper and anchor together are modelled as 1D elements with a directional stiffness to replicate the spring. The hub is an independent component from the rest of the assembly and it spins along with the disc. Consequently it is modelled as a rigid body. 
                        Fig. 4 shows a cut-away view of the disc brake assembly showing the interaction of all components.

The FEA model is required to be the most accurate representation of the individual components of the system. Geometry of the system components and their material properties are expected to significantly contribute to this. In order to validate the FEA model of the brake, individual components are tested using impact hammer test or shaker test methods. Resonant frequencies of the component are correlated with the FEA model and the Relative Frequency Difference (RFD) [13] is obtained for each mode. 
                        Fig. 5 shows the layout of the response points on the disc, for the shaker test application. To ensure accuracy of the results, the acceleration response is recorded from more than 200 points.

An RFD of less than 5% is assumed to be acceptable in this study. Also, the Modal Assurance Criteria (MAC) [14] is evaluated for each mode, to confirm the modal behaviour of the part is matching that of the FEA model. 
                        Table 3 presents the experimental and FEA frequencies of the disc, as well as the RFD and MAC percentages which show an acceptable correlation.

The modal correlation for the disc shows a very good agreement in the natural frequencies and the predicted mode shapes. 
                        Table 4 shows the modal correlation for the brake caliper.


                        
                        Table 5 compares the experimental and numerical modal behaviours of the anchor (bracket).

The whole pad assembly was also hammer tested, and 
                        Table 6 shows the modal correlation for the pad assembly.

Once all components of the model are correlated with the experimental results for the modal behaviour, the model is expected to give accurate prediction of the unstable frequencies.

The CEA procedure occurs based on different boundary conditions, loadings and analyses steps assigned to the FEA model. As the analysis starts the central spring undergoes a tension, and this is performed to give more realistic contact behaviour between the central spring and the back-plate. Then the initial volume of various components is calculated, and there is no loading involved yet. This is performed using ⁎STEP, PERTURBATION. In the third step, an initial displacement of 0.1mm is applied to all the bolt pretention reference nodes to eliminate any rigid body motion in the system and also establish the required contacts. This will eliminate any convergence issues which may arise in preload of bolts in the next step. In the bolt clamp-up step the disc-hub and caliper-knuckle pretension nodes are preloaded. There is a 42KN load on each bolt connecting the disc to the hub, and this value is 32KN for caliper-knuckle bolts. These levels of pretention are aimed at simulating the actual level of torque applied on the respective bolts on the vehicle. Then the brake fluid pistons are pressurised to push shims and consequently the pad assembly. This pressure can vary for different stages of the analysis. The final step is when the disc is rotated. The required rotational velocity is given to all the nodes of the disc and hub assembly to simulate the rotating wheel using ⁎MOTION step. Also friction between the rotor and pads is specified by ⁎CHANGEFRICTION step. The rotational velocity assumed for the disc in the CEA is 3.68rad/s. The modal analysis is performed next. This includes extraction of natural frequencies using ⁎FREQUENCY step as a requisite to perform mode-based CEA in the next step. In the CEA unstable modes are identified. The step is performed by ⁎COMPLEXFREQUENCY. The unstable modes can be identified during complex eigenvalue extraction. The eigenvectors represent the mode shape. The unstable mode is identified during complex eigenvalue extraction as the real part of the eigenvalue corresponding to an unstable mode is positive. Although the software reports this information in the format of negative damping ratio, it is common practice to consider the absolute value of the negative damping ratio and report it as a percentage. In this study the percentage of the damping ratio is assumed as the strength of instability [4].

A co-simulation (also referred to as co-execution) is the simultaneous execution of two analyses that are executed in Abaqus-CAE in synchronization with one another using the same functionality with two different solvers. In the co-simulation analysis the FEA model is split into two sections, the implicit section which is solved in the frequency domain and the explicit section which is solved in the time domain. The analysis procedure in the implicit section is very similar to the normal CEA procedure.

For a co-simulation analysis comprising of Abaqus-Standard and Abaqus-Explicit, the interface region and coupling schemes for the co-simulation need to be specified. A common region is defined for both implicit and explicit models, referred to as the interface region. Interface region is the section for exchanging data between the two sections of the model and the coupling scheme is the time incrementation process and frequency of data exchange. An interface region can be either node sets or surfaces when coupling Abaqus-Standard to Abaqus-Explicit. The implicit region provides the boundary condition and loadings to the explicit region through these nodes.

In the FEA model, a Standard-Explicit co-simulation interaction is created to define the co-simulation behaviour. Only one Standard-Explicit co-simulation interaction can be active in a model. The settings in each co-simulation interaction must be the same in the Abaqus-Standard model and the Abaqus-Explicit model. The solution stability and accuracy can be improved by ensuring the presence of matching nodes at the interface. A model can have dissimilar meshes in regions shared in the Abaqus-Standard and Abaqus-Explicit model definitions. However, there are known limitations associated with dissimilar mesh in the co-simulation region. When the Abaqus-Standard and Abaqus-Explicit co-simulation region meshes differ, the solution accuracy may be affected.

In the co-simulation, the Abaqus-Standard can be forced to use the same increment size as Abaqus-Explicit, or use different increment sizes in Abaqus-Standard from those in Abaqus-Explicit. This is called sub-cycling. The chosen time incrementation scheme for coupling affects the solution computational cost and accuracy but not the solution stability. The sub-cycling scheme is frequently the most cost effective since Abaqus-Standard time increments are commonly much longer than Abaqus-Explicit time increments.

The implicit model of the brake includes the same components as the CEA model and the explicit model consists of the brake disc, friction materials and hub. The side surfaces of the friction materials are the implicit–explicit common nodes. The anchor mount is constrained in all degrees of freedom. The brake hub is modelled as a rigid body which is tied to the disc and rotates with it. The disc is constrained to the hub and is limited to only rotation about its central axis which resembles normal rotation of the brake disc. Rotational velocity is not supplied to the disc in this standard analysis. 
                        Fig. 6 shows the implicit model of the co-simulation.

The explicit model consists of the brake disc, hub and friction materials where the assembly is subject to rotation applied to the disc through the rigid hub. An analytical rigid surface has been created and tied to the disc. Angular velocity is applied to the rigid surface reference node, which will drive the disc. Application of angular velocity is simulated in Abaqus-Explicit. 
                        Fig. 7 shows the explicit model of the co-simulation analysis.

The disc is rotated with the initial velocity of 10km/h and by deceleration it reached a full stop. This replicates the brake system during drag and stopping in forward or reverse direction, based on the direction of the velocity. Simulation of deceleration is achieved by gradual increase in the level of applied pressure. 
                        Fig. 8 presents this gradual application of pressure, reaching 10bar in 0.1s and maintaining that level of pressure for another 0.1s.

The implicit and explicit sections of the model are not completely independent. The analysis results in the implicit section are transferred to the explicit section. This happens in time increments and either sections of the model can transfer data in predefined time increments. Abaqus uses a timing logic of the data transfer called subcycle. This means at predefined number of cycles of one solver, data is transferred to the other. 
                        Fig. 9 shows the common nodes for data transfer on the pads.

In the co-simulation analysis, the analytical surface on the disc is assumed as the major output point. This is based on the hypothesis that for all major noise initiation mechanisms in the brake system, the brake disc acts as the amplifier to the noise and it is considered as the radiator of the noise. Therefore, the co-simulation analysis is based on the hypothesis that acceleration at the disc surface, where the maximum displacement takes place, is an indication of noise-related instabilities. This is commonly on the far end of the disc where the structural support from the hub connections and the swan neck of the disc are minimal.


                        
                        Fig. 10 illustrates squeal analysis results for pressure variations of 2, 5, 10 and 25 bars and COF of 0.35, 0.45, 0.55 and 0.7. It is repeatedly mentioned in the literature that not all instabilities predicted by CEA may occur in reality as the CEA always overestimates the instabilities [5]. Analysing different COF levels helps repetition of instabilities to occur from different combinations of friction, pressure and operating direction. This can highlight the actual unstable frequency compared to the other over-predicted instabilities by CEA.

The squeal analysis results show that instabilities occur potentially in the frequency ranges of 1.9, 2.6, 3.8 and 6.2KHz. Comparison of the CEA results with the vehicle test results also reveal that among two noisy frequencies only 1.9kHz is reported, although the number of instability occurrences (only two) is not significant.

By performing the co-simulation analysis, the explicit section of the model provides time domain results. The node with the maximum displacement is identified on the disc outer layer, and acceleration is obtained as the output. Once the acceleration versus time data is obtained in Abaqus-Explicit, it is transformed into acceleration versus frequency. Peaks in the acceleration–frequency graph are assumed as an indication of squeal frequency.


                        
                        Fig. 11 presents the co-simulation analysis results. Unstable frequencies are predicted at 1.9kHz and 5.1kHz at the friction level of 0.45 and pressure of 2bar. These are in good correlation with the noisy frequencies of the vehicle test presented in Fig. 1.

@&#CONCLUSIONS@&#

A co-simulation analysis for brake noise investigation is developed using Abaqus FEA package. The brake FEA co-simulation model comprising of the disc and pads is developed. In Abaqus-Standard to Abaqus-Explicit co-simulation technique the two solvers are simultaneously running on corresponding sections of the model. The co-simulation model is capable of accurately predicting the unstable frequency by providing time-domain results in a lower computing time.

Co-simulation is a powerful tool to efficiently analyse the response of a full brake model. Co-simulation technique is capable of performing squeal analysis by simulating the rotation of the disc and the disc-pad contact interface in Abaqus-Explicit and the rest of the loadings in Abaqus-Standard.

@&#REFERENCES@&#

