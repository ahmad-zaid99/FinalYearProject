@&#MAIN-TITLE@&#Decomposition of geometric constraint graphs based on computing fundamental circuits. Correctness and complexity

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new algorithm to solve the 2D geometric constraint problem is described.


                        
                        
                           
                           The graph is decomposed according to a set of fundamental circuits.


                        
                        
                           
                           Fundamental circuits are induced by a spanning tree.


                        
                        
                           
                           We prove the algorithm soundness.


                        
                        
                           
                           The worst running time is quadratic with the number of geometric elements.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Geometric constraint solving

Graph decomposition

Fundamental circuits

Bridges

Planar embeddings

@&#ABSTRACT@&#


                  In geometric constraint solving, Decomposition–Recombination solvers (DR-solvers) refer to a general solving approach where the problem is divided into a set of sub-problems, each sub-problem is recursively divided until reaching basic problems which are solved by a dedicated equational solver. Then the solution to the starting problem is computed by merging the solutions to the sub-problems.
                  Triangle- or tree-decomposition is one of the most widely used approaches in the decomposition step in DR-solvers. It may be seen as decomposing a graph into three subgraphs such that subgraphs pairwise share one graph vertex. Shared vertices are called hinges. Then a merging step places the geometry in each sub-problem with respect to the other two.
                  In this work we report on a new algorithm to decompose biconnected geometric constraint graphs by searching for hinges in fundamental circuits of a specific planar embedding of the constraint graph. We prove that the algorithm is correct.
               

@&#INTRODUCTION@&#

Geometric constraint solving was developed as a core technology in parametric and feature-based Computer-Aided Design systems. Lately it has found a number of applications in fields like linkage design, chemical molecular modeling, computer vision and dynamic geometry.

Many attempts to provide general, powerful and efficient techniques to solve the geometric constraint problem have been reported in the literature. For an extensive review refer to  [1] and the references therein.

Among the different approaches to geometric constraint solving, we are interested here in a divide and conquer approach consisting of three steps,  [2]
                     
                        
                           1.
                           Divide the problem 
                                 P
                               into several sub-problems, say 
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       n
                                    
                                 
                              .

Solve each sub-problem 
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                               recursively with known algorithms.

Build the solution to problem 
                                 P
                               by merging the solutions to sub-problems, 
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       n
                                    
                                 
                              .

Constraint solvers that fit in this description are known as Decomposition–Recombination solvers (DR solvers). This approach has been particularly successful when the decomposition into sub-problems and subsequent recombination of solutions to these sub-problems can be described by a plan generated a priori, that is, a plan generated as a preprocessing step without actually solving the subsystems. The plan output by the DR-planner remains unchanged as numerical values of parameters change. Such a plan is known as the DR-plan and the unit in the solver that generates it is the DR-planner,  [3]. In this setting, the DR-plan is then used to drive the actual solving process, that is, computing specific coordinates that properly place geometric objects with respect to each other.

Our interest focuses on DR-solvers where the geometric constraint problem is abstracted as a graph and thus, solving the problem generically corresponds to solving the corresponding graph. Therefore the DR-planner is based on graph analysis whose operation will be purely combinatorial. We consider well-constrained problems, loosely speaking, problems where resulting geometric objects are well-defined.

In a pioneering work, Hoffmann et al.,  [3], classify graph-based DR-planners into two main categories. Planners in one category, called Constraint Shape Recognition, work by recognizing specific solvable subgraphs of known shape, most commonly, triangular patterns. DR-planners have been widely used and related literature is profuse. Examples are  [4–16]. DR-planners in the second category are called Generalized Maximum Matching planners. Planners in this category work in two steps. First they isolate certain solvable subgraphs by transforming the constraint graph into a bipartite graph where a maximum generalized matching is found. Then the DR-plan is figured out by connectivity analysis. To this category belong DR-planners reported in [17–20].

In  [21], Hoffmann et al. reported on two new DR-planners that exhibit features of both categories. The Condensed Algorithm applies repeatedly a flow-based algorithm to find minimal dense solvable subgraphs,  [22], that are subsequently extended by adding more geometric objects one at a time. The Frontier Algorithm and the Modified Frontier Algorithm are essentially improvements of the Condensed Algorithm. These algorithms have been further developed for problems considering purely distance constraint systems by Lomonosov,  [23] and by Zhou,  [24]. Surveys can be found in  [25] and  [26]. A discussion on geometric constraint solving progress and research directions can be found in  [27].

We consider geometric constraint problems in the Euclidean plane consisting of a finite set of geometric objects and a finite set of constraints defined between them. The geometric objects are drawn from a fixed set of types such as points, straight lines, circles and arcs of circle. The constraints include topological constraints such as tangency, incidence and perpendicularity, and metric constraints such as point–point distance, perpendicular point–straight line distance and line–line angle. Geometric constraint problems are always well-constrained or minimally rigid,  [28].

In this paper we develop the DR-planner introduced in  [29] in three ways: (1) we give detailed algorithms, (2) we show that the approach is sound and, (3) we prove that the runtime is 
                        O
                        
                           (
                           
                              
                                 n
                              
                              
                                 2
                              
                           
                           )
                        
                      where 
                        n
                      is the number of geometric elements in the problem. Experimental results show that for problems with 
                        3
                        ≤
                        n
                        ≤
                        200
                     , the runtime is 
                        O
                        
                           (
                           n
                           )
                        
                     .

The DR-planner belongs to the constraint shape recognition category and is inspired in the algorithm for finding triconnected components of a graph reported by Miller and Ramachandran in  [30]. The strategy used to divide a graph into subgraphs is the tree- or triangle-decomposition approach reported in  [31]. Decomposition may be understood as decomposing a problem into three sub-problems such that pairwise share a common geometric primitive, that we call hinge. Recombination is to place three primitives with respect to each other. In this approach, constraint problems consisting of three primitives are used as building blocks for larger constraint problems.

The DR-planner searches for a set of three hinges in fundamental circuits associated to a given spanning tree of the constraint graph. The algorithm has two main steps, (i) transforming the given graph into a simpler, planar graph and (ii) computing a planar embedding for the transformed graph where hinges are identified as a set of three vertices shared by two faces. We have proved that the algorithm is correct in the following sense. First the graph transformation preserves the hinges. Second hinges, if present, always belong to the common boundary of two faces in a planar embedding of the transformed constraint graph.

The rest of this paper is organized as follows. In Section  2 we recall some basic concepts from graph theory and planar embeddings that we shall use later on. For the sake of completeness, we include in Section  3 a short description of tree-decomposability, a basic concept in our DR-planner. In Section  4 we describe our DR-planner and in Section  5 we provide an additional case study to illustrate how the approach works. In Section  6 we prove that the algorithm is correct. The algorithm worst running time is analyzed in Section  7. Section  8 gives experimental algorithm runtime values. Finally, in Section  9 we offer a short discussion and a couple of issues that deserve further work.

In this section we recall basic terminology of graph theory, the concept of geometric constraint graph associated to a geometric problem defined by constraints, and some definitions related to geometric constraint graphs. For more information on general graphs theory we refer the reader to Even  [32] and to Thulasiraman and Swamy  [33]. Concerning geometric constraint graphs the reader can check the works by Hoffman et al.  [34] and Joan-Arinyo et al.  [31].

In this work, a graph 
                        
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         is a finite set 
                           V
                         of nodes or vertices and a collection of edges, 
                           E
                        . An edge is an unordered pair 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         of distinct vertices 
                           u
                           ,
                           v
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                        . In general 
                           V
                           
                              (
                              G
                              )
                           
                         and 
                           E
                           
                              (
                              G
                              )
                           
                         will denote respectively the set of vertices and edges of the graph 
                           G
                        .

The degree of a vertex 
                           v
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                         is the number of edges in 
                           E
                           
                              (
                              G
                              )
                           
                         incident to 
                           v
                        .

A path is a sequence of vertices 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 v
                              
                              
                                 n
                              
                           
                         such that 
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                              )
                           
                         is an edge for 
                           1
                           ≤
                           i
                           ≤
                           n
                        . A path is simple if all vertices on the path are distinct.

In this work, a circuit is a simple path that does not contain any repeated vertices except 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 v
                              
                              
                                 n
                              
                           
                         which are the same. In what follows, we shall denote the set of vertices in a circuit as 
                           C
                           =
                           
                              〈
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    n
                                    −
                                    1
                                 
                              
                              〉
                           
                         and we shall consider that vertices are circularly sorted. For example, 
                           
                              〈
                              b
                              ,
                              d
                              ,
                              e
                              ,
                              c
                              〉
                           
                         and 
                           
                              〈
                              d
                              ,
                              e
                              ,
                              c
                              ,
                              b
                              〉
                           
                         are equivalent descriptions for the circuit in Fig. 1
                        . Whether vertices are sorted clockwise or counterclockwise is irrelevant.

A graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         is connected if there exists a path between every pair of vertices in 
                           G
                        , otherwise 
                           G
                         is disconnected. The maximal connected subgraphs of a disconnected graph 
                           G
                         are the connected components of 
                           G
                        .

Let 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         be a connected graph. A vertex 
                           v
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                         is an articulation vertex if 
                           V
                           
                              (
                              G
                              )
                           
                           −
                           
                              {
                              v
                              }
                           
                         is disconnected. If 
                           v
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                         is an articulation vertex, there are vertices 
                           u
                           ,
                           w
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                        , with 
                           u
                           ≠
                           v
                         and 
                           w
                           ≠
                           v
                         such that 
                           v
                         is on every path connecting vertices 
                           u
                         and 
                           w
                        .

A non-separable or biconnected graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         has no articulation vertices, otherwise it is separable. A biconnected component of a connected graph 
                           G
                         is a maximal biconnected subgraph of 
                           G
                        . A connected graph can be decomposed into biconnected components. For any biconnected graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                        , given a pair of vertices 
                           u
                           ,
                           v
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                         with 
                           u
                           ≠
                           v
                        , there are, at least, two disjoint paths connecting 
                           u
                         and 
                           v
                        .

The connectivity of a graph 
                           G
                         is the minimum number 
                           k
                         of vertices that must be removed to disconnect 
                           G
                        . If the connectivity of 
                           G
                         is 
                           k
                        , we write 
                           κ
                           
                              (
                              G
                              )
                           
                           =
                           k
                        . For a disconnected graph 
                           G
                        , 
                           κ
                           
                              (
                              G
                              )
                           
                           =
                           0
                        . For a connected graph 
                           G
                        , 
                           κ
                           
                              (
                              G
                              )
                           
                           ≥
                           1
                        . A separable graph 
                           G
                         has 
                           κ
                           
                              (
                              G
                              )
                           
                           =
                           1
                        . A biconnected graph 
                           G
                         has 
                           κ
                           
                              (
                              G
                              )
                           
                           ≥
                           2
                        . In a similar way a graph 
                           G
                         with 
                           κ
                           
                              (
                              G
                              )
                           
                           ≥
                           3
                         is called triconnected. Biconnected graphs can be decomposed into triconnected components.

A graph is said to be acyclic if it has no circuits. A tree of a graph 
                           G
                         is a connected acyclic subgraph of 
                           G
                        . A spanning tree 
                        
                           T
                         for a graph 
                           G
                         is a tree that connects all the vertices in 
                           V
                           
                              (
                              G
                              )
                           
                        . The edges of a spanning tree 
                           T
                         are called branches. The edges 
                           E
                           
                              (
                              G
                              )
                           
                         which are not in 
                           T
                         are called chords. If 
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              |
                           
                           =
                           n
                         and 
                           
                              |
                              E
                              
                                 (
                                 G
                                 )
                              
                              |
                           
                           =
                           m
                         the spanning tree 
                           T
                         has 
                           n
                           −
                           1
                         branches and 
                           m
                           −
                           n
                           +
                           1
                         chords. A connected graph always contains a spanning tree.

For a given spanning tree, a unique circuit can be obtained by adding to the spanning tree each of the chords. The set of 
                           m
                           −
                           n
                           +
                           1
                         circuits obtained in this way is called the fundamental system relative to the spanning tree. A circuit in the fundamental system is called a fundamental circuit.

The ring sum of two graphs 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                           =
                           
                              (
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                           =
                           
                              (
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    E
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is defined as 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                           ⊕
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                           =
                           
                              (
                              V
                              1
                              ∪
                              V
                              2
                              ,
                              
                                 (
                                 E
                                 1
                                 ∪
                                 E
                                 2
                                 )
                              
                              −
                              
                                 (
                                 
                                    
                                       E
                                    
                                    
                                       1
                                    
                                 
                                 ∩
                                 
                                    
                                       E
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         with isolated vertices dropped.

A result of graph theory that we will use later on is the Fundamental Circuit Theorem,  [32]. If 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         is a graph and 
                           T
                         a specific spanning tree, any cycle 
                           C
                         in 
                           G
                         can be expressed as the ring sum of some fundamental circuits of 
                           G
                         with respect to 
                           T
                        . Further, no fundamental circuit is the ring sum of any of the others.

Planar graphs and embeddings are topics widely discussed in the literature. See, for example,  [35,36]. Here we recall basic concepts that we will use later on.

A graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         is planar if there is a mapping from every vertex 
                           v
                           ∈
                           V
                         to a point in a two-dimensional space, and from every edge 
                           e
                           =
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           ⊆
                           E
                         to a plane continuous curve such that the bounding points of each curve are the points mapped from the edge end vertices and all curves are disjoint except on their bounding points. The resulting projection is called a plane graph or planar embedding. In this work we consider planar graphs and embeddings, therefore we will use just the word embedding to refer to a planar embedding.

The complement with respect to the two-dimensional plane of an embedding is a collection of two-dimensional regions, from now on faces. Since we consider well-constrained problems, every face is homeomorphic to an open, regularized disc. An embedding of a planar graph has an external or unbounded face however, none of the faces of the embedding have particular privileges. In general, the embedding of a planar graph is not unique.

Each face is bounded by a circuit of mapped vertices that unambiguously describe the face. Fig. 1 depicts a planar embedding of a graph with five faces. Face 
                           
                              
                                 f
                              
                              
                                 u
                              
                           
                           =
                           
                              〈
                              a
                              ,
                              b
                              ,
                              d
                              ,
                              f
                              ,
                              g
                              ,
                              e
                              ,
                              c
                              〉
                           
                         is the unbounded face and the other faces are 
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           =
                           
                              〈
                              a
                              ,
                              b
                              ,
                              c
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              d
                              ,
                              e
                              ,
                              c
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 3
                              
                           
                           =
                           
                              〈
                              e
                              ,
                              c
                              〉
                           
                         and 
                           
                              
                                 f
                              
                              
                                 4
                              
                           
                           =
                           
                              〈
                              d
                              ,
                              f
                              ,
                              g
                              ,
                              e
                              〉
                           
                        .

In this paper we consider constraint problems in the Euclidean space defined by giving a set of geometric elements like points, lines, line segments, circles and circular arcs, along with a set of relationships, called constraints, like point–point distance, angle between straight lines, incidence and tangency.

Among the many general, powerful and efficient methods to solve systems of geometric constraint problems we focus on the constructive, graph-based approach. The method first transforms the problem input at the user interface into a constraint graph, 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                     , where vertices 
                        V
                        
                           (
                           G
                           )
                        
                      stand for geometric elements and edges 
                        E
                        
                           (
                           G
                           )
                        
                      stand for geometric constraints.

Geometric constraint problems we consider can be abstracted as graphs that belong to a class called tree decomposable or triangle decomposable graphs. Let us recall here the basic concepts. For a more in depth formal development of this topic see  [7] and  [10].

First we introduce the concept of set decomposition illustrated in Fig. 2
                     . Let 
                        S
                      be a set with, at least, three different members, say 
                        a
                        ,
                        b
                        ,
                        c
                     . We say that three subsets of 
                        S
                     , say 
                        
                           
                              S
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              S
                           
                           
                              2
                           
                        
                      and 
                        
                           
                              S
                           
                           
                              3
                           
                        
                      is a set decomposition of 
                        S
                      if (i) 
                        
                           
                              S
                           
                           
                              1
                           
                        
                        ∪
                        
                           
                              S
                           
                           
                              2
                           
                        
                        ∪
                        
                           
                              S
                           
                           
                              3
                           
                        
                        =
                        S
                     , (ii) 
                        
                           
                              S
                           
                           
                              1
                           
                        
                        ∩
                        
                           
                              S
                           
                           
                              2
                           
                        
                        =
                        
                           {
                           a
                           }
                        
                     , (iii) 
                        
                           
                              S
                           
                           
                              1
                           
                        
                        ∩
                        
                           
                              S
                           
                           
                              3
                           
                        
                        =
                        
                           {
                           b
                           }
                        
                      and (iv) 
                        
                           
                              S
                           
                           
                              2
                           
                        
                        ∩
                        
                           
                              S
                           
                           
                              3
                           
                        
                        =
                        
                           {
                           c
                           }
                        
                     . Shared geometric elements 
                        a
                        ,
                        b
                      and 
                        c
                      are called hinges.

Next we recall the concept of set decomposition of a graph. If 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      is a constraint graph, the subsets 
                        
                           
                              V
                           
                           
                              1
                           
                        
                        
                           (
                           G
                           )
                        
                        ,
                        
                           
                              V
                           
                           
                              2
                           
                        
                        
                           (
                           G
                           )
                        
                      and 
                        
                           
                              V
                           
                           
                              3
                           
                        
                        
                           (
                           G
                           )
                        
                      define a set decomposition of 
                        G
                      if they are a set decomposition of 
                        V
                        
                           (
                           G
                           )
                        
                      and for every edge 
                        e
                        =
                        
                           (
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                           )
                        
                      with 
                        e
                        ∈
                        E
                        
                           (
                           G
                           )
                        
                     , 
                        
                           
                              v
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              v
                           
                           
                              2
                           
                        
                        ∈
                        V
                        
                           (
                           
                              
                                 G
                              
                              
                                 i
                              
                           
                           )
                        
                      for some 
                        i
                     , 
                        1
                        ≤
                        i
                        ≤
                        3
                     . Roughly speaking, a set decomposition of a graph 
                        G
                     , is a set decomposition of the set of vertices 
                        V
                        
                           (
                           G
                           )
                        
                      such that the two ends of each edge belong to a given subset of vertices.

Finally we recall the concept of tree decomposition of a graph illustrated in Fig. 3
                     .

Let 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      be a graph. We say that a ternary tree 
                        T
                      is a tree decomposition of 
                        G
                      if 
                        
                           1.
                           
                              
                                 V
                                 
                                    (
                                    G
                                    )
                                 
                               is the root of 
                                 T
                              ,

Each node 
                                 
                                    
                                       V
                                    
                                    
                                       ′
                                    
                                 
                                 ⊂
                                 V
                                 
                                    (
                                    G
                                    )
                                 
                               of 
                                 T
                               is the father of exactly three nodes, say 
                                 
                                    
                                       V
                                    
                                    
                                       1
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       2
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       3
                                    
                                    
                                       ′
                                    
                                 
                              , which are a set decomposition of the subgraph of 
                                 G
                               induced by 
                                 
                                    
                                       V
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    (
                                    G
                                    )
                                 
                              , and

Each leaf node contains exactly two vertices 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    }
                                 
                               of 
                                 V
                               such that edge 
                                 
                                    (
                                    a
                                    ,
                                    b
                                    )
                                 
                               is in 
                                 E
                                 
                                    (
                                    G
                                    )
                                 
                              .

If 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      is the graph of an abstract geometric constraint problem, a tree decomposition of 
                        G
                      can be seen as a construction plan that solves the problem at hand. Each node in the tree stands for a rigid object, called cluster, built on the geometric objects included in the node. Leaf nodes represent elemental placement problems corresponding to two geometric elements and the constraint defined on them. Examples are: two points at a given distance, a point and a straight segment at a given distance, two straight segments at a given angle and so on.

Each internal node in the tree decomposition represents the merging of three solved clusters into a larger rigid cluster by application of a specific solving rule. The root node includes all the geometric elements in the problem and represents a solution instance.

In this section we describe an algorithm to compute a set decomposition of a constraint graph. A recursive application of this algorithm yields a decomposition of a tree decomposable graph. Decomposition algorithms for 0-connected and 1-connected geometric constraint graphs are trivial. Besides, Todd in  [37] reported a simple method to decompose graphs by isolating vertices of degree two. Therefore in this work we focus on decomposing biconnected constraint graphs whose vertices have degree three or higher. As we have said, in this work we focus on decomposing graphs 
                        G
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      for well-constrained geometric problems for which the two following relations hold  [28],
                        
                           1.
                           
                              
                                 
                                    |
                                    E
                                    |
                                 
                                 =
                                 2
                                 
                                    |
                                    V
                                    |
                                 
                                 −
                                 3
                              ,

For each subgraph 
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    (
                                    
                                       
                                          V
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          E
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                               with 
                                 
                                    
                                       V
                                    
                                    
                                       ′
                                    
                                 
                                 ⊂
                                 V
                               and 
                                 
                                    
                                       E
                                    
                                    
                                       ′
                                    
                                 
                                 ⊂
                                 E
                              , the relationship 
                                 
                                    |
                                    
                                       
                                          E
                                       
                                       
                                          ′
                                       
                                    
                                    |
                                 
                                 ≤
                                 2
                                 
                                    |
                                    
                                       
                                          V
                                       
                                       
                                          ′
                                       
                                    
                                    |
                                 
                                 −
                                 3
                              .

The main idea underlying the algorithm is that if there is a planar embedding of either the graph 
                        G
                      or a graph resulting from a specific transformation of 
                        G
                     , where two faces share three vertices, say 
                        
                           {
                           a
                           ,
                           b
                           ,
                           c
                           }
                        
                     , then these vertices are hinges for 
                        G
                      that define a set decomposition of 
                        V
                        
                           (
                           G
                           )
                        
                     .

The algorithm is based on the decomposition of a graph 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                     , according to the bridges induced in 
                        G
                      by a circuit 
                        C
                     , and is inspired in the algorithm for finding the triconnected components of a graph reported by Miller and Ramachandran  [30]. If 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      is the geometric constraint graph, the algorithm starts by computing a spanning tree for 
                        G
                      using a depth-first search and computing the set of fundamental circuits induced by the spanning tree. Then, the algorithm seeks for a fundamental circuit 
                        C
                      with a set of hinges that define a set decomposition of 
                        V
                        
                           (
                           G
                           )
                        
                     . If the algorithm fails in finding a fundamental circuit with a set of hinges, the input graph is not tree decomposable.

In what follows we describe in detail each step in the algorithm shown in Fig. 4
                     . We shall illustrate how the algorithm works by taking as a running example the bridge coplanar compound truss depicted in Fig. 5
                     .


                        Fig. 6
                        (a) shows the graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         which captures the truss as a geometric constraint problem. Vertices 
                           V
                           
                              (
                              G
                              )
                           
                         are the truss joints and bars connecting two joints define the set of edges 
                           E
                           
                              (
                              V
                              )
                           
                        . Here constraints are distances between joints.

The algorithm starts by computing a spanning tree to the graph 
                           G
                         by applying a depth-first search technique  [33]. Assuming that vertex 
                           a
                         has been taken as the starting root, Fig. 6(b) shows the resulting spanning tree. The set of fundamental circuits induced by the spanning tree considered are depicted in Fig. 7
                        . Notice that every chord in the spanning tree induces a fundamental circuit.

Following  [32], we recall the concepts of components and bridges induced in a graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         by a subset of vertices 
                           S
                           ⊂
                           V
                           
                              (
                              G
                              )
                           
                        .

Let 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         be a non-separable graph and let 
                           S
                           ⊆
                           V
                           
                              (
                              G
                              )
                           
                        . Consider the partition of the set 
                           V
                           −
                           S
                         into classes such that two vertices are in the same class if and only if there is a path connecting them which does not include any vertex of 
                           S
                        . Let 
                           ≡
                         denote this relationship and assume that 
                           V
                           
                              (
                              G
                              )
                           
                           −
                           S
                           
                              
                                 /
                              
                              
                                 ≡
                              
                           
                           =
                           
                              {
                              
                                 
                                    K
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    K
                                 
                                 
                                    m
                                 
                              
                              }
                           
                        . Each class 
                           
                              
                                 K
                              
                              
                                 i
                              
                           
                         defines a non-singular component, 
                           H
                           =
                           
                              (
                              
                                 
                                    V
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                                 
                                    E
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         of 
                           G
                        , such that
                           
                              •
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          ′
                                       
                                    
                                    ⊃
                                    
                                       
                                          K
                                       
                                       
                                          i
                                       
                                    
                                 ,


                                 
                                    
                                       
                                          V
                                       
                                       
                                          ′
                                       
                                    
                                  includes all the vertices of 
                                    C
                                  which are connected by an edge to a vertex of 
                                    
                                       
                                          K
                                       
                                       
                                          i
                                       
                                    
                                 .


                                 
                                    
                                       
                                          E
                                       
                                       
                                          ′
                                       
                                    
                                    ⊆
                                    E
                                  contains all those edges of 
                                    E
                                    
                                       (
                                       G
                                       )
                                    
                                  which have at least one end vertex in 
                                    
                                       
                                          K
                                       
                                       
                                          i
                                       
                                    
                                 .

The dashed circle in Fig. 8
                         shows the class 
                           
                              
                                 K
                              
                              
                                 1
                              
                           
                         defined by the circuit 
                           
                              
                                 C
                              
                              
                                 5
                              
                           
                        , depicted in thick line, in the running truss graph example. The circuit 
                           
                              
                                 C
                              
                              
                                 5
                              
                           
                         has only one class.

An edge 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                           ∈
                           E
                           
                              (
                              G
                              )
                           
                        , where both 
                           u
                           ,
                           v
                           ∈
                           S
                        , defines a singular component denoted 
                           H
                           =
                           
                              (
                              
                                 {
                                 u
                                 ,
                                 v
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    u
                                    ,
                                    v
                                    )
                                 
                                 }
                              
                              )
                           
                        . Therefore a set of vertices 
                           S
                           ⊂
                           V
                           
                              (
                              G
                              )
                           
                         induces a decomposition of 
                           G
                         into a set of singular and non-singular components, say 
                           
                              {
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    H
                                 
                                 
                                    n
                                 
                              
                              }
                           
                        . Note that two components share no edges, and the only vertices they can share are vertices of 
                           S
                        .

Consider again the circuit 
                           
                              
                                 C
                              
                              
                                 5
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              k
                              ,
                              j
                              ,
                              c
                              ,
                              i
                              ,
                              h
                              ,
                              d
                              ,
                              e
                              〉
                           
                         in the running graph example. The set of components is shown in Fig. 9
                        . The labeled subgraph, 
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                           =
                           
                              (
                              
                                 {
                                 a
                                 ,
                                 e
                                 ,
                                 f
                                 ,
                                 g
                                 ,
                                 b
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    a
                                    ,
                                    e
                                    )
                                 
                                 ,
                                 
                                    (
                                    a
                                    ,
                                    g
                                    )
                                 
                                 ,
                                 
                                    (
                                    a
                                    ,
                                    f
                                    )
                                 
                                 ,
                                 
                                    (
                                    f
                                    ,
                                    g
                                    )
                                 
                                 ,
                                 
                                    (
                                    f
                                    ,
                                    b
                                    )
                                 
                                 ,
                                 
                                    (
                                    g
                                    ,
                                    b
                                    )
                                 
                                 }
                              
                              )
                           
                         defines a non-singular component. The remaining unlabeled subgraphs correspond to singular components.

Let 
                           C
                         be a circuit of the graph 
                           G
                         and consider the set of vertices 
                           V
                           
                              (
                              C
                              )
                           
                        . Let 
                           H
                         be the set of components induced in 
                           G
                         by 
                           V
                           
                              (
                              C
                              )
                           
                        . A bridge, 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                        , is a component 
                           
                              
                                 H
                              
                              
                                 i
                              
                           
                           ∈
                           H
                         whose edges do not belong to 
                           C
                        . A bridge is said to be singular if the corresponding component is singular, otherwise it is non-singular. The vertices of a bridge 
                           v
                           ∈
                           V
                           
                              (
                              H
                              )
                           
                         such that 
                           v
                           ∈
                           V
                           
                              (
                              C
                              )
                           
                         are called attachments and will be denoted as 
                           a
                           t
                           
                              (
                              H
                              )
                           
                        . In what follows, vertices in bridge attachments are considered sorted according to the circular order defined in the vertices of the circuit which originated the bridges. The set of bridges in the truss graph corresponding to the components in Fig. 9 is depicted in Fig. 10
                        . We denote them as 
                           
                              
                                 B
                              
                              
                                 1
                              
                           
                           =
                           
                              (
                              
                                 {
                                 a
                                 ,
                                 e
                                 ,
                                 f
                                 ,
                                 g
                                 ,
                                 b
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    a
                                    ,
                                    e
                                    )
                                 
                                 ,
                                 
                                    (
                                    a
                                    ,
                                    f
                                    )
                                 
                                 ,
                                 
                                    (
                                    a
                                    ,
                                    g
                                    )
                                 
                                 ,
                                 
                                    (
                                    f
                                    ,
                                    g
                                    )
                                 
                                 ,
                                 
                                    (
                                    f
                                    ,
                                    b
                                    )
                                 
                                 ,
                                 
                                    (
                                    g
                                    ,
                                    b
                                    )
                                 
                                 }
                              
                              )
                           
                        , 
                           
                              
                                 B
                              
                              
                                 2
                              
                           
                           =
                           
                              (
                              
                                 {
                                 b
                                 ,
                                 j
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    b
                                    ,
                                    j
                                    )
                                 
                                 }
                              
                              )
                           
                        , 
                           
                              
                                 B
                              
                              
                                 3
                              
                           
                           =
                           
                              (
                              
                                 {
                                 k
                                 ,
                                 c
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    k
                                    ,
                                    c
                                    )
                                 
                                 }
                              
                              )
                           
                        , 
                           
                              
                                 B
                              
                              
                                 4
                              
                           
                           =
                           
                              (
                              
                                 {
                                 c
                                 ,
                                 e
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    c
                                    ,
                                    e
                                    )
                                 
                                 }
                              
                              )
                           
                        , 
                           
                              
                                 B
                              
                              
                                 5
                              
                           
                           =
                           
                              (
                              
                                 {
                                 c
                                 ,
                                 h
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    c
                                    ,
                                    h
                                    )
                                 
                                 }
                              
                              )
                           
                         and 
                           
                              
                                 B
                              
                              
                                 6
                              
                           
                           =
                           
                              (
                              
                                 {
                                 i
                                 ,
                                 d
                                 }
                              
                              ,
                              
                                 {
                                 
                                    (
                                    i
                                    ,
                                    d
                                    )
                                 
                                 }
                              
                              )
                           
                        .

Let 
                           C
                           =
                           
                              〈
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    n
                                 
                              
                              〉
                           
                         be the fundamental circuit under consideration and let 
                           B
                         be a bridge with attachments 
                           a
                           t
                           
                              (
                              B
                              )
                           
                           =
                           
                              {
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    a
                                 
                                 
                                    m
                                 
                              
                              }
                           
                           ⊂
                           V
                           
                              (
                              C
                              )
                           
                         where vertices are sorted according to the circular order in 
                           C
                        . We define the span of a bridge 
                           B
                         over a circuit 
                           C
                         by 
                           s
                           p
                           
                              (
                              B
                              )
                           
                           =
                           
                              {
                              v
                              ∈
                              V
                              
                                 (
                                 C
                                 )
                              
                              |
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              <
                              v
                              <
                              
                                 
                                    a
                                 
                                 
                                    m
                                 
                              
                              }
                           
                        . By span length we mean the number of vertices in the span plus two.

The algorithm used to compute the set of bridges is a depth-first search slightly modified to account for halting recursive calls when reaching bridge attachments. The algorithm is described in the Appendix in Fig. A.29 where 
                           e
                         denotes an edge in 
                           E
                           
                              (
                              G
                              )
                           
                         bounded by vertices 
                           e
                           .
                           v
                           ,
                           e
                           .
                           w
                           ∈
                           V
                           
                              (
                              G
                              )
                           
                        . In what follows, usual notation for LIFO and FIFO data structures has been used,  [38].

A star graph,  [32], is a connected graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         with one vertex 
                           v
                           ∈
                           V
                         called center with degree greater than 1 and such that for each vertex 
                           
                              
                                 v
                              
                              
                                 i
                              
                           
                           ∈
                           V
                           −
                           
                              {
                              v
                              }
                           
                         the degree is 1.

Now consider a graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         and a fundamental circuit 
                           C
                           ⊂
                           V
                           
                              (
                              G
                              )
                           
                         that induces in 
                           G
                         the set of bridges 
                           B
                           =
                           
                              {
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    B
                                 
                                 
                                    m
                                 
                              
                              }
                           
                        . Let 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    V
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    E
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         be a bridge in 
                           B
                         such that 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              {
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    a
                                 
                                 
                                    n
                                 
                              
                              }
                           
                           ⊆
                           
                              
                                 V
                              
                              
                                 i
                              
                           
                        . We define the star graph 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         associated to bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         as the graph such that 
                           V
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              {
                              x
                              ,
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    a
                                 
                                 
                                    n
                                 
                              
                              }
                           
                        , where 
                           x
                         is a new vertex, and 
                           E
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              {
                              
                                 (
                                 x
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                              ,
                              1
                              ≤
                              j
                              ≤
                              n
                              }
                           
                        .

Let 
                           G
                         be a graph in the conditions described above. We define the collapsed graph of 
                           G
                         as the graph resulting from replacing each bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         with the corresponding star graph 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        . The algorithm is trivial and is omitted.

For the circuit 
                           
                              
                                 C
                              
                              
                                 5
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              k
                              ,
                              j
                              ,
                              c
                              ,
                              i
                              ,
                              h
                              ,
                              d
                              ,
                              e
                              〉
                           
                         in the running truss graph example and the set of bridges 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                           ,
                           1
                           ≤
                           i
                           ≤
                           6
                         listed above, the collapsed graph resulting by replacing every bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         by the corresponding star graph 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         is shown in Fig. 11
                        (a) where each bridge is identified by its center vertex.

Let 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         be the collapsed graph resulting from replacing the bridges induced by the fundamental circuit 
                           C
                         in the graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         with the associated star graphs. Let 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 j
                              
                           
                         be two stars in 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         attached to 
                           C
                        . We say that stars 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 j
                              
                           
                         
                        interlace if one of the following two holds,  [32]:


                        
                           
                              1.
                              There are four distinct vertices 
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    ,
                                    d
                                  in increasing order in 
                                    C
                                  such that either 
                                    a
                                    ,
                                    c
                                  belong to 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                  and 
                                    b
                                    ,
                                    d
                                  belong to 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  or 
                                    a
                                    ,
                                    c
                                  belong to 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  and 
                                    b
                                    ,
                                    d
                                  belong to 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 ; or


                                 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                  and 
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  share three distinct vertices.

Let 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 j
                              
                           
                         be two star graphs with centers 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                         respectively and 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ≠
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                        . By merging stars 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 j
                              
                           
                         we mean replacing these stars with a new one 
                           
                              
                                 S
                              
                              
                                 i
                                 j
                              
                           
                         formed by combining the attachments of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 j
                              
                           
                         and identifying the centers. Given a collapsed graph 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                        , the merged graph 
                        
                           
                              
                                 G
                              
                              
                                 ″
                              
                           
                         is obtained from 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         by merging all pairs of stars that interlace.

Miller and Ramachandran reported in  [39] on a scan-line linear algorithm to find the merging of a set of star graphs. As described, we understand that as the algorithm scans the set of sorted edges, stars stored in the stack must be sorted from bottom to top according to decreasing indexes of the last attachment of each star graph. This ordering defines an invariant the algorithm must preserve. As far as each vertex in the cycle 
                           C
                         is an attachment for at most one star edge, the order defined on the set of vertices and the one defined on the set of edges are coincident and just scanning edges automatically preserves the stack invariant. However, when two or more edges belonging to different stars in the input graph share as attachment a vertex in the cycle 
                           C
                        , the stack may store stars which do not interlace with the star the edge at hand belongs to. In this scenario, the stack invariant no longer holds if the star is directly pushed on the stack.

To illustrate the situation consider the graph example in Fig. 12
                        . The set of sorted edges is {
                           
                              
                                 e
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 4
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 6
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 5
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 3
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 7
                              
                           
                        }. After visiting edges 
                           
                              
                                 e
                              
                              
                                 0
                              
                           
                         and 
                           
                              
                                 e
                              
                              
                                 4
                              
                           
                        , the stack stores from bottom to top star bridges 
                           
                              
                                 B
                              
                              
                                 0
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 2
                              
                           
                        . When considering edge 
                           
                              
                                 e
                              
                              
                                 2
                              
                           
                        , we found that star bridge 
                           
                              
                                 B
                              
                              
                                 1
                              
                           
                         does not interlace with any star in the stack. If star bridge 
                           
                              
                                 B
                              
                              
                                 1
                              
                           
                         is pushed onto the stack, the stack invariant no longer holds and the algorithm fails.

To deal with problems where star bridges attachments are common to more than one star bridge in the input graph, we have generalized the approach reported in  [39]. Our algorithm is outlined in Figs. A.30–A.32. The algorithm uses three main data structures: two bucket-sorted tables to store respectively bridges and edges, and a stack to dynamically manage the set of bridges currently under consideration. Additionally, we use a stack of bridges for housekeeping. So far no attempt has been made to minimize the amount of storage used by the algorithm. Function isTheFirstBridge(
                           b
                           r
                           i
                           d
                           g
                           e
                        , 
                           B
                        ) in the algorithm of Fig. A.32 returns true if and only if the last edge of the popped bridge, 
                           b
                           r
                           i
                           d
                           g
                           e
                        , is no smaller than the last edge of the current bridge, 
                           B
                        . See  [39].

The main algorithm in Fig. A.30, first merges bridges with the same span. Next edges are sorted in increasing order of their attachment in 
                           V
                           
                              (
                              C
                              )
                           
                        . Edges with the same attachment are sorted in increasing order of the last edge of the bridge they belong to with ties broken by ordering in decreasing order of the first edge of bridges they belong to, [39]. Since no two bridges have the same span, ties are always broken. Then the bridge to which the first edge in the sorted edges belongs to is pushed on the stack. The remaining edges are sequentially visited and dispatched according to whether the edge is the last edge, an internal edge or the first edge in the bridge they belong to.

The algorithm leverages from merging at the beginning bridges with the same span in three ways. First bridges leading to faces in the final planar embedding whose attachments do not contribute to the set of hinges are removed. Consider a circuit 
                           C
                         with bridges 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         such that 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                           ⊂
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         as depicted in Fig. 13
                        (a). Clearly, vertices common to 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and 
                           V
                           
                              (
                              C
                              )
                           
                         are just the first and last vertices in 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         which are coincident respectively with the first and last vertices in 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        . Therefore the contribution of bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         to the set of hinges is subsumed by 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         and there is no need for further considering 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                        .

Then it is easy to see that if two bridges, say 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                        , share three attachments and at least one of them has more than three vertices, the first part of the interlacing definition given in Section  4.4 holds. Thus, the second part of the definition concerning bridges which share three attachments is introduced just to consider the case where bridges 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         have both exactly three attachments common to both bridges. See Fig. 13(b). From the point of view of how bridges 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         contribute to the existence of hinges, clearly we only need to consider one of them. Thus merging them does not result in the loose of any hinge. Besides, the merging of these bridges frees our merging algorithm from the need of checking for the second part of the interlacing definition.

Finally, if 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         and 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         or 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         or both have four or more attachments, then either 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         and one of the bridges can be removed or 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                         interlace and can trivially be merged.


                        Fig. 11(b) shows a collapsed graph and the corresponding merged graph output by our algorithm. Notice that now merged star bridges with center vertices 
                           
                              
                                 x
                              
                              
                                 23
                              
                           
                         and 
                           
                              
                                 x
                              
                              
                                 56
                              
                           
                         do not interlace. Moreover the resulting merged graph has a planar embedding. See Even,  [32].

The next stage is to compute a planar embedding for the planar merged graph 
                           
                              
                                 G
                              
                              
                                 ″
                              
                           
                         induced in the input graph 
                           G
                         by a fundamental circuit. In the running case we consider the circuit 
                           
                              
                                 C
                              
                              
                                 5
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              k
                              ,
                              j
                              ,
                              c
                              ,
                              i
                              ,
                              h
                              ,
                              d
                              ,
                              e
                              〉
                           
                         depicted in Fig. 7.

Many general algorithms to compute embeddings of planar graphs have been published. See, for example  [40,35,36]. However we are interested in finding a specific embedding. According to the Jordan Curve Theorem,  [41], embedding the circuit 
                           C
                         in the plane results in a planar embedding with two faces, one bounded face, 
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                        , and one unbounded face, 
                           
                              
                                 f
                              
                              
                                 u
                              
                           
                        . See Fig. 14
                        . We want our embedding to preserve the bounded face 
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                        .

We assume that circuit vertices 
                           V
                           
                              (
                              C
                              )
                           
                         are circularly labeled with increasing label values and that bridges attachments are accordingly sorted. Moreover, we assume that if the circuit under consideration is 
                           C
                           =
                           
                              〈
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    n
                                 
                              
                              〉
                           
                        , the attachments of each bridge 
                           a
                           t
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              {
                              
                                 
                                    v
                                 
                                 
                                    i
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    m
                                 
                              
                              }
                           
                         fulfill 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                           ≤
                           
                              
                                 v
                              
                              
                                 i
                                 1
                              
                           
                         and 
                           
                              
                                 v
                              
                              
                                 i
                                 m
                              
                           
                           ≤
                           
                              
                                 v
                              
                              
                                 n
                              
                           
                        . Notice that this assumption entails, at most, a coherent relabeling of vertices in the circuit and bridges.

Our algorithm first sorts edges in the merged graph in increasing order of their attachments in circuit 
                           C
                        . Notice that given a vertex 
                           v
                           ∈
                           V
                           
                              (
                              C
                              )
                           
                        , the number of edges incident on 
                           v
                         which are internal to some bridge is at most one. Otherwise, the merged graph would have at least two interlacing star bridges. The algorithm is described in Fig. A.33 where 
                           L
                           =
                           L
                           +
                           o
                           u
                           t
                           L
                           i
                           s
                           t
                           +
                           x
                           L
                           i
                           s
                           t
                           +
                           i
                           n
                           L
                           i
                           s
                           t
                         must be understood as a list append.

Then, for each face in the planar embedding, the scan-line sequential algorithm described in Fig. A.34 extracts the set of vertices that the face shares with the cycle vertices 
                           V
                           
                              (
                              C
                              )
                           
                        .

The algorithm is based on two observations. First notice that any edge incident on a vertex 
                           v
                           ∈
                           V
                           
                              (
                              C
                              )
                           
                         is either the first edge of a bridge, an internal edge or, the last edge of a bridge. If the edge is the first one a new face in the embedding is found. If the edge is internal to a bridge then a face has been completed and a new one has been found. Finally, if the edge is the final edge of a bridge, a face has been completed.

Now note that, given a face of the planar embedding, we want to identify the set of vertices common to the face at hand and the face bounded by the cycle 
                           C
                        . Consider two bridges, say 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 B
                              
                              
                                 j
                              
                           
                        , with spans 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         such that 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                           ⊆
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . Clearly, faces generated by bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         cannot include vertices in 
                           s
                           p
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        . To formalize this idea, we define the concept of covered vertex as follows. We say that a vertex 
                           v
                           ∈
                           V
                           
                              (
                              C
                              )
                           
                         is covered by the bridge 
                           B
                         in the merged graph if 
                           v
                           ∈
                           s
                           p
                           
                              (
                              B
                              )
                           
                        . To capture the covering property, the algorithm associates with each vertex 
                           v
                           ∈
                           V
                           
                              (
                              C
                              )
                           
                         a label which initially identifies the vertex 
                           v
                         and that takes value ’
                           x
                        ’ whenever vertex 
                           v
                         is covered by a bridge.

For the merged graph in the running example given in Fig. 11(b), the set of faces in the resulting planar embedding are shown in Fig. 15
                        . The faces defined by the vertices are 
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              
                                 
                                    x
                                 
                                 
                                    23
                                 
                              
                              ,
                              c
                              ,
                              
                                 
                                    x
                                 
                                 
                                    4
                                 
                              
                              ,
                              e
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              k
                              ,
                              
                                 
                                    x
                                 
                                 
                                    23
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 3
                              
                           
                           =
                           
                              〈
                              k
                              ,
                              j
                              ,
                              
                                 
                                    x
                                 
                                 
                                    23
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 4
                              
                           
                           =
                           
                              〈
                              j
                              ,
                              c
                              ,
                              
                                 
                                    x
                                 
                                 
                                    23
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 5
                              
                           
                           =
                           
                              〈
                              c
                              ,
                              
                                 
                                    x
                                 
                                 
                                    56
                                 
                              
                              ,
                              d
                              ,
                              e
                              ,
                              
                                 
                                    x
                                 
                                 
                                    4
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 6
                              
                           
                           =
                           
                              〈
                              c
                              ,
                              i
                              ,
                              
                                 
                                    x
                                 
                                 
                                    56
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 7
                              
                           
                           =
                           
                              〈
                              i
                              ,
                              h
                              ,
                              
                                 
                                    x
                                 
                                 
                                    56
                                 
                              
                              〉
                           
                        , 
                           
                              
                                 f
                              
                              
                                 8
                              
                           
                           =
                           
                              〈
                              h
                              ,
                              d
                              ,
                              
                                 
                                    x
                                 
                                 
                                    56
                                 
                              
                              〉
                           
                         and 
                           
                              
                                 f
                              
                              
                                 u
                              
                           
                           =
                           
                              〈
                              b
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              e
                              〉
                           
                        .

Let 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         be a graph and 
                           C
                         a fundamental circuit in 
                           G
                        . Let 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         be the corresponding merged graph and 
                           F
                         the set of faces of a planar embedding of 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                        . We will show later on that if there are two faces 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           ∈
                           F
                         such that 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           ∩
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           =
                           
                              {
                              
                                 
                                    v
                                 
                                 
                                    a
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    b
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    c
                                 
                              
                              }
                           
                           ⊂
                           V
                           
                              (
                              G
                              )
                           
                         then 
                           
                              
                                 v
                              
                              
                                 a
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 b
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 c
                              
                           
                         are hinges that define a set partition of 
                           V
                           
                              (
                              G
                              )
                           
                         and therefore decompose 
                           G
                         into three clusters. In our algorithm we fix the bounded face 
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                        , defined by the circuit under consideration, as one of the two faces to be checked.

In the planar embedding for the case study at hand shown in Fig. 15, the set of faces is 
                           
                              {
                              
                                 
                                    f
                                 
                                 
                                    b
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    4
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    5
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    6
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    7
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    8
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    u
                                 
                              
                              }
                           
                        . We can see that faces 
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                         and 
                           
                              
                                 f
                              
                              
                                 u
                              
                           
                         share vertices 
                           
                              {
                              b
                              ,
                              c
                              ,
                              e
                              }
                           
                        , therefore they are hinges that define in 
                           V
                           
                              (
                              G
                              )
                           
                         the set partition 
                           
                              
                                 V
                              
                              
                                 1
                              
                           
                           =
                           
                              {
                              a
                              ,
                              e
                              ,
                              b
                              ,
                              f
                              ,
                              g
                              }
                           
                        , 
                           
                              
                                 V
                              
                              
                                 2
                              
                           
                           =
                           
                              {
                              b
                              ,
                              j
                              ,
                              c
                              ,
                              k
                              }
                           
                         and 
                           
                              
                                 V
                              
                              
                                 3
                              
                           
                           =
                           
                              {
                              c
                              ,
                              e
                              ,
                              d
                              ,
                              h
                              ,
                              i
                              }
                           
                         which induce the graph decomposition into clusters 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        , 
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 G
                              
                              
                                 3
                              
                           
                         shown in Fig. 16
                        .

In Section  4 we have illustrated the concepts involved in our approach with the bridge coplanar compound truss case depicted in Fig. 5. To further illustrate how the approach works, we consider now a 2D cross section that will be used to model a 3D shape by sweeping it along a given trajectory. The 2D cross section depicted in Fig. 17
                      is adapted from  [20].

Our approach only considers constraint problems where geometric elements have two degrees of freedom. Therefore, circles and arcs have fixed radii and what needs to be placed with respect to other geometries is just their centers. In these conditions, the 2D cross section includes 14 points and 11 segments. Constraints include point–point distances, perpendicular point–segment distances and segment–segment angles. They are depicted in Fig. 17 as thin lines. Distance constraints are depicted as straight segments with arrows, arbitrary angle constraints are depicted as arcs of circle while 90° angles are depicted as a pair of perpendicular straight segments with a common bound.

The constraint graph is shown in Fig. 18
                     . Geometric elements are depicted as the graph vertices. Constraints are translated as graph edges. Since the problem is well-constrained,  [28], with 
                        
                           |
                           V
                           |
                        
                        =
                        25
                      and 
                        
                           |
                           E
                           |
                        
                        =
                        47
                     , the Laman relation, 
                        
                           |
                           E
                           |
                        
                        =
                        2
                        
                           |
                           V
                           |
                        
                        −
                        3
                     , holds. It is routine to check that for each subgraph, 
                        
                           |
                           
                              
                                 E
                              
                              
                                 ′
                              
                           
                           |
                        
                        ≤
                        2
                        
                           |
                           
                              
                                 V
                              
                              
                                 ′
                              
                           
                           |
                        
                        −
                        3
                      also holds.

As explained in Section  4 in a preprocessing step, our approach trivially solves constructions corresponding to geometric elements whose nodes in the constraint graph have degree two, that is, geometric elements on which just two constraints have been defined. After sequentially removing degree two vertices, the connectivity of the graph to be further considered is two or higher. The graph is shown in Fig. 19
                     (a). Fig. 19(b) shows a different embedding of the same graph redrawn for the sake of readability in what follows.

Assume that the spanning tree to the constraint graph computed by the algorithm is the one depicted in Fig. 20
                     (a). Then the set of fundamental circuits induced by the spanning tree in the graph is shown in Fig. 20(b).

Assume now that, when looping over the set of fundamental circuits, the algorithm in Fig. 4 considers the circuit 
                        
                           
                              C
                           
                           
                              6
                           
                        
                        =
                        
                           〈
                           
                              
                                 l
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 12
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 13
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 10
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 11
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           〉
                        
                      shown in Fig. 20(b). The planar embedding of the merged graph resulting from computing bridges and collapsing the graph is given in Fig. 21
                     . Up to two faces in the planar embedding which share three vertices with the bounded face 
                        
                           
                              f
                           
                           
                              b
                           
                        
                      can be identified. The pair of faces 
                        
                           (
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                           ,
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           )
                        
                      share vertices 
                        
                           {
                           
                              
                                 l
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 12
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           }
                        
                      and the pair 
                        
                           (
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                           ,
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           )
                        
                      share the vertices 
                        
                           {
                           
                              
                                 l
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           }
                        
                     . Therefore two different decompositions can be performed.

When at a given decomposition step two or more possible different decompositions exist, our algorithm does not control, so far, which one is chosen. As a matter of fact the specific decomposition chosen does not matter for the final decomposition for tree decomposition-based DR-planners are canonical,  [42,10]. Thus, if we assume that the algorithm identifies first the triple of vertices 
                        
                           {
                           
                              
                                 l
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 12
                              
                           
                           ,
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           }
                        
                      corresponding to the pair of faces 
                        
                           (
                           
                              
                                 f
                              
                              
                                 b
                              
                           
                           ,
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           )
                        
                     , the decomposition step yields the clusters 
                        
                           
                              G
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              G
                           
                           
                              2
                           
                        
                      and 
                        
                           
                              G
                           
                           
                              3
                           
                        
                      shown in Fig. 22
                     . Next the algorithm is recursively applied to graphs 
                        
                           
                              G
                           
                           
                              1
                           
                        
                      and 
                        
                           
                              G
                           
                           
                              3
                           
                        
                     . Notice that 
                        
                           
                              G
                           
                           
                              2
                           
                        
                      includes two geometries and one constraint on them therefore it is a trivial geometry placing problem and no further decomposition is needed.

In this section we show that the decomposition algorithm described so far is correct. First we establish the relationship between graph hinges and fundamental circuits. Then we show that transforming the input graph into the merged graph preserves hinges. Next we prove that the resulting merged graph is planar. Finally we prove the main result: a merged graph is tree decomposable if and only if there is a planar embedding with two faces which share three or more vertices.

The strategy of our algorithm relies on the fact that given a spanning tree for a biconnected, tree decomposable constraint graph, hinges are always included in some fundamental circuit of the graph related to the spanning tree. In what follows, if 
                           
                              {
                              a
                              ,
                              b
                              ,
                              c
                              }
                           
                         are hinges to a biconnected decomposable graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         we will denote by 
                           
                              
                                 G
                              
                              
                                 a
                                 b
                              
                           
                           ,
                           
                              
                                 G
                              
                              
                                 b
                                 c
                              
                           
                         and 
                           
                              
                                 G
                              
                              
                                 c
                                 a
                              
                           
                         the graphs resulting from the set decomposition of 
                           G
                         such that 
                           
                              
                                 G
                              
                              
                                 a
                                 b
                              
                           
                           ∩
                           
                              
                                 G
                              
                              
                                 b
                                 c
                              
                           
                           =
                           b
                        , 
                           
                              
                                 G
                              
                              
                                 b
                                 c
                              
                           
                           ∩
                           
                              
                                 G
                              
                              
                                 c
                                 a
                              
                           
                           =
                           c
                         and 
                           
                              
                                 G
                              
                              
                                 c
                                 a
                              
                           
                           ∩
                           
                              
                                 G
                              
                              
                                 a
                                 b
                              
                           
                           =
                           a
                        .

We start by proving the following lemma.


                        
                           Lemma 6.1
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected, tree decomposable graph with hinges 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              and clusters 
                              
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                               
                              . Let 
                              
                                 C
                               
                              be a circuit in 
                              
                                 G
                               
                              . Then one of the following two holds
                              
                                 
                                    1.
                                    
                                       Circuit 
                                       
                                          C
                                        
                                       shares vertices with clusters 
                                       
                                          
                                             
                                                G
                                             
                                             
                                                a
                                                b
                                             
                                          
                                          ,
                                          
                                             
                                                G
                                             
                                             
                                                b
                                                c
                                             
                                          
                                        
                                       and 
                                       
                                          
                                             
                                                G
                                             
                                             
                                                c
                                                a
                                             
                                          
                                        
                                       . Furthermore 
                                       
                                          
                                             {
                                             a
                                             ,
                                             b
                                             ,
                                             c
                                             }
                                          
                                          ⊆
                                          V
                                          
                                             (
                                             C
                                             )
                                          
                                       
                                       .
                                    


                                       
                                          V
                                          
                                             (
                                             C
                                             )
                                          
                                        
                                       is a subset of either 
                                       
                                          V
                                          
                                             (
                                             
                                                
                                                   G
                                                
                                                
                                                   a
                                                   b
                                                
                                             
                                             )
                                          
                                        
                                       or 
                                       
                                          V
                                          
                                             (
                                             
                                                
                                                   G
                                                
                                                
                                                   b
                                                   c
                                                
                                             
                                             )
                                          
                                        
                                       or 
                                       
                                          V
                                          
                                             (
                                             
                                                
                                                   G
                                                
                                                
                                                   c
                                                   a
                                                
                                             
                                             )
                                          
                                       
                                       .
                                    


                        
                           Proof
                           For the first case just apply the definition of tree decomposition of a graph. See Fig. 23
                              (a).

For the second case assume, without loss of generality, that 
                                 C
                               is a circuit of 
                                 G
                               such that it shares vertices with 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                    
                                    )
                                 
                               and 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          b
                                          c
                                       
                                    
                                    )
                                 
                               but has no vertices in common with 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          c
                                          a
                                       
                                    
                                    )
                                 
                              . See Fig. 23(b). For a contradiction let 
                                 u
                                 ,
                                 v
                               be two vertices in 
                                 V
                                 
                                    (
                                    C
                                    )
                                 
                               such that 
                                 u
                                 ∈
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                    
                                    )
                                 
                              , 
                                 v
                                 ∈
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          b
                                          c
                                       
                                    
                                    )
                                 
                               and 
                                 u
                                 ≠
                                 v
                              . Since 
                                 C
                               is a circuit, there are two distinct paths in 
                                 C
                              , say 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                       v
                                    
                                 
                               and 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                       v
                                    
                                    
                                       ′
                                    
                                 
                              , such that they connect vertices 
                                 u
                               and 
                                 v
                              . Both paths must include the hinge 
                                 
                                    {
                                    b
                                    }
                                 
                                 =
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          b
                                          c
                                       
                                    
                                    )
                                 
                               therefore 
                                 C
                               is not a circuit.□

Now we show that if a circuit 
                           C
                         shares vertices with clusters 
                           
                              
                                 G
                              
                              
                                 a
                                 b
                              
                           
                           ,
                           
                              
                                 G
                              
                              
                                 b
                                 c
                              
                           
                         and 
                           
                              
                                 G
                              
                              
                                 c
                                 a
                              
                           
                        , then 
                           C
                         is a fundamental circuit of 
                           G
                        .


                        
                           Theorem 6.1
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected tree decomposable graph with hinges 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              and let 
                              
                                 T
                               
                              be a spanning tree to 
                              
                                 G
                               
                              . Then there is a fundamental circuit, say 
                              
                                 C
                              
                              , such that 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    C
                                    )
                                 
                              
                              .
                           


                        
                           Proof
                           Assume that 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               is a tree decomposable, biconnected graph with hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               that split 
                                 G
                               into clusters 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                              . Let 
                                 
                                    {
                                    
                                       
                                          C
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          C
                                       
                                       
                                          n
                                       
                                    
                                    }
                                 
                               be the set of fundamental circuits of 
                                 G
                               with respect to a spanning tree 
                                 T
                              .

For a contradiction assume that there is no fundamental circuit 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    {
                                    
                                       
                                          C
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          C
                                       
                                       
                                          n
                                       
                                    
                                    }
                                 
                               such that 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    }
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                    
                                    )
                                 
                              , 
                                 
                                    {
                                    b
                                    ,
                                    c
                                    }
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          c
                                          b
                                       
                                    
                                    )
                                 
                               and 
                                 
                                    {
                                    c
                                    ,
                                    a
                                    }
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          c
                                          a
                                       
                                    
                                    )
                                 
                              . Then, according to Lemma 6.1, each fundamental circuit 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                               is a subset of either 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                               or 
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                               or 
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                              . Consequently, the ring sum of fundamental circuits in cluster 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                               results in circuits which are subgraphs of cluster 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                              .

Since 
                                 G
                               is biconnected, there are two vertex disjoint paths that connect any pair of vertices in 
                                 V
                                 
                                    (
                                    G
                                    )
                                 
                              . Thus there is a circuit, say 
                                 
                                    
                                       C
                                    
                                    
                                       ′
                                    
                                 
                              , such that it connects the three hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              , has non empty intersection with clusters 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                              , 
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                               and, by hypothesis is not a fundamental circuit. Therefore, 
                                 
                                    
                                       C
                                    
                                    
                                       ′
                                    
                                 
                               can be expressed as the ring sum of some fundamental circuits of 
                                 G
                               induced by the spanning tree 
                                 T
                              . This fact contradicts the assumption.□

Therefore the decomposition algorithm starts by computing a spanning tree 
                           T
                         and the set of fundamental circuits 
                           C
                         induced in the graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         by 
                           T
                        .

The algorithm iterates over the set of fundamental circuits already computed searching for a planar embedding with two faces sharing three vertices in 
                           V
                           
                              (
                              G
                              )
                           
                        . For each fundamental circuit, the decomposition algorithm computes the bridges, the collapsed graph and the merged graph. Here we need to prove that the algorithm preserves the hinges of the given graph.

Assume that 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         is a biconnected, tree decomposable planar graph with hinges 
                           
                              {
                              a
                              ,
                              b
                              ,
                              c
                              }
                           
                         on the fundamental circuit 
                           C
                           ⊂
                           V
                        . Hinges define in 
                           C
                         three circuit segments, say 
                           
                              
                                 C
                              
                              
                                 a
                                 b
                              
                           
                        , 
                           
                              
                                 C
                              
                              
                                 b
                                 c
                              
                           
                         and 
                           
                              
                                 C
                              
                              
                                 c
                                 a
                              
                           
                        , where each 
                           
                              
                                 C
                              
                              
                                 u
                                 v
                              
                           
                         defines a path that connects vertices 
                           u
                         and 
                           v
                         along the circuit 
                           C
                         which does not include the third hinge. See Fig. 24
                        .

In the following, when we refer to a circuit segment 
                           
                              
                                 C
                              
                              
                                 u
                                 v
                              
                           
                        , with 
                           u
                           ,
                           v
                           ∈
                           
                              {
                              a
                              ,
                              b
                              ,
                              c
                              }
                           
                        , we assume that 
                           u
                           ≠
                           v
                         and that 
                           
                              
                                 C
                              
                              
                                 u
                                 v
                              
                           
                         and 
                           
                              
                                 C
                              
                              
                                 v
                                 u
                              
                           
                         are the same circuit.

We first prove that each bridge is attached to just one circuit segment induced by the hinges in the fundamental circuit under consideration.


                        
                           Lemma 6.2
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected tree decomposable graph, 
                              
                                 C
                                 ⊆
                                 G
                               
                              a fundamental circuit and 
                              
                                 B
                                 =
                                 
                                    {
                                    
                                       
                                          B
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                              
                              the set of bridges induced by 
                              
                                 C
                               
                              in 
                              
                                 G
                               
                              . Assume that 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    C
                                    )
                                 
                               
                              are three distinct vertices which induce in 
                              
                                 C
                              
                              the segments 
                              
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                              
                              , 
                              
                                 
                                    
                                       C
                                    
                                    
                                       b
                                       c
                                    
                                 
                              
                              , 
                              
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                               
                              . Then, 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              are hinges of 
                              
                                 G
                               
                              if and only if the attachments of each bridge 
                              
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 B
                               
                              belong to either 
                              
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                               
                              or 
                              
                                 
                                    
                                       C
                                    
                                    
                                       b
                                       c
                                    
                                 
                               
                              or 
                              
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                              
                              .
                           


                        
                           Proof
                           For the if part assume that 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               are hinges of 
                                 G
                              , 
                                 v
                                 ,
                                 w
                               are two different vertices in 
                                 a
                                 t
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                               and there are two different segments of 
                                 C
                              , say 
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and 
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                              , such that 
                                 v
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and 
                                 w
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                              . See Fig. 24. Since 
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                               is connected, there is a path in 
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                               connecting 
                                 v
                               and 
                                 w
                              . Thus 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               are not hinges of 
                                 G
                              .

For the only if part assume that 
                                 ∀
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 B
                              , there are 
                                 x
                                 ,
                                 y
                                 ∈
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               such that 
                                 a
                                 t
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ⊆
                                 
                                    
                                       C
                                    
                                    
                                       x
                                       y
                                    
                                 
                              . Now we can define the subgraphs 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       C
                                    
                                    
                                       x
                                       y
                                    
                                 
                                 ∪
                                 
                                    {
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    ∈
                                    B
                                    |
                                    a
                                    t
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    ⊆
                                    
                                       
                                          C
                                       
                                       
                                          x
                                          y
                                       
                                    
                                    }
                                 
                               for 
                                 x
                                 ,
                                 y
                                 ∈
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              . Note that 
                                 G
                                 =
                                 
                                    
                                       ⋃
                                    
                                    
                                       x
                                       ,
                                       y
                                       ∈
                                       
                                          {
                                          a
                                          ,
                                          b
                                          ,
                                          c
                                          }
                                       
                                    
                                 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ∩
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                                 =
                                 a
                              , 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ∩
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                                 =
                                 b
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                 
                                 ∩
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                 
                                 =
                                 c
                              . Thus 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                               is a set decomposition of 
                                 G
                               and 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               is a set of hinges.□

Next we show that collapsing bridges does not change the connectivity of their attachments.


                        
                           Lemma 6.3
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected, tree decomposable graph, 
                              
                                 C
                               
                              be a fundamental circuit of 
                              
                                 G
                               
                              and let 
                              
                                 B
                                 =
                                 
                                    {
                                    
                                       
                                          B
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                               
                              be the set of bridges induced by 
                              
                                 V
                                 
                                    (
                                    C
                                    )
                                 
                               
                              . Let 
                              
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               
                              be the collapsed graph resulting from replacing each 
                              
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 B
                               
                              with the corresponding star bridge. Then, vertices 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              are hinges of 
                              
                                 G
                               
                              if and only if they are hinges in 
                              
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                              
                              .
                           


                        
                           Proof
                           Just notice that vertices in the circuit 
                                 C
                               and bridges attachments are not involved in the replacement of a bridge with a star graph. Therefore vertices in 
                                 C
                               and bridges attachments are neither created nor removed.□

Next we proceed to prove that computing the merged graph also preserves hinges. Let us start proving that two bridges in the collapsed graph interlace only if they are attached to the same fundamental circuit segment.


                        
                           Lemma 6.4
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected tree decomposable graph. Let 
                              
                                 a
                                 ,
                                 b
                                 ,
                                 c
                                 ∈
                                 V
                               
                              be hinges that define in the fundamental circuit 
                              
                                 C
                              
                              the circuit segments 
                              
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       C
                                    
                                    
                                       b
                                       c
                                    
                                 
                                 ,
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                               
                              . Let 
                              
                                 B
                                 =
                                 
                                    {
                                    
                                       
                                          B
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                               
                              be the set of bridges induced by 
                              
                                 C
                               
                              in 
                              
                                 G
                               
                              and 
                              
                                 s
                                 
                                    (
                                    B
                                    )
                                 
                                 =
                                 
                                    {
                                    s
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    ,
                                    …
                                    ,
                                    s
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             k
                                          
                                       
                                       )
                                    
                                    }
                                 
                              
                              the set of corresponding star bridges. If two star bridges 
                              
                                 s
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ,
                                 s
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          j
                                       
                                    
                                    )
                                 
                                 ∈
                                 s
                                 
                                    (
                                    B
                                    )
                                 
                               
                              interlace, then there is a circuit segment 
                              
                                 
                                    
                                       C
                                    
                                    
                                       u
                                       v
                                    
                                 
                               
                              such that 
                              
                                 a
                                 t
                                 
                                    (
                                    s
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          u
                                          v
                                       
                                    
                                    )
                                 
                               
                              and 
                              
                                 a
                                 t
                                 
                                    (
                                    s
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 ⊆
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          u
                                          v
                                       
                                    
                                    )
                                 
                              
                              .
                           


                        
                           Proof
                           Consider that each bridge 
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                               is transformed into a star bridge 
                                 s
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                               preserving attachments, that is, 
                                 a
                                 t
                                 
                                    (
                                    
                                       
                                          B
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 =
                                 a
                                 t
                                 
                                    (
                                    s
                                    
                                       (
                                       
                                          
                                             B
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    )
                                 
                              . Now apply Lemma 6.2.□

The next step is to show that the process of merging bridges in the collapsed graph preserves hinges.


                        
                           Lemma 6.5
                           
                              Merging star bridges preserves hinges.
                           

Assume that the fundamental circuit is 
                                 C
                               and the hinges are 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              . By Lemma 6.4, merging star bridges only merges bridges whose attachments belong to the same fundamental circuit segment either 
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       C
                                    
                                    
                                       b
                                       c
                                    
                                 
                               or 
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                              . Therefore 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               are hinges for the merged graph.□

Therefore, we have the following result.


                        
                           Theorem 6.2
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected tree decomposable graph with 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              vertices on the fundamental circuit 
                              
                                 C
                               
                              of 
                              
                                 G
                               
                              . Then 
                              
                                 a
                                 ,
                                 b
                                 ,
                                 c
                               
                              are hinges to the collapsed graph and to the merged graph induced by the fundamental circuit 
                              
                                 C
                               
                              in 
                              
                                 G
                               
                              if and only if 
                              
                                 a
                                 ,
                                 b
                                 ,
                                 c
                               
                              are hinges to the graph 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                              
                              .
                           


                        
                           Proof
                           Apply Lemmas 6.3 and 6.5.□

The goal now is to show that the resulting merged graph is planar.


                        
                           Lemma 6.6
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected, tree decomposable graph and 
                              
                                 C
                               
                              a fundamental circuit with hinges 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              . Let 
                              
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       G
                                    
                                    
                                       ″
                                    
                                 
                               
                              be respectively the collapsed and the merged graphs induced by hinges 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               
                              in 
                              
                                 C
                               
                              . Then 
                              
                                 
                                    
                                       G
                                    
                                    
                                       ″
                                    
                                 
                               
                              is planar.
                           


                        
                           Proof
                           See Even,  [32], page 150.□

Let 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         be a planar graph and let 
                           D
                         be a planar embedding of 
                           G
                        . Each face 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           ∈
                           D
                         is bounded by a circuit of 
                           G
                         and there is one unbounded face in 
                           D
                        , called the external face. Recall that the embedding 
                           D
                         is not unique.


                        
                           Theorem 6.3
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a planar graph and let 
                              
                                 D
                               
                              be an embedding of 
                              
                                 G
                               
                              . For every face 
                              
                                 f
                               
                              in 
                              
                                 D
                              
                              , there exists a planar realization, say 
                              
                                 
                                    
                                       D
                                    
                                    
                                       ′
                                    
                                 
                              
                              , of the same graph, which has the same set of faces and such that the face 
                              
                                 F
                               
                              is the external face in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       ′
                                    
                                 
                              
                              .
                           


                        
                           Proof
                           See Even,  [32].□

Now we proceed to prove the correctness of the last step of the decomposition algorithm. Let 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                         be the input graph of the decomposition algorithm and let 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         be the corresponding merged graph. The goal now is to find one embedding 
                           D
                         of 
                           
                              
                                 G
                              
                              
                                 ′
                              
                           
                         and two faces 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           ∈
                           D
                         such that they share three or more vertices. We will show that if the number of shared vertices is three, they are the hinges of the tree decomposition of 
                           G
                        . If there are more than three shared vertices, the problem is underconstrained and any subset of three shared vertices are hinges.


                        
                           Theorem 6.4
                           
                              Let 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               
                              be a biconnected planar graph. 
                              
                                 G
                               
                              is tree decomposable with hinges 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                                 ⊆
                                 V
                               
                              if and only if there is a planar embedding 
                              
                                 D
                               
                              with two faces 
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                              
                              , 
                              
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 D
                               
                              such that 
                              
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                                 ⊆
                                 
                                    boundary
                                 
                                 
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ∩
                                 
                                    boundary
                                 
                                 
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          j
                                       
                                    
                                    )
                                 
                              
                              .
                           


                        
                           Proof
                           We first prove that if 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               are hinges that decompose the graph 
                                 G
                              , there is a planar embedding 
                                 D
                               of 
                                 G
                               with two faces of 
                                 D
                               whose boundaries share the hinges.

Let 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               be a biconnected tree decomposable planar graph with hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              . Let 
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               be the graph resulting from collapsing and merging 
                                 G
                               where hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               induce the clusters 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                    
                                       ′
                                    
                                 
                              . Since according to Lemma 6.6
                              
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               is a planar graph, subgraphs 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                    
                                       ′
                                    
                                 
                               are also planar. Now by Theorem 6.1 there is a fundamental circuit 
                                 C
                               of 
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               which includes hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              . Since a circuit is planar, 
                                 C
                               can be embedded in the plane defining two faces. One face is bounded, say 
                                 
                                    
                                       f
                                    
                                    
                                       b
                                    
                                 
                              , and the other face is unbounded, say 
                                 
                                    
                                       f
                                    
                                    
                                       u
                                    
                                 
                              , as illustrated in Fig. 25
                              (a). Let us denote this embedding by 
                                 D
                              .

We build an embedding of 
                                 
                                    
                                       G
                                    
                                    
                                       ′
                                    
                                 
                               with all the faces drawn within the bounded face 
                                 
                                    
                                       f
                                    
                                    
                                       b
                                    
                                 
                               of 
                                 D
                               as follows. Consider the cluster 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                    
                                       ′
                                    
                                 
                              . Depending on the cardinality of 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              , there are two possible different situations. If 
                                 
                                    |
                                    V
                                    
                                       (
                                       
                                          
                                             G
                                          
                                          
                                             a
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       )
                                    
                                    |
                                 
                                 =
                                 2
                              , then the cluster is coincident with the fundamental circuit segment 
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and the set of faces in the current embedding 
                                 D
                               remains unchanged. See Fig. 25(b).

Assume now that 
                                 
                                    |
                                    V
                                    
                                       (
                                       
                                          
                                             G
                                          
                                          
                                             a
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       )
                                    
                                    |
                                 
                                 ≥
                                 3
                              . The cluster 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                    
                                       ′
                                    
                                 
                               is planar thus it can be embedded within the bounded face 
                                 
                                    
                                       f
                                    
                                    
                                       b
                                    
                                 
                               in 
                                 D
                               starting the embedding from vertices and edges in the fundamental circuit segment 
                                 
                                    
                                       C
                                    
                                    
                                       a
                                       b
                                    
                                 
                              . Biconnectivity guarantees that there is another path, say 
                                 
                                    
                                       P
                                    
                                    
                                       a
                                       b
                                    
                                 
                              , such that it connects vertex 
                                 a
                               with vertex 
                                 b
                              , bounds the embedding and splits face 
                                 
                                    
                                       f
                                    
                                    
                                       b
                                    
                                 
                               into two faces, 
                                 
                                    
                                       R
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 
                                    
                                       R
                                    
                                    
                                       2
                                    
                                 
                              . See Fig. 25(c).

According to Lemma 6.4, bridges included in a cluster are such that 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          b
                                          c
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    {
                                    b
                                    }
                                 
                              , 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          a
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          c
                                          a
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    {
                                    a
                                    }
                                 
                               and 
                                 V
                                 
                                    (
                                    
                                       
                                          G
                                       
                                       
                                          b
                                          c
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 ∩
                                 V
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          c
                                          a
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    {
                                    c
                                    }
                                 
                              . Therefore, by Theorem 6.3, there is an embedding of 
                                 
                                    
                                       G
                                    
                                    
                                       a
                                       b
                                    
                                    
                                       ′
                                    
                                 
                               within the face labeled 
                                 
                                    
                                       R
                                    
                                    
                                       1
                                    
                                 
                               such that the embedding exactly shares vertex 
                                 a
                               with circuit 
                                 
                                    
                                       C
                                    
                                    
                                       c
                                       a
                                    
                                 
                               and vertex 
                                 b
                               with circuit 
                                 
                                    
                                       C
                                    
                                    
                                       b
                                       c
                                    
                                 
                              . See Fig. 26
                              (a). Similarly, graphs 
                                 
                                    
                                       G
                                    
                                    
                                       b
                                       c
                                    
                                    
                                       ′
                                    
                                 
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       c
                                       a
                                    
                                    
                                       ′
                                    
                                 
                               can be embedded in face 
                                 
                                    
                                       R
                                    
                                    
                                       2
                                    
                                 
                               resulting in an internal face, labeled 
                                 
                                    
                                       f
                                    
                                    
                                       b
                                    
                                 
                               in Fig. 26(b), which always shares with the unbounded face 
                                 
                                    
                                       f
                                    
                                    
                                       u
                                    
                                 
                               hinges 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              . Then, by Theorem 6.2, 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               are hinges for the given graph 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                              . The fact that replacing the embedding of each cluster 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                    
                                       ′
                                    
                                 
                              , say 
                                 
                                    
                                       D
                                    
                                    
                                       x
                                       y
                                    
                                    
                                       ′
                                    
                                 
                              , with the embedding of the corresponding subgraph 
                                 
                                    
                                       G
                                    
                                    
                                       x
                                       y
                                    
                                 
                                 ⊂
                                 G
                               that originated it affects just faces and vertices in 
                                 
                                    
                                       D
                                    
                                    
                                       x
                                       y
                                    
                                    
                                       ′
                                    
                                 
                              , completes the proof.

Assume now that there is a planar embedding 
                                 D
                               of graph 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               and two faces 
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                               and 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 D
                               which share vertices 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                              , as illustrated in Fig. 27
                              (a). Then the set of vertices 
                                 
                                    {
                                    a
                                    ,
                                    b
                                    ,
                                    c
                                    }
                                 
                               induces a partition of 
                                 V
                                 
                                    (
                                    G
                                    )
                                 
                               into three subsets 
                                 
                                    
                                       V
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       b
                                       c
                                    
                                 
                               and 
                                 
                                    
                                       V
                                    
                                    
                                       c
                                       a
                                    
                                 
                               such that any path connecting vertex 
                                 v
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       x
                                       y
                                    
                                 
                               with any vertex 
                                 z
                               not in 
                                 
                                    
                                       V
                                    
                                    
                                       x
                                       y
                                    
                                 
                               must include either vertex 
                                 x
                               or vertex 
                                 y
                              . Assume that there is a path between a vertex in 
                                 
                                    
                                       V
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and a vertex in 
                                 
                                    
                                       V
                                    
                                    
                                       b
                                       c
                                    
                                 
                               which does not include the vertex 
                                 b
                               common to 
                                 
                                    
                                       V
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and 
                                 
                                    
                                       V
                                    
                                    
                                       b
                                       c
                                    
                                 
                              . There are two different situations illustrated in Fig. 27(b). Consider first the case where at least one of the vertices connected by the path does not belong to the face 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                              , say vertices 
                                 v
                               and 
                                 w
                               in Fig. 27(b). Then the graph is no longer planar as assumed from the beginning. Now consider the case where the path connects two vertices, say 
                                 u
                               and 
                                 w
                               shared by the face 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                               and the sets 
                                 
                                    
                                       V
                                    
                                    
                                       a
                                       b
                                    
                                 
                               and 
                                 
                                    
                                       V
                                    
                                    
                                       b
                                       c
                                    
                                 
                               respectively. Then faces 
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                               and 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                               no longer share the vertex 
                                 b
                               and the sets 
                                 
                                    
                                       V
                                    
                                    
                                       a
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       b
                                       c
                                    
                                 
                               and 
                                 
                                    
                                       V
                                    
                                    
                                       c
                                       a
                                    
                                 
                               do not define a partition of 
                                 V
                                 
                                    (
                                    G
                                    )
                                 
                              . □

Thus we have proved the following result.


                        
                           Corollary 6.1
                           
                              The algorithm given in   
                                 Fig.  4   computes a set decomposition of a biconnected graph, if one exists.
                           

First we analyze the worst case running time for the work done by the basic decomposition step algorithm given in Fig. 4, that is the work done by our algorithm outside the recursive calls. Then we analyze the running time for the whole recursive DR-Planner. We apply the usual unit-cost operations, unbounded memory random access machine computational model which have unit cost for read and write access to all of its memory cells,  [43].

Given the constraint graph 
                           G
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                        , the first step in the algorithm computes a spanning tree 
                           T
                         and then computes the set of associated fundamental circuits of 
                           G
                        . Both the spanning tree 
                           T
                         and the set of fundamental circuits are computed by applying a depth-first search algorithm. The spanning tree 
                           T
                         is computed in a worst case time given by 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              +
                              
                                 |
                                 E
                                 |
                              
                              )
                           
                        , [44]. Identifying the fundamental circuits as cycles in 
                           T
                         amounts to, at most, visiting all the edges in 
                           E
                        , therefore, the running time is 
                           O
                           
                              (
                              
                                 |
                                 E
                                 |
                              
                              )
                           
                        . Since for well-constrained and under-constrained graphs, the Laman relation can be written as 
                           
                              |
                              E
                              |
                           
                           ≤
                           2
                           
                              |
                              V
                              |
                           
                           −
                           3
                        ,  [28], we conclude that the worst case running time for computing the spanning tree and fundamental circuits is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                        .

The algorithm that computes the set of bridges described in Fig. A.29 has two parts. In the first step the algorithm finds the set of singular bridges, that is, those bridges which include just one edge incident on two vertices in 
                           V
                           
                              (
                              C
                              )
                           
                        . Trivially, the running time is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 
                                    (
                                    C
                                    )
                                 
                                 |
                              
                              )
                           
                        . The second part of the algorithm is a depth-first search approach modified to account for halting the backtracking when a vertex in 
                           V
                           
                              (
                              C
                              )
                           
                         is reached. Therefore the overall worst running time is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                        .

Collapsed bridges 
                           
                              
                                 B
                              
                              
                                 ′
                              
                           
                         are computed by collapsing each bridge in 
                           B
                        . Clearly the worst running time needed to collapse the bridges in 
                           B
                         is 
                           O
                           
                              (
                              
                                 |
                                 B
                                 |
                              
                              )
                           
                        . The number of attachments in a singular bridge is two and for a non-singular bridge the number is two plus, at least, one internal bridge attachment. That is, for each bridge 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                           ∈
                           B
                        , we have 
                           
                              |
                              V
                              
                                 (
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                              |
                           
                           ≥
                           2
                        . Hence the total number of bridges is 
                           
                              |
                              B
                              |
                           
                           ≤
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              /
                              2
                              |
                           
                        . Computing the collapsed graph entails visiting once each vertex in 
                           V
                           
                              (
                              G
                              )
                           
                           −
                           V
                           
                              (
                              C
                              )
                           
                        . Since 
                           
                              |
                              B
                              |
                           
                           ≤
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              /
                              2
                              |
                           
                         and since the total number of visited vertices is 
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              −
                              V
                              
                                 (
                                 C
                                 )
                              
                              |
                           
                           <
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              |
                           
                        , the total running time needed to collapse bridges is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                        .

The set of merged bridges 
                           
                              {
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                                 
                                    ″
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    B
                                 
                                 
                                    n
                                 
                                 
                                    ″
                                 
                              
                              }
                           
                         is computed by applying to the set of collapsed bridges 
                           
                              
                                 B
                              
                              
                                 ′
                              
                           
                         the sequential scan-line algorithm described in Section  4.4. This algorithm merges a set of star subgraphs where interlacing occurs and is implemented in linear time with respect to the total number of stars attachments. In our case, the graph is derived from a well-constrained Laman graph therefore the number of attachments is at most 
                           
                              |
                              V
                              
                                 (
                                 G
                                 )
                              
                              |
                           
                         and the worst running time is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                        .

Computing the planar embedding includes two steps. First the set of edges is sorted by the algorithm given in Fig. A.33. Each vertex in the cycle 
                           V
                           
                              (
                              C
                              )
                           
                         is visited once and the algorithm can be implemented in linear time with a bucket sort. Then each face in the planar embedding is extracted by the algorithm in Fig. A.34 as the set of vertices the face shares with 
                           V
                           
                              (
                              C
                              )
                           
                        . Edges in the merged graph which are either the first or the last edge in a bridge are visited once while each edge internal to a bridge is visited twice. Since the merged graph is planar, the Euler relation 
                           
                              |
                              V
                              |
                           
                           +
                           f
                           −
                           
                              |
                              E
                              |
                           
                           =
                           2
                        , where 
                           f
                         is the number of faces, holds  [32]. The number of faces in 
                           f
                         is fixed once 
                           
                              |
                              V
                              |
                           
                         and 
                           
                              |
                              E
                              |
                           
                         are fixed. Therefore the worst running time for computing the planar embedding is 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                        .

The basic tree-decomposition step algorithm described in Fig. 4 loops over the set of fundamental circuits. Then, for each circuit, the algorithm loops over the set of faces in the planar embedding. Therefore, the worst case running time is 
                           O
                           
                              (
                              
                                 
                                    
                                       |
                                       V
                                       |
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        .

The DR-planner computes the decomposition plan by recursively applying basic tree-decomposition steps. We show the following result.


                        
                           Lemma 7.1
                           
                              Given a tree-decomposable biconnected graph, 
                              
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                              
                              , the DR-planner based on the tree-decomposition given in   
                                 Fig.  4   computes a tree-decomposition in 
                              
                                 O
                                 
                                    (
                                    
                                       
                                          
                                             |
                                             V
                                             |
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                               
                              time.
                           


                        
                           Proof
                           Consider biconnected graphs with 
                                 
                                    |
                                    V
                                    |
                                 
                                 >
                                 3
                              . At each decomposition step our DR-planner divides the constraint graph 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    E
                                    )
                                 
                               into three subgraphs, 
                                 
                                    
                                       G
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          V
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          E
                                       
                                       
                                          1
                                       
                                    
                                    )
                                 
                              , 
                                 
                                    
                                       G
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          V
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          E
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                               and 
                                 
                                    
                                       G
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          V
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                       
                                          E
                                       
                                       
                                          3
                                       
                                    
                                    )
                                 
                              . Under the assumption that the biconnected constraint graph is well-constrained, the number of vertices in each subgraph, say 
                                 
                                    |
                                    
                                       
                                          V
                                       
                                       
                                          i
                                       
                                    
                                    |
                                 
                              , is roughly 
                                 
                                    |
                                    V
                                    |
                                 
                                 /
                                 3
                              . We have shown that the amount of work done outside the recursive calls is 
                                 O
                                 
                                    (
                                    
                                       
                                          
                                             |
                                             V
                                             |
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              . Therefore the total amount of work done by our recursive DR-planner can be expressed as a function of the cardinality of the set of vertices, 
                                 
                                    |
                                    V
                                    |
                                 
                              , as 
                                 
                                    
                                       T
                                       
                                          (
                                          
                                             |
                                             V
                                             |
                                          
                                          )
                                       
                                       =
                                       3
                                       T
                                       
                                          (
                                          
                                             |
                                             V
                                             |
                                          
                                          /
                                          3
                                          )
                                       
                                       +
                                       O
                                       
                                          (
                                          
                                             
                                                
                                                   |
                                                   V
                                                   |
                                                
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                               This recurrence relation follows the pattern 
                                 T
                                 
                                    (
                                    n
                                    )
                                 
                                 =
                                 a
                                 T
                                 
                                    (
                                    n
                                    /
                                    b
                                    )
                                 
                                 +
                                 
                                    
                                       n
                                    
                                    
                                       c
                                    
                                 
                              , where 
                                 a
                                 =
                                 3
                                 ,
                                 b
                                 =
                                 3
                               and 
                                 c
                                 =
                                 2
                              . Hence we have that 
                                 c
                                 >
                                 
                                    
                                       log
                                    
                                    
                                       b
                                    
                                 
                                 
                                    (
                                    a
                                    )
                                 
                                 +
                                 ϵ
                               with 
                                 ϵ
                                 >
                                 0
                               and according to the generalization of the Master Theorem  [45] proposed by Akra and Bazzi in  [46], the work done by our recursive DR-planner is 
                                 T
                                 
                                    (
                                    
                                       |
                                       V
                                       |
                                    
                                    )
                                 
                                 =
                                 O
                                 
                                    (
                                    
                                       
                                          
                                             |
                                             V
                                             |
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              .□

@&#EXPERIMENTAL RESULTS@&#

We have implemented our approach plus three different versions of an algorithm taken from the literature with increasing performance achieved by applying some sort of preprocessing. To assess the performance of the approach presented here we have conducted tests on a standard desk computer with a Pentium IV at 3 GHz processor and 1 GB of core memory. Algorithms are implemented in Python. The tests were planned as follows. First two datasets were defined: 
                        
                           1.
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              : A set of 1000 randomly generated geometric constraint graphs with sizes ranging from 3 to 200 vertices. All the graphs were well-constrained but not necessarily solvable by the tree decomposition approach.


                              
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                              : A set of 1000 randomly generated of geometric constraint graphs with sizes ranging from 3 to 200 vertices. All the graphs were under-constrained but not necessarily tree-decomposable.

Specifically, the algorithms implemented were: 
                        
                           1.
                           
                              
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                              : Algorithm that recursively applies a set of predefined rules to discover hinges which split the graph, as reported in  [7,31] nd  [12].


                              
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                              : In this version first vertices of degree two are removed. Then algorithm 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                               is applied.


                              
                                 
                                    
                                       A
                                    
                                    
                                       3
                                    
                                 
                              : This version is an improvement of 
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                               with specific treatment for 0-connected and 1-connected graphs.


                              
                                 
                                    
                                       A
                                    
                                    
                                       4
                                    
                                 
                              : This is the algorithm presented in this work.

Let 
                        S
                        
                           
                              G
                           
                           
                              s
                           
                        
                      denote the set of graphs 
                        G
                      such that 
                        s
                        =
                        
                           |
                           V
                           
                              (
                              G
                              )
                           
                           |
                        
                      is fixed. Notice that 
                        3
                        ≤
                        s
                        ≤
                        200
                     . We applied each algorithm version to each dataset. For each algorithm and each graph in a dataset, we recorded the algorithm runtime 
                        t
                        
                           (
                           G
                           )
                        
                     . Then for each graph size 
                        s
                     , we averaged the runtime values as 
                        
                           
                              T
                              
                                 (
                                 s
                                 )
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       |
                                       S
                                       
                                          
                                             G
                                          
                                          
                                             s
                                          
                                       
                                       |
                                    
                                 
                              
                              
                              
                                 
                                    ∑
                                 
                                 
                                    ∀
                                    G
                                    ∈
                                    S
                                    
                                       
                                          G
                                       
                                       
                                          s
                                       
                                    
                                 
                              
                              t
                              
                                 (
                                 G
                                 )
                              
                              .
                           
                        
                      The results yielded by these tests are represented in Fig. 28
                     . They show that for both datasets the algorithm 
                        
                           
                              A
                           
                           
                              4
                           
                        
                      described in this paper exhibits a noticeable improved behavior. For graphs 
                        G
                      with 
                        3
                        ≤
                        
                           |
                           V
                           
                              (
                              G
                              )
                           
                           |
                        
                        ≤
                        200
                     , the runtime for the algorithm 
                        
                           
                              A
                           
                           
                              4
                           
                        
                      is 
                        O
                        
                           (
                           n
                           )
                        
                      taking 200 ms when 
                        
                           |
                           V
                           
                              (
                              G
                              )
                           
                           |
                        
                        ≈
                        200
                     .

Tree decomposition is a graph-based geometric constraint solving approach that recursively splits the constraint graph into three subgraphs such that pairwise share one vertex. We refer to these shared vertices as hinges.

In this paper we have reported on a new algorithm to generate a DR-plan, if one exists, as a tree-decomposition in a DR-solver. This strategy is not general but allows to solve a sizable amount of problems belonging to the quadratically solvable problems,  [47], also known as ruler-and-compass solvable problems, which are well suited for problems in a number of scenarios, for example in CAD/CAM and related fields.

The DR-planner developed systematically searches for hinges in fundamental circuits associated to a spanning tree of the constraint graph and consists of two main steps. First the graph is transformed into a simpler, planar graph. Then the transformed graph is embedded in the plane where hinges are identified as a set of three vertices shared by the embedding of the face bounded by a fundamental cycle and any other face in the embedding.

A number of general and efficient algorithms to embed planar graphs in the plane have been published. However, for the sake of efficiency, we have developed a specific algorithm tailored to our needs. The algorithm takes advantage of the natural hierarchy induced by the set of star bridges in the planar graph. Furthermore, it guarantees that the resulting embedding always includes the face bounded by the fundamental circuit considered. The algorithm is conceptually simple and easy to implement.

The DR-planner is correct in the following sense. First, the graph transformation preserves the hinges. Second, hinges, if present, always belong to the common boundary of two faces in a planar embedding of the transformed constraint graph. The fact that one of the faces involved in the search is always the face bounded by the considered fundamental cycle in the planar embedding facilitates the search.

As detailed in Section  4, the algorithm is based in simple concepts and requires simple data structures what allows a straightforward implementation. Notice that although the approach computes a graph tree decomposition, no need for specific geometric construction steps are needed. The approach identifies sets of three vertices that conceptually decompose the graph at hand thus all what it requires is that the input graph be structurally either well-constrained or under-constrained. Therefore the algorithm yields a tree-decomposition even in the case where there are constraints in the problem which fulfill geometric theorems, for example three lines pairwise constrained by angles.

When in a tree-decomposition step the input graph is over-constrained including either well-constrained or under-constrained subgraphs the algorithm correctly decomposes the input graph and the over-constrained part goes within one of the resulting clusters. However if the input graph does not include either well-constrained or under-constrained subgraphs no planar embeddings exist which includes two faces with three or more common vertices. Therefore no hinges exist and the problem is unsolvable.

The worst case overall performance of the DR-solver built on top of our DR-planner is quadratic. This does not improve over other tree-decomposition DR-solvers previously reported in the literature. However, we have applied our implementation to tree-decomposable constraint graphs with up to two thousand nodes and the measured running time is clearly smaller than quadratic. See Algorithm A4 in  [29] for preliminary experimental results.

In conclusion, the proposed approach is a viable alternative to already developed tree-decomposition based DR-planners which operate by identifying specific subgraphs in the constraint graph. The systematic nature of the approach allows a clean and easy implementation.

We believe that there is room left to improve the practical algorithm performance. First we have observed that under given circumstances, intermediate data resulting from the study of a fundamental cycle with no hinges do not need to be recomputed when considering other cycles. Identifying a relationship between these intermediate results would help in avoiding duplicate calculations. Next, following Miller and Ramachandran  [30], we plan to develop a parallel version of our approach.

@&#ACKNOWLEDGMENTS@&#

Authors thank the anonymous referees for their helpful comments and suggestions that helped to improve the paper. M. Tarrés-Puertas and S. Vila-Marta have been supported by the Spanish Ministerio de Economía y Competitividad
                   under Grant TEC2012-35571.

See Figs. A.29–A.34.
                     
                     
                     
                     
                     
                  

@&#REFERENCES@&#

