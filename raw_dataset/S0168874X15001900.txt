@&#MAIN-TITLE@&#Parameter free structural optimization applied to the shape optimization of smart structures

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We apply structural optimization to smart structures, using sensitivity filtering.


                        
                        
                           
                           Vertex morphing is applied for generating complex beads, allowing high flexibility.


                        
                        
                           
                           The effect of gradient filtering onto complex shape optimization tasks is discussed.


                        
                        
                           
                           Shape optimization and sizing are applied to a real-application smart structure.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Structural optimization

Parameter free

Finite element based

Smart structures

Morphing

@&#ABSTRACT@&#


                  This contribution applies structural shape optimization techniques to actuated smart structures. In order to combine these two disciplines, the idea of Optimal Actuation and an enlarged filtering scheme are presented. A parameter free optimization scheme is used, which allows the treatment of different branches of structural optimization using an identical framework.
               

@&#INTRODUCTION@&#

The topic of structural optimization is established in research as well as in the industry. Usual applications target an optimal use of material, where the objective of optimization is minimizing structural weight while complying with displacement or stress constraints, or minimizing structural deformations for a given weight of the structure. One very famous branch of optimization where exactly these kinds of problems are treated is the field of topology optimization [1], but these questions also arise quite frequently in the fields of shape optimization and sizing [3]. Well established applications usually focus on “classical”structures, which are only affected by a given external load. In contrast to these structures, the so-called smart structures are additionally equipped with actuators, which can produce additional mechanical input in order to modify the structure׳s response. Actuators are usually controlled by optimal control algorithms [4,5], which focus on generating the desired structure response by superposition of the external load and the actuator action.

In this context, this contribution focuses on applying structural optimization in order to generate structures which behave optimally with respect to actuating input, whereas it does not focus on the topic of control and controller design.

Nowadays publications regarding optimization with respect to smart structures mainly focus on actuator placement for a given host structure using stochastic methods [6] or topology optimization [7]. As most applications of smart structures belong to the aerospace industry, a lot of publications concerning optimization do so as well. Farhan Gandhi and others are doing a lot of research work about morphing airfoils, where for example sizing optimization is applied to compliant mechanisms using honeycomb structures [8]. Bilgen and Friswell [9,10] are working on a variable-camber wing for an unmanned light weight aircraft, which is actuated by piezoelectric components. The wing was optimized in order to obtain an ideal lift-to-drag ratio in the actuated state. Therefor a Genetic Optimization Algorithm was applied on a parameterized optimization model, using half a dozen of design parameters. Although this work implied means of structural optimization, the focus was on experimental testing.

This contribution aims on structural optimization of smart structures without the necessity of introducing an additional parameterized optimization model, in combination with gradient based optimization methods. The focus is on generating structures which provide an optimal response to the actuator input.

A novelty of this contribution is that shape optimization involving a large design space is applied to smart structures, where especially free shape optimization of thin structures is a central aspect. By this mean, new designs for smart structures can be discovered, which can hardly be reproduce using a parameterized optimization model. The topic of actuator placement is also added to the parameterization model free optimization approach, such that costs of actuation can be measured, evaluated and considered in the optimization. Thus structural optimization and actuator placement can be combined, and smart structures can be optimized with respect to a most efficient actuation.

For numerical treatment of problems in structural optimization, adequate parameterization of the design space is necessary. A meanwhile classical way of parameterizing is to apply an extra CAD-model as a design model [11]. The idea of using NURBS or B-Rep information in order to parameterize an optimization model is state of the art [12].

In contrast, the actual contribution uses a node based parameterization approach. This approach defines optimization parameters directly on the finite element mesh which is used for structural analysis. A separate model for design parametrization is not necessary. Therefore, the name “parameter free” in the sense of “free of CAD parameters” became conventional. Now, the parameters for shape design are the coordinates of each finite element node or vertex in context of this paper [23,20].


                     Fig. 1
                      shows an example of a finite element mesh for a curved surface, where for three nodes design parameters for shape optimization are visualized. For this purpose, at each node i a tangential coordinate system with the base vectors 
                        
                           
                              θ
                           
                           
                              1
                              ,
                              i
                           
                        
                        ,
                        
                           
                              θ
                           
                           
                              2
                              ,
                              i
                           
                        
                        ,
                        
                           
                              θ
                           
                           
                              3
                              ,
                              i
                           
                        
                      is defined, with 
                        
                           
                              θ
                           
                           
                              3
                              ,
                              i
                           
                        
                      being the normal vector of the surface. The coordinates 
                        
                           
                              t
                           
                           
                              3
                              ,
                              i
                           
                        
                      in normal directions 
                        
                           
                              θ
                           
                           
                              3
                              ,
                              i
                           
                        
                      are considered design parameters for shape modification. At a regular node in the interior of the surface, a tangential movement of the node affects the mesh quality, but not the shape. Therefore, tangential coordinates 
                        
                           
                              t
                           
                           
                              1
                              ,
                              i
                           
                        
                      and 
                        
                           
                              t
                           
                           
                              2
                              ,
                              i
                           
                        
                      are adapted by secondary arguments to guarantee good mesh quality. Regularization techniques for shape quality control in shape optimization were developed by eg. [16,24,18,20] or [17]. Fig. 2
                      shows a one-node out-of-plane design change and the related in-plane regularization movements.

Knowledge about surface normal directions allows us to compute the sensitivity p
                     
                        i
                      of a response function f with respect to the shape modification at a considered node i by computing the total differential of the response in direction 
                        
                           
                              θ
                           
                           
                              3
                              ,
                              i
                           
                        
                     :
                        
                           (1)
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       ∇
                                       f
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                              ·
                              
                                 
                                    θ
                                 
                                 
                                    3
                                    ,
                                    i
                                 
                              
                           
                        
                     
                  

Here, 
                        ∇
                        f
                      is to be understood as the derivative of f with respect to the nodal shape parameters which are the three spacial coordinates x
                     
                        i
                      of node i. The term p
                     
                        i
                      is identified as the discrete equivalent at node i of the continuous shape derivative. Mathematical literature about computation of shape gradients and shape calculus can be found in [13–15].

The goal of this chapter is to present the underlying theory of the node based vertex morphing method using discrete nodal parameters. This way, we start from a continuous formulation and will discretize later on.

We consider a surface Ω in space and related surface coordinates 
                        ξ
                        ∈
                        
                           
                              R
                           
                           
                              2
                           
                        
                      which eventually are called material coordinates as well. The surface geometry is given by the spacial coordinates 
                        x
                        =
                        x
                        (
                        
                           ξ
                        
                        )
                      in R
                     3. The field 
                        
                           
                              t
                           
                           
                              3
                           
                        
                        ∈
                        R
                      is the field of coordinates in normal direction at every surface point ξ. The normal defines the direction of shape evolution at surface point ξ. Additionally, we consider a control field 
                        s
                        (
                        
                           ξ
                        
                        )
                        ∈
                        R
                     . The normal coordinate t
                     3 at a surface point ξ
                     
                        i
                      is linked to s through the kernel filter function 
                        F
                        (
                        
                           ξ
                           ,
                           
                              
                                 ξ
                              
                              
                                 i
                              
                           
                        
                        )
                      and the convolution integral over the surface Ω:
                        
                           (2)
                           
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              F
                              (
                              
                                 ξ
                                 ,
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              ·
                              s
                              (
                              
                                 ξ
                              
                              )
                              
                              d
                              ξ
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              F
                              (
                              
                                 ξ
                                 ,
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              
                              d
                              ξ
                              =
                              1
                           
                        
                     
                  

The shape optimization is driven by the manipulation of the control field s.

To that end we define the shape optimization problem as: 
                        
                           (3)
                           
                              min
                              
                              f
                              (
                              
                                 s
                                 ,
                                 u
                              
                              )
                              u
                              =
                              u
                              (
                              
                                 s
                              
                              )
                              
                              from
                              
                              S
                              (
                              
                                 s
                                 ,
                                 u
                              
                              )
                              =
                              0
                           
                        
                     where f is the objective as a function of the control field s and u which are the fields of state variables, e.g. the displacement fields in R
                     3, and S is the state equation.

The derivative of the objective f with respect to the design control field s is determined by adhering to chain rule of differentiation:
                        
                           (4)
                           
                              
                                 
                                    df
                                 
                                 
                                    ds
                                 
                              
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 
                                    df
                                 
                                 
                                    
                                       
                                          dt
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              ·
                              
                                 
                                    
                                       
                                          dt
                                       
                                       
                                          3
                                       
                                    
                                 
                                 
                                    ds
                                 
                              
                              
                              d
                              ξ
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              p
                              ·
                              
                                 
                                    
                                       
                                          dt
                                       
                                       
                                          3
                                       
                                    
                                 
                                 
                                    ds
                                 
                              
                              
                              d
                              ξ
                           
                        
                     where the shape derivative p is the derivative of the objective with respect to the normal coordinates considering shape variations in the surface normal direction. Furthermore, evaluation of 
                        
                           
                              df
                           
                           
                              ds
                           
                        
                      at position ξ
                     
                        i
                      yields
                        
                           (5)
                           
                              
                                 
                                    df
                                 
                                 
                                    ds
                                 
                              
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              p
                              (
                              
                                 ξ
                              
                              )
                              ·
                              F
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 ξ
                              
                              )
                              
                              d
                              ξ
                           
                        
                     
                  

We observe that derivatives are treated with the transpose filter operation as compared to the filtering of the normal coordinates t
                     3. Of course, in the case of symmetric filter functions it holds
                        
                           (6)
                           
                              F
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 ξ
                              
                              )
                              =
                              F
                              (
                              
                                 ξ
                                 ,
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                           
                        
                     
                  

Typically, a piecewise linear hat-function of C
                     0-continuity is used as a filter kernel function 
                        F
                        (
                        
                           ξ
                           ,
                           
                              
                                 ξ
                              
                              
                                 i
                              
                           
                        
                        )
                     . This function can be written in the form
                        
                           (7)
                           
                              F
                              (
                              
                                 ξ
                                 ,
                                 
                                    
                                       ξ
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 R
                              
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ·
                              [
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          ξ
                                          <
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                          −
                                          R
                                       
                                    
                                    
                                       
                                          ξ
                                          +
                                          (
                                          
                                             R
                                             −
                                             
                                                
                                                   ξ
                                                
                                                
                                                   0
                                                
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                          −
                                          R
                                          ≤
                                          ξ
                                          <
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                    
                                       
                                          −
                                          ξ
                                          +
                                          (
                                          
                                             R
                                             +
                                             
                                                
                                                   ξ
                                                
                                                
                                                   0
                                                
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                          ≤
                                          ξ
                                          <
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                          +
                                          R
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          ξ
                                          ≥
                                          
                                             
                                                ξ
                                             
                                             
                                                0
                                             
                                          
                                          +
                                          R
                                       
                                    
                                 
                              
                              ]
                           
                        
                     where R is a parameter set by the user, defining the filter radius. Fig. 3
                      shows the operator F for chosen parameters R=0.5 and 
                        
                           
                              ξ
                           
                           
                              0
                           
                        
                        =
                        0.3
                     .

In context of finite element analysis, geometry x and design control field s will be discretized. Let us assume that both are discretized using the same mesh and shape functions 
                        
                           
                              N
                           
                           
                              j
                           
                        
                        (
                        
                           ξ
                        
                        )
                     . Consequently, within the finite element it holds:
                        
                           (8)
                           
                              s
                              (
                              
                                 ξ
                              
                              )
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    N
                                 
                                 
                                    j
                                 
                              
                              (
                              
                                 ξ
                              
                              )
                              ·
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                           
                        
                     where n is the number of nodes of an element and s
                     
                        j
                      denotes the discrete control value at node j.

Applying Eq. (8) to Eq. (2) gives
                        
                           (9)
                           
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              (
                              
                                 
                                    
                                       ∫
                                    
                                    
                                       Ω
                                    
                                 
                                 F
                                 (
                                 
                                    ξ
                                    ,
                                    
                                       
                                          ξ
                                       
                                       
                                          i
                                       
                                    
                                 
                                 )
                                 ·
                                 
                                    
                                       N
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 
                                    ξ
                                 
                                 )
                                 
                                 d
                                 ξ
                              
                              )
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                           
                        
                     from which we can derive the discrete filter operator matrix 
                        B
                      which relates the discrete nodal control numbers s
                     
                        j
                      and the normal coordinates 
                        
                           
                              t
                           
                           
                              3
                              ,
                              i
                           
                        
                      at every node:
                        
                           (10)
                           
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              (
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              =
                              
                                 
                                    t
                                 
                                 
                                    3
                                    ,
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 
                                    B
                                 
                                 
                                    ij
                                 
                              
                              ·
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    B
                                 
                                 
                                    ij
                                 
                              
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              F
                              (
                              
                                 ξ
                                 ,
                                 
                                    
                                       ξ
                                    
                                    
                                       i
                                    
                                 
                              
                              )
                              ·
                              
                                 
                                    N
                                 
                                 
                                    j
                                 
                              
                              (
                              
                                 ξ
                              
                              )
                              
                              d
                              ξ
                           
                        
                     
                  

For the derivatives it holds:
                        
                           (11)
                           
                              
                                 
                                    df
                                 
                                 
                                    
                                       
                                          ds
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    df
                                 
                                 
                                    
                                       
                                          dt
                                       
                                       
                                          3
                                          ,
                                          j
                                       
                                    
                                 
                              
                              ·
                              
                                 
                                    B
                                 
                                 
                                    ji
                                 
                              
                              =
                              
                                 
                                    B
                                 
                                 
                                    ij
                                 
                                 
                                    T
                                 
                              
                              ·
                              
                                 
                                    df
                                 
                                 
                                    
                                       
                                          dt
                                       
                                       
                                          3
                                          ,
                                          j
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    B
                                 
                                 
                                    ij
                                 
                                 
                                    T
                                 
                              
                              ·
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                        
                     
                  

Collecting all nodal control parameters and normal coordinates in vectors 
                        s
                      and 
                        
                           
                              t
                           
                           
                              3
                           
                        
                     , respectively, we get
                        
                           (12)
                           
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              =
                              B
                              ·
                              s
                              
                                 
                                    df
                                 
                                 
                                    d
                                    s
                                 
                              
                              =
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              ·
                              p
                           
                        
                     
                  

As there are as many discrete parameters for 
                        p
                      as well as 
                        
                           
                              t
                           
                           
                              3
                           
                        
                     , the matrix 
                        B
                      is quadratic. For typical filter functions, e.g. the simple hat function, 
                        B
                      is positive definite and, additionally, for regular element meshes 
                        B
                      is symmetric. So matrix 
                        B
                      describes a pure parameter transformation, which does not reduce the dimension of the design space. Thus, the original properties of the optimization problem are maintained, such that an optimum determined using the transformation is also an optimum of the original minimization problem.

For the most practical cases with fine meshes and moderately varying mesh density 
                        B
                      can be approximated to be symmetric.

Considering gradient or quasi Newton methods, it appears that the control parameters 
                        s
                      may be substituted. The quadratic approximation of f is given by 
                        
                           
                              f
                           
                           
                              ˜
                           
                        
                     , where 
                        
                           
                              H
                           
                           
                              α
                           
                        
                      are the matrices of second derivatives with respect to α, which is either the control parameters 
                        s
                      or the normal coordinates 
                        
                           
                              t
                           
                           
                              3
                           
                        
                     :
                        
                           (13)
                           
                              
                                 
                                    f
                                 
                                 
                                    ˜
                                 
                              
                              =
                              f
                              +
                              
                                 
                                    
                                       
                                          df
                                       
                                       
                                          d
                                          s
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                              ·
                              Δ
                              s
                              +
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                              ·
                              Δ
                              
                                 
                                    s
                                 
                                 
                                    T
                                 
                              
                              ·
                              
                                 
                                    H
                                 
                                 
                                    s
                                 
                              
                              ·
                              Δ
                              s
                              =
                              f
                              +
                              
                                 
                                    p
                                 
                                 
                                    T
                                 
                              
                              ·
                              B
                              ·
                              Δ
                              s
                              +
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                              ·
                              Δ
                              
                                 
                                    s
                                 
                                 
                                    T
                                 
                              
                              ·
                              B
                              ·
                              
                                 
                                    H
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              ·
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              ·
                              Δ
                              s
                           
                        
                     
                  

From Eq. (13) together with Eq. (12) the update 
                        Δ
                        
                           
                              t
                           
                           
                              3
                           
                        
                      of nodal coordinates can be derived as
                        
                           (14)
                           
                              Δ
                              s
                              =
                              −
                              
                                 
                                    (
                                    
                                       
                                          
                                             B
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       
                                          
                                             H
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                          
                                       
                                       ·
                                       B
                                    
                                    )
                                 
                                 
                                    −
                                    1
                                 
                              
                              ·
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              ·
                              p
                              Δ
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              =
                              −
                              B
                              ·
                              
                                 
                                    (
                                    
                                       
                                          
                                             B
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       
                                          
                                             H
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                          
                                       
                                       ·
                                       B
                                    
                                    )
                                 
                                 
                                    −
                                    1
                                 
                              
                              ·
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              ·
                              p
                           
                        
                     
                  

From a practical point of view, it appears that the control parameters do not need be considered when the method is coded. As Eq. (12) holds, considerations can be reduced to the design update 
                        Δ
                        
                           
                              t
                           
                           
                              3
                           
                        
                      and the operator 
                        B
                      for implementation purpose.

Furthermore, on the line of quasi Newton methods, Eq. (14) may be modified as
                        
                           (15)
                           
                              Δ
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              =
                              −
                              α
                              ·
                              B
                              ·
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              ·
                              p
                              or
                              
                              Δ
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              =
                              −
                              α
                              ·
                              B
                              ·
                              p
                              =
                              −
                              α
                              ·
                              
                                 
                                    p
                                 
                                 
                                    ˜
                                 
                              
                           
                        
                     where α is a line search factor. Indeed, the normal coordinates 
                        
                           
                              t
                           
                           
                              3
                           
                        
                      may be updated by means of applying the filter once or twice to the shape derivative 
                        p
                     . Since 
                        B
                      is positive definite it is guaranteed that descend directions are generated. Numerical experience shows that both alternatives of Eq. (15) can be used very efficiently for very large problems together with steepest descent or conjugate gradient methods for unconstrained and constrained problems [19,20]. The second variant of equation (15) meets the well-known sensitivity filtering techniques. The method is most efficient together with adjoint methods of sensitivity analysis.

The matrix 
                        B
                      allows for deeper insight into the method. However, it must never be evaluated explicitly or stored in its entire form. Instead, regarding the second variant of equation (15) the sensitivity filtering is performed node wise by applying an alternative numerical integration scheme considering derivatives of adjacent nodes within the filter radius R. By this mean, the matrix-vector-product is replaced by a component wise algorithm such that information about 
                        B
                      in its entire form becomes unneeded.
                        
                           (16)
                           
                              
                                 
                                    p
                                 
                                 
                                    ˜
                                 
                              
                              =
                              B
                              ·
                              p
                              ⇔
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    ˜
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    F
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                    ·
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    F
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                 
                              
                           
                        
                     
                  

Indeed, the sensitivity filtering (Eq. (16)) is equivalent to techniques which are applied in topology optimization by the SIMP method [2,1]. Typically, symmetric hat filters are used.

The procedure can be interpreted in different ways. From the mathematical point of view, it is a smoothing operation typically introduced for regularization [21,22]. In the context of structural shape optimization, this procedure is commonly interpreted and used as a design tool. It gives control over the optimization procedure to the user by choice of the filter radius as an extra problem parameter. Although the filter cancels out in the course of optimization – which can be seen from Eq. (14) – it improves the numerical properties of the optimization problem by providing smooth geometry updates. On the other hand for non-convex problems, the choice of the filter radius will decide which local minimum will be reached at convergence. This is the intended effect of the filter, which supports the user by exploring the design space, just by simply choosing different filter radii [19,20].

The basic idea of Optimal Actuation is to generate structures which provide a maximum response to an actuator input by a minimum actuation effort. For this purpose, the optimization problem is enlarged by an additional field of design variables, which is the field of actuators – therefore, design variables now are defined by the shape control field s and the actuator control field a. In this context, an actuator is any device being able to influence the structure mechanically by a controllable load, such as pneumatic cylinders or piezoelectric elements. The field s can also be interpreted in a more general sense as not only describing the shape, but also the entire design of the structure. So the field may contain information about shell thickness distributions or material orientations [25], allowing us to consider these properties as additional variables in the optimization process. As the field of actuators was introduced, Optimal Actuation can also be used for optimal actuator placing and tuning. The final goal of Optimal Actuation is to enable a highly efficient controlling of the system, characterized by a maximized actuation response B obtained by a minimum of energy input. B can be measured in terms of strain energy or nodal displacements, for example. If we furthermore assume that the energy consumption of the actuation process is proportional to the integral p-norm of the actuator field over the entire design space, the problem of Optimal Actuation can be described as a multi-objective optimization problem of the form
                        
                           (17a)
                           
                              min
                              
                              C
                              (
                              
                                 a
                              
                              )
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 
                                    |
                                    
                                       a
                                       (
                                       
                                          ξ
                                       
                                       )
                                    
                                    |
                                 
                                 
                                    p
                                 
                              
                              
                              d
                              ξ
                           
                        
                     
                     
                        
                           (17b)
                           
                              max
                              
                              B
                              (
                              
                                 a
                                 ,
                                 s
                              
                              )
                           
                        
                     where the function 
                        C
                        (
                        
                           a
                        
                        )
                      indicates the actuation costs and 
                        B
                        (
                        
                           a
                           ,
                           s
                        
                        )
                      can be interpreted as the actuation benefit. Considering the cost-to-benefit ratio as a measure of the efficiency of the actuation, Eqs. (17a) and (17b) can be summarized to the minimization of the efficiency function 
                        E
                        (
                        
                           a
                           ,
                           s
                        
                        )
                     :
                        
                           (18)
                           
                              min
                              
                              E
                              (
                              
                                 a
                                 ,
                                 s
                              
                              )
                              =
                              
                                 
                                    C
                                    (
                                    
                                       a
                                    
                                    )
                                 
                                 
                                    B
                                    (
                                    
                                       a
                                       ,
                                       s
                                    
                                    )
                                 
                              
                           
                        
                     
                  

As Optimal Actuation introduces a new field of variables into the optimization problem, this also has an impact on the procedure of optimization. While Eqs. (3) and (2) assumed only one field of design variables controlling the shape, we now have to consider the enlarged problem of optimizing with respect to two different fields of design variables, s and a. Considering the state equation S and the field of state variables u, the final optimization problem reads
                        
                           (19)
                           
                              min
                              
                              E
                              (
                              
                                 s
                                 ,
                                 a
                                 ,
                                 u
                              
                              )
                              st
                              .
                              S
                              (
                              
                                 s
                                 ,
                                 a
                                 ,
                                 u
                              
                              )
                              =
                              0
                           
                        
                     According to Eq. (14), the new field of design parameters a is also controlled by a gradient field p
                     
                        a
                     . As the response function f probably shows completely different behaviours with respect to design modifications in s and a, it is reasonable to link the related design updates to the gradient field via independent filter kernel functions F
                     
                        s
                      and F
                     
                        a
                      
                     
                        
                           (20)
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          s
                                          ,
                                          i
                                       
                                    
                                 
                                 
                                    ˜
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          F
                                       
                                       
                                          s
                                       
                                    
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                    ·
                                    
                                       
                                          p
                                       
                                       
                                          s
                                          ,
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          F
                                       
                                       
                                          s
                                       
                                    
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                 
                              
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          a
                                          ,
                                          i
                                       
                                    
                                 
                                 
                                    ˜
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          F
                                       
                                       
                                          a
                                       
                                    
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                    ·
                                    
                                       
                                          p
                                       
                                       
                                          a
                                          ,
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          F
                                       
                                       
                                          a
                                       
                                    
                                    (
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    )
                                 
                              
                           
                        
                     with 
                        
                           
                              p
                           
                           
                              s
                           
                        
                      and 
                        
                           
                              p
                           
                           
                              a
                           
                        
                      being the gradients of the response function with respect to the design fields for shape and actuators.

An additional argument for introducing separate filter kernels into the optimization problem with respect to Optimal Actuation is that the second field of design variables has an extreme impact on the mathematical properties of the problem. In the previous section, we discussed that the filter kernel cancels out for convex problem and acts as a kind of steering tool to guide the gradient based optimization algorithm towards the desired solution in case of non-convex problems. From this point of view, the filtering procedure becomes essential in applications of highly parameterized optimization problems, as the resulting design space usually is non-convex. Introducing an additional field of design variables in form of the actuator field increases this effect, especially as the field of actuators a might be non-continuous in case of a point-wise actuation. The requirement of treating both design fields adequately makes the usage of two different filter kernels essential.

The following example will emphasize this necessity. We consider a statically determined tensile rod of length L with a varying tensile stiffness EA and a variable loading q. The related system is shown in Fig. 4
                     . 
                        
                           
                              EA
                              (
                              
                                 x
                                 ,
                                 s
                              
                              )
                              =
                              
                                 
                                    EA
                                 
                                 
                                    0
                                 
                              
                              +
                              Δ
                              EA
                              ·
                              sin
                              (
                              
                                 
                                    
                                       2
                                       ·
                                       π
                                    
                                    
                                       L
                                    
                                 
                                 ·
                                 x
                                 +
                                 s
                              
                              )
                           
                        
                     
                     
                        
                           
                              q
                              (
                              
                                 x
                                 ,
                                 a
                              
                              )
                              =
                              {
                              
                                 
                                    
                                       
                                          1
                                       
                                       
                                          x
                                          ≤
                                          a
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          x
                                          >
                                          a
                                       
                                    
                                 
                              
                              }
                           
                        
                     
                     
                        
                           
                              with
                              
                              x
                              ∈
                              [
                              
                                 0
                                 ,
                                 L
                              
                              ]
                           
                        
                     
                  

Now we consider this rod to be optimized with respect to Optimal Actuation, where the tip displacement u
                     
                        tip
                      under the load q represents the actuation benefit function B and the cost function C is computed as the square of the load design variable a. The design can be modified by changing the phase change parameter s inside the tensile stiffness function, and the actuator can be effected by modifying the parameter a. Therefore, we come up with the following formulation for the efficiency of the actuation process: 
                        
                           
                              B
                              (
                              s
                              ,
                              a
                              )
                              =
                              
                                 
                                    u
                                 
                                 
                                    tip
                                 
                              
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    x
                                    =
                                    0
                                 
                                 
                                    L
                                 
                              
                              ϵ
                              (
                              
                                 x
                              
                              )
                              
                              dx
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    x
                                    =
                                    0
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    N
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 
                                    EA
                                    (
                                    
                                       x
                                       ,
                                       s
                                    
                                    )
                                 
                              
                              
                              dx
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    x
                                    =
                                    0
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    −
                                    
                                       
                                          ∫
                                       
                                       
                                          ξ
                                          =
                                          L
                                       
                                       
                                          x
                                       
                                    
                                    q
                                    (
                                    
                                       ξ
                                       ,
                                       a
                                    
                                    )
                                    
                                    d
                                    ξ
                                 
                                 
                                    EA
                                    (
                                    
                                       x
                                       ,
                                       s
                                    
                                    )
                                 
                              
                              
                              dx
                           
                        
                     
                     
                        
                           
                              C
                              (
                              s
                              ,
                              a
                              )
                              =
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                           
                        
                     
                     
                        
                           
                              min
                              
                              E
                              (
                              s
                              ,
                              a
                              )
                              =
                              
                                 
                                    C
                                    (
                                    s
                                    ,
                                    a
                                    )
                                 
                                 
                                    B
                                    (
                                    s
                                    ,
                                    a
                                    )
                                 
                              
                           
                        
                     
                  


                     Fig. 5
                      shows a contour plot of the actuation efficiency function E in the two dimensional design space. This graph clearly shows that the function behaves very differently with respect to the different types of design variables. In direction of variable s the behaviour is very smooth and represents the characteristic sinusoidal shape which was used to define the tensile stiffness 
                        EA
                        (
                        
                           x
                        
                        )
                     . In contrast, the behaviour in direction a is highly oscillating which leads to local minima (Fig. 6
                     ).

The first example focuses on a shape adaptive beam, for which a combined shape and actuator optimization is performed. The beam has a length of 10 and an initial circular curvature with a rise of 0.5. The left edge of the system is fixed supported and the right hand side is roller supported while a pressure load is acting onto the structure according to Fig. 7
                        . A finite element shell model is used for structural analysis and optimization.

In order to modify the shape of the structure within optimization, all finite element nodes can be moved despite the supports, and the previously mentioned methods for in-plane regularization are used in order to avoid mesh distortion. Actuator optimization is performed by an element wise scaling of the acting pressure load. So for each element a design variable a
                        
                           i
                         is defined, scaling the pressure acting on the specific element. The actuation benefit is measured by the horizontal displacement u of the roller support and the actuation cost is computed by summing up the acting pressures load over all finite elements, or the load controlling design variables a
                        
                           i
                         equivalently. In order to avoid arbitrarily large shape updates, an additional constraint is added to the optimization problem, which reduces the maximum allowable increase of the structure׳s weight to 50%. The optimization problem can be formulated in the form
                           
                              (21)
                              
                                 min
                                 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                          
                                       
                                       |
                                       
                                          
                                             
                                                a
                                             
                                             
                                                i
                                             
                                          
                                       
                                       |
                                    
                                    
                                       u
                                    
                                 
                                 st
                                 m
                                 −
                                 1.5
                                 ·
                                 
                                    
                                       m
                                    
                                    
                                       0
                                    
                                 
                                 ≤
                                 0
                              
                           
                        with m and m
                        0 being the actual and the initial mass of the structure.

Two different structural optimization runs are performed for the system, one with a uniform filter kernel function for all design variables and one with individual filters for shape and actuator design variables. Filter kernel functions are used according to Eq. (7). From engineering experience, the suggested “optimal”solution would be a frame like structure with a single horizontal force acting at the roller support. Having this idea in mind, the filter kernel radii for individual filtering are chosen. In order to guide the optimizer towards the expected solution, a filter with a large filter kernel radius R
                        
                           s
                         is chosen for the shape update, while a small filter radius R
                        
                           a
                         is used in order to treat the actuator update 
                           (
                           
                              
                                 
                                    
                                       
                                          R
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                              =
                              12
                           
                           )
                        , because of which a smooth shape update is enforced while a local actuator placement is enabled. For uniform filtering, an intermediate filter size is used.


                        Figs. 8 and 9
                        
                         show intermediate designs during the optimization process, right at the points when the mass constraints become active. The optimization run using individual filter kernels (Fig. 8) is striving for a solution which coincides very well with the expected frame structure. The shape already has a frame-like appearance, and the pressure load at the roller support already changed its direction, now pointing in direction of the investigated displacement u. At the same time, the uniform filter approach shows a completely different design with a peak in the middle of the structure. By this mean, a large lever arm is generated, leading to large bending deformations, also increasing the efficiency of the actuation process. The pressure load distribution looks similar to the individual filtering case, as the change of sign close to the roller support is also visible here. These features are kept upright until the converged solution of the optimization is reached (Figs. 10 and 11
                        
                        ). In case of the individual filtering, a frame structure with a vertical and a diagonal element has developed. The actuating pressure load is concentrated at the roller support, as it was expected, while the pressure acting onto the rest of the structure has been optimized to zero. The vertical member of the structure is designed in a corrugated form, which leads to a combined load carrying behaviour by bending and normal force, which again increases the flexibility of this member. As the wave length of the corrugations is much smaller than the filter radius applied to shape design variables, it can be concluded that the shape of the corrugations is governed by the geometry and stiffness of the structure, and is not a direct consequence of the filtering procedure.

In contrast, the uniform filter approach still shows the characteristic peak, and the load is not concentrated, but distributed over the peak and the support region. Although this design is very different from what was expected beforehand, it is also a quite efficient way of actuation because of the large lever arm generated by the peak. Due to the uniform filter size for both fields of design parameters, the optimizer is not able to generate a highly localized actuation as we can see it in the case of the individual filtering (Fig. 10).

In order to complete the comparison, a last optimization is performed, using individual filter kernels with an inverted size ratio 
                           (
                           
                              
                                 
                                    
                                       
                                          R
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                              =
                              0.2
                           
                           )
                        . Fig. 12
                         presents the final design, and the similarity between this design and the one obtained by a uniform filter kernel (Fig. 11) is obvious. This confirms the statement made in section concerning shape control, where it is claimed that the filter cancels out. So different filters might lead to identical or very similar designs, if optimization is directed into the radius of convergence of the same optimum in the early optimization phase.

This second example is meant to show the capability of the method to generate complex flexible structures which can act as elastic hinges providing high movability of the structure. These hinges usually are implemented as corrugated bellows, and as the direction of load application as well as the applied support conditions are usually not known beforehand, rotational symmetric bellows are used most frequently, in order to be applicable to a multitude of applications. The following example will focus on the generation of custom tailored elastic hinge structures for specific geometrical and structural boundary conditions by applying methods of parameter free shape optimization.

From a methodical point of view, this example is also very interesting, as it presents a geometry which cannot be optimized by pure intuition anymore. Additionally it emphasizes the benefit of the node based optimization approach towards CAD based optimization, as very complex geometries can be realized. Setting up a CAD based optimization model being able to reflect a complex and short waved bead pattern on the surface of the cylinder would be time consuming, especially when orientation, width and length of the beads are unknown. The chosen CAD parameterization would have significant influence on the final optimal design anyway. The parameter free optimization approach supersedes this modeling step, as well as re-meshing or mapping operations between design and computational model.

The system to be considered is a cylinder of length l=30,000 and of diameter d=10,000. One end of the cylinder is cut in 45°, and all translatoric degrees of freedom are fixed at this edge (see Fig. 13
                        ).

Initially, the structure is loaded by a vertical load which is uniformly distributed over the entire body of the cylinder and node-wise controlled via the actuator variables 
                           a
                        . In the context of an optimization with respect to Optimal Actuation, the sum of all acting external forces is considered as the cost function, while the vertical deflection of the un-cut edge u
                        
                           edge
                         of the cylinder is used to measure the benefit of the actuation. Analogously to the previous example, this structure is to be optimized with respect to Optimal Actuation by modifying the shape of the cylinder as well as the placing of the acting external forces. Therefore, the cost-benefit optimization can be formulated as
                           
                              (22)
                              
                                 min
                                 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                          
                                       
                                       |
                                       
                                          
                                             
                                                a
                                             
                                             
                                                i
                                             
                                          
                                       
                                       |
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             edge
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The results of this combined optimization are shown in Fig. 14
                        . Again an individual filtering for shape optimization and actuator placement has been used. Gradients with respect to shape are treated using a filter radius 
                           
                              
                                 R
                              
                              
                                 s
                              
                           
                           =
                           1.000
                         in order to ensure sufficiently large wave length and curvature of design features, while actuator placement is modified using a smaller filter radius of 
                           
                              
                                 R
                              
                              
                                 a
                              
                           
                           =
                           200
                        . The results clearly show that actuator placement is dominant in this case, while shape modifications are tiny. Optimization is striving for a solution only actuating the free edge of the cylinder, as this loading provides the largest lever arm and correspondingly the highest actuation benefit.

Based on these results and in order to accelerate computations, an actuating force only acting on the un-cut edge of the cylinder is assumed for the ongoing optimizations, which deal with pure shape optimization of the cylinder. Within this optimization, two different load cases will be considered. For this purpose, the vertical load acting at the edge of the cylinder can be applied in upward or downward direction, as indicated in Fig. 15
                        .

As actuator placement was already performed and therefore the cost function remains constant, the objective of the optimization becomes the maximization of the vertical deflection at the loaded edge u
                        
                           edge
                         induced by the ring load. Three different optimization runs will be performed reflecting the possible combinations of load cases. During the first two optimization runs, only one loading direction is considered and the related displacement is maximized. In the last optimization run, both tasks are combined in a multi-objective optimization, so each load case is considered separately and the related displacement responses are optimized as an equally weighted sum. In order to obtain a bead pattern instead of a free shape optimization, the design space is limited. Each node is allowed to move 
                           ±
                           250
                         in out-of-plane direction.

Optimizations are performed under consideration of large deflections. Therefore, fully geometrically nonlinear analyses are performed, and sensitivities are computed based on the nonlinear equilibrium condition. For this purpose, the state equation 
                           S
                           (
                           
                              u
                           
                           )
                           =
                           
                              
                                 f
                              
                              
                                 int
                              
                           
                           (
                           
                              u
                           
                           )
                           −
                           
                              
                                 f
                              
                              
                                 ext
                              
                           
                           =
                           0
                         is derived with respect to a design parameter s
                        
                           i
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       d
                                       S
                                    
                                    
                                       
                                          
                                             ds
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∂
                                       S
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       ∂
                                       S
                                    
                                    
                                       ∂
                                       u
                                    
                                 
                                 ·
                                 
                                    
                                       ∂
                                       u
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 0
                                 
                                    
                                       d
                                       S
                                    
                                    
                                       
                                          
                                             ds
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∂
                                       
                                          
                                             f
                                          
                                          
                                             int
                                          
                                       
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       ∂
                                       
                                          
                                             f
                                          
                                          
                                             ext
                                          
                                       
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       K
                                    
                                    
                                       T
                                    
                                 
                                 ·
                                 
                                    
                                       ∂
                                       u
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 0
                              
                           
                        resulting in the derivatives of the displacement field, where 
                           
                              
                                 f
                              
                              
                                 ˜
                              
                           
                         is the pseudo force vector:
                           
                              (24)
                              
                                 
                                    
                                       ∂
                                       u
                                    
                                    
                                       ∂
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             
                                                K
                                             
                                             
                                                T
                                             
                                          
                                       
                                       ]
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 ·
                                 
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   
                                                      ∂
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            ext
                                                         
                                                      
                                                   
                                                   
                                                      ∂
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                −
                                                
                                                   
                                                      ∂
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            int
                                                         
                                                      
                                                   
                                                   
                                                      ∂
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             ]
                                          
                                          
                                             ︸
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                          
                                          
                                             ˜
                                          
                                       
                                    
                                 
                              
                           
                        Partial derivatives used in the pseudo force vector can be determined using exact semi-analytical sensitivities [26]. Further information about optimization of shell structures considering geometrical nonlinear effects can be found in [27].

Optimization results shown in Figs. 16 and 17
                        
                         reveal that no classical corrugated bellows can be identified, due to the prescribed loading directions and the inclined supported edge.

All three designs have in common the corrugated bellows at the edges of the cylinder, located in the tension and compression zones. Strong differences can be seen on the lateral surface of the cylinders. Designs A and B of Fig. 17 are dominated by diagonal main beads, whereat the orientation results from the loading direction. These beads are acting as a kind of tension member, transporting the load over the length of the lateral surface, whereas the rest of the cylinder body performs an almost stress free deformation.

The multi objective optimization, which was formulated as an equally weighted sum of the response functions of the two other optimization runs, tries to find a compromise out of the two designs described above, as expected. As a consequence, no distinct diagonal bead exists anymore. A slight Y-shaped deepening can be observed only in the left part of the cylinder. The corrugated bellows at the loaded edge are almost symmetric, which is not surprising due to the altering load directions and the long distance to the inclined supported edge.

In order to judge the influence of the filter size on the final result of the optimization, a parameter study is performed for the upward load case. For this purpose, the filter radius is reduced step-by-step from the initial size of R=1.500 to a final size of R=375. Fig. 18
                         compares the obtained optimization results, where the contour plot highlights the directed design update, red color indicating an outward design update while the blue color indicates an inward design update. It can be observed that the chosen filter size has an influence on the final design, which is an expected behaviour for a complex shape optimization problem, being definitely non-convex. Despite these differences in the final shape, basic features can be identified, which are characteristic for all four compared shapes. In all cases, outward oriented beads can be observed in the central part of the lateral surface of the cylinder, oriented diagonally from top-left to bottom-right. V-shaped beads of changing orientation developed close to the supported edge, being orientated top-right to bottom-left on the top, and top-left to bottom-right on the bottom part of the cylinder. These beads start do widen with an increasing filter size, as expected, and tend to unite. Therefore the rate of beads on the cylinder׳s lateral surface increases when the radius of the filter is increased.

In summary, it can be noted that the filter influences the design in the expected way, such that a larger filter emphasizes a more global solution while a smaller filter leads to localized design modifications. Nevertheless, all designs are clearly governed by the pure gradient information of the response function, leading to basic characteristic elements in the design. These elements are preserved and remain present, even for severely differing filter sizes.

In Figs. 19 and 20
                        
                        , the structures which were optimized using one loading direction are shown in different states of deformation. In both cases, a maximum deformation of 10,000 is applied, which is identical to the cylinder׳s diameter. It can be determined that the bead structures act in the expected way. The structure shows a crinkle-like behaviour along the lateral faces of the cylinder, which is well known from membrane structures effected by compressive strains. As this kind of local crinkling is a nonlinear process and the observed displacements are significant, the consideration of geometric nonlinear effects and large deformations within the structural analysis as well as within the optimization is essential.

In Fig. 21
                        , the load-displacement curves for the different cylinder designs A, B and C are compared. As recommended in [28], dynamic effects have been taken into account in the analysis in order to ensure numerical stability of the computations. In pure static analysis, the initial design and Design C fail for moderate deformations due to local instabilities. In order to overcome these instabilities, a dynamic analysis using a Newmark-Beta integration scheme was performed, using a density of 
                           ρ
                           =
                           7.5
                           ·
                           
                              
                                 10
                              
                              
                                 −
                                 7
                              
                           
                         and stiffness proportional Rayleigh damping. Density has been chosen as small as possible, such that computations are stable but the structure does not show observable dynamic effects. It can be determined that the individually optimized designs A and B show the softest behaviour and so the best adaptivity, as expected.

Design C shows a surprisingly high flexibility, being quite comparable to the designs A and B, especially for deformations ranging from −5.000 to +5.000. However, in large displacement regimes, static computations collapsed for both loading directions, which indicates sudden instability failure and a non-robust behaviour of the structure for large deflections. In summary, the compromise design C shows a good flexibility for both loading directions, but it does not behave as resistantly as the designs tailored for a specific loading direction.

As a conclusion of this example, it can be noted that the optimization approach based on pure engineering experience fails for quite simple geometries already. Methods of structural optimization have to be taken into account, especially for those optimization problems facing tasks of large deflections. Beyond that, this example points out the advantages of the finite element based structural optimization approach, not being based on an a-priori choice of geometry variables. This choice naturally has an influence on the final optimization result. In contrast, the finite element based optimization approach allows optimization with a minimum of modeling effort also for changing boundary conditions, such as multiple or varying loads.

The last example considered in this contribution refers to a real industrial application of an adaptive structure: A facade shading element which was developed at the university of Stuttgart at the Institute of Building Structures and Structural Design (Institut für Tragkonstruktionen und konstruktives Entwerfen, ITKE) under the lead of Julian Lienhard [29,30]. A bionic flapping mechanism inspired by the working principle of the Bird-of-Paradise flower, which is an excellent example of hinge-free plant movement, provided the basis. The flower׳s blossom is protected by leaves which automatically flap aside horizontally when the perch is vertically loaded by a possible pollinator. Fig. 22
                         illustrates the working principle and shows the bending of the covering leave in horizontal direction as soon as the perch is loaded vertically.

This principle was abstracted in order to generate an adaptive facade shading element. The goal was to design a hinge less shading system with as few moving parts as possible. The considered element has an overall length of 2m and a height of 25cm. It consists of a GFRP (glass fiber reinforced plastic) fabricated wing, which is eccentrically attached to a pre-bent backbone also made of GFRP. At both ends of the back bone, steel cramps are applied which form the supports of the entire system. At the top of the wing, an edge beam increases the stiffness of the free edge. The kinematics of the system are controlled by a horizontal movement of the supports, leading to a torsional buckling effect within the fin, performing a bending deformation consequently. Fig. 23
                         illustrates the deformation process as it was simulated in an early design phase. It can be observed that the design meets the requirements of allowing a nearly undisturbed view in open configuration quite well, but in closed configuration a large shading surface is provided by the 90° flapped wing.

The finite element model used for optimization is shown in Fig. 24
                        , including boundary conditions. The metal cramps are supported at the bottom line. At the connection to the backbone, a pre-described horizontal displacement of 7mm is applied. For the entire model including the edge beam, 4-noded bi-linear shell elements were used. The material parameters are listed in Table 1
                        . The backbone and the edge beam are modeled assuming quasi isotropic behaviour, although they are fabricated from glass fiber re-enforced plastic. Compared to the wing, these parts behave very stiffly, so that the influence of the anisotropy of these parts onto the entire system behaviour can be neglected. For the wing itself, orthotropic material behaviour was taken into account and a two-layer 0-90-layout was assumed; hereby the outer ply, regarding the location of the backbone, was oriented in global x-direction and the inner ply in y-direction.

During the first step of the optimization process, a shape optimization of the backbone is performed. For this purpose, all nodes defining the bone are equipped with one design variable at a time, controlling the coordinate in y-direction in order to modify the shape of the mono-axial curved backbone. Since the design changes are meant to be not too large, the design space of the optimization algorithm is limited. For this reason a cuboid of a height of 2cm is defined around the backbone restricting the maximum shape adaption. Fig. 25
                         presents the initial system including the restricted design space. In direct comparison to the straight edges of the cuboid, the initial curvature of the backbone becomes eye-catching.

Optimization is performed with respect to a maximization of the vertical deflection of the wing׳s free edge for the given actuating horizontal displacement of 7mm at the cramps. The related displacement is evaluated at five nodes distributed along the edge. Accordingly, the objective function to minimize is computed by summing up the negative absolute vertical deformations at the five evaluation points:
                           
                              (25)
                              
                                 min
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       5
                                    
                                 
                                 −
                                 |
                                 
                                    
                                       
                                          u
                                       
                                       
                                          y
                                          ,
                                          i
                                       
                                    
                                 
                                 |
                              
                           
                        
                     

Due to the expected large rotations indicated in Fig. 23, a geometric nonlinear analysis is performed. In Figs. 26 and 27
                        
                        , two optimized designs are compared. One design is obtained using a filter radius of 
                           R
                           =
                           0.1
                           
                           m
                         and the other one results from an optimization using a larger filter radius of 
                           R
                           =
                           0.2
                           
                           m
                        . Both optimum solutions differ severely from the initial pre-bent convex shape of the backbone. In both cases the top and the bottom design space boundaries become active. Thus a highly non-convex shape is obtained, reminding of corrugated iron. Comparing the two designs, we can see that the wave length of the corrugations is effected by the filter size. As mentioned in section “Mathematical formulation of shape optimization and shape control”, the filter can be regarded as a kind of design tool, allowing the user to easily explore the design space by just modifying the filter radius. Now it is the user׳s decision which solution to prefer. In order to judge the qualities of the two designs, the deformation behaviour of the optimized geometries is compared (Fig. 28
                        ). This comparison shows that both designs are quite competitive with respect to the maximum displacement of the Flectofin element. In both cases, the maximum displacement was increased by nearly 40% by optimizing the shape of the backbone.

Comparing the maximum displacement of the two optimized designs did not point out a preferable design, therefore the decision which design will be used for the ongoing optimization is based on the consideration of manufacturing issues. Since the geometry of the backbone obtained by the larger filter radius is less complex than the short waved design obtained by the small filter, this design is preferred in the following sections.

In the second stage of optimization, the thickness of the wing is optimized. As the wing is assumed to be made of a two-layer composite material, a layer-wise thickness modification is considered for optimization as well. For this purpose, element-based design variables are defined, enabling the optimizer to modify each ply thickness for each single element. In order to remain within reasonable ranges of thickness, the initial ply thickness of 0.5mm is allowed to change between 0.3mm and 0.7mm.

The element-wise performed thickness optimization does not claim to provide an immediately fabricable design. Provided results should rather be considered as input or inspiration within the design phase, as the element-wise thickness distribution needs to be re-interpreted into a fabricable setup. Element-wise optimization of thickness is only an auxiliary mean for defining design parameters. In order to compute element stiffness, an averaging of thicknesses on nodal level is performed. This is done because classical Kirchhoff–Love shell theory does not allow thickness jumps. Even for Reissner–Mindlin formulated finite elements, thickness jumps might lead to problems, especially when a director kinematics based formulation is used, as described by [31] or [32]. Fig. 29
                         shows how the averaging and interpolation of non-continuous shell thickness is done in the 1D-case. The issue of overlapping and gapping in the shell body due to the c
                        0-continuous interpolated geometry of the finite element formulation is also considered. It is resolved by using an approximated surface normal vector at each finite element node, which is computed by averaging normal vectors of adjacent elements.

In order to evaluate the actual state of actuation, deformation is measured at five points along the edge beam. In contrast to the first optimization run, where the displacements were just maximized, a target value is pre-described now. At each of the five evaluation points, a target value of 12cm is assigned to the y-displacement, just as a target of 20cm is specified for the z-displacement. Finally, a least squares function is formulated, minimizing the deviations of these target values. At the same time, a buckling constraint is defined to avoid local instabilities and non-unique shapes of equilibrium caused by changes of thickness inside the wing. For this purpose, the smallest eigenvalue of the tangential stiffness matrix is constrained to remain strictly positive. The optimization problem to be solved can be written in the form
                           
                              (26)
                              
                                 min
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       5
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             
                                                u
                                             
                                             
                                                y
                                                ,
                                                i
                                             
                                          
                                          −
                                          12
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       (
                                       
                                          
                                             
                                                u
                                             
                                             
                                                z
                                                ,
                                                i
                                             
                                          
                                          −
                                          20
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 st
                                 .
                                 eig
                                 (
                                 
                                    
                                       
                                          K
                                       
                                       
                                          T
                                       
                                    
                                 
                                 )
                                 >
                                 0
                              
                           
                        where 
                           
                              
                                 u
                              
                              
                                 y
                                 ,
                                 i
                              
                           
                         and 
                           
                              
                                 u
                              
                              
                                 z
                                 ,
                                 i
                              
                           
                         denote the observed displacement components of the evaluation points along the edge beam.

The outcome of the thickness optimization is shown in Figs. 30 and 31
                        
                        , illustrating the thickness distributions for both plies. For both plies, the material thickness is reduced to the allowable minimum in the region connecting to the backbone, while towards the upper edge, the ply thicknesses are increased. By this means a high flexibility of the entire wing is achieved at the root, while at the same time the upper part of the wing is stiffened in order to homogenize the deflection of the edge.

In Fig. 32
                        , the deformation of the completely optimized Flectofin element is shown in direct comparison to the pure shape optimized design and the initial design. As an effect of the thickness optimization, the maximum deflection was increased by another 3.5cm. The deformation of the edge is more homogeneous compared to the purely shape optimized design, therefore the maximum deformation of 23cm coincides very well with the target value of 
                           
                              
                                 
                                    
                                       20
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       12
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           =
                           23.3
                           
                           cm
                        . This value could not be achieved along the entire free edge, but deformations between 21cm and 23cm could be established.

@&#CONCLUSION@&#

This contribution showed the applicability of the parameter free optimization approach in the context of flexible smart structures. In the context of the theory of optimal actuation, it can also be applied to the problem of optimal actuator placement. The combination of shape and thickness optimization enables the user to design shell structures which are tailor-made for applications in the field of smart and controlled structures.

@&#ACKNOWLEDGMENT@&#

This research project is funded by the Deutsche Forschungsgemeinschaft (DFG), Project BL 306-21. This funding is gratefully acknowledged.

@&#REFERENCES@&#

