@&#MAIN-TITLE@&#Coordinate-free geometry and decomposition in geometrical constraint solving

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We solve 2D/3D geometric constraints by using coordinate-free formulation.


                        
                        
                           
                           Statements are translated into formalism that reduces the number of equations.


                        
                        
                           
                           A decomposition algorithm is proposed to produce small subsystems.


                        
                        
                           
                           Subsystems are solved by homotopy.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Geometrical constraint solving

Cayley–Menger determinants

System decomposition

Equational system optimization

Homotopy

@&#ABSTRACT@&#


                  In CAD, a designer usually specifies mechanisms or objects by the means of sketches supporting dimension requirements like distances between points, angles between lines, and so on. This kind of geometric constraint satisfaction problems presents two aspects which solvers have to deal with: first, the sketches can contain hundreds of constraints, and, second, the problems are invariant by rigid body motions. Concerning the first issue, several decomposition methods have been designed taking invariance into account by fixing/relaxing coordinate systems. On the other hand, some researchers have proposed to use distance geometry in order to exploit invariance by rigid body motions. This paper describes a method that allows us to use distance geometry and decomposition in the same framework.
               

@&#INTRODUCTION@&#

Problems of geometric constraint satisfaction where constraints express geometric requirements related to distances, angles, tangencies and incidences occur in many fields such as CAD, geometric modeling, robotic or molecular modeling. The problem consists in finding the position and the orientation of some given objects in a way that some given constraints are satisfied. More particularly, in CAD, problems come from the specification of pieces or mechanisms given in the form of a sketch drawn by a designer using basic geometric primitives such as points, lines, planes, circles, spheres, etc., and metric requirements such as distances between points, angles between lines or planes. In that framework, the aim is to get coordinates for the points, planes, circles, etc., so that the incidence relations given by the sketch, and the added metric constraints are fulfilled. By essence, these problems are invariant by direct isometries (or rigid body motions for engineers), that is, applying a rigid body motion on a solution yields another solution. It is also usual to assume that the objects are well defined that is there is a finite number of solutions up to rigid body motions. In that situation, the problem is said to be well-constrained.

Several methods designed to solve such problems are described in the literature (see  [1] for a recent state of the art). Some methods consider the coordinates of primitives and try to solve the equation system either numerically, for instance with Newton–Raphson  [2] or homotopy  [3] methods, or symbolically for instance by using Gröbner basis or Ritt–Wu principle  [4]. However, these methods suffer drawbacks that we want to overcome: symbolic methods have an exponential complexity, and numerical methods are unable to produce all the solutions within a reasonable time. Other methods are more sticked to geometry: they use knowledge-based systems (KBS)  [5,6] or graph operations  [7] to solve small problems and are designed to decompose larger problems into smaller subproblems when it is possible. These methods for decomposing geometric problems always take into account the rigid body motion invariance. The way they proceed amounts to first fix some coordinates and then relax them by letting act the group of rigid body motions on the solutions for the subproblems. When successful, these techniques may allow to yield all solutions in a reasonable time.

Unfortunately, 3D problems, even the ones involving few objects, are hard or impossible to solve by using only constructive methods. And numerical solvers have to face systems with dozens of equations and whose global degree is too high to enable the use of homotopy to follow all the possible paths. For some years, another approach has been studied which ignores coordinates in the first time and which is more able to take rigid body motion invariance into account  [8–10]. This approach is based on coordinate-free geometry. The idea consists of replacing coordinates by all the distances between points. The main ingredient to write down equations is the Cayley–Menger determinant between some sets of constrained points. This method had been successful on some problems like the Stewart platform problem  [8] or the Malfatti problem  [9] where the equation system to solve is very small compared to the classical approach based on Euclidean coordinates. However, such systems were built by hand and, in the coordinate-free geometry framework, there are no known methods for decomposing big systems.

We propose here a method to automatically produce equation systems using the Cayley–Menger determinant and to structurally decompose the constraint systems whenever possible. The resulting systems can then be solved by classical homotopy in order to yield either all the solutions, or, at least, the highest number of possible solutions.

This paper is organized as follows. Section  2 introduces distance geometry and Cayley–Menger determinants. Section  3 gives algorithms to provide Cayley–Menger systems from constraints systems. Section  4 presents our algorithm of decomposition of Cayley–Menger systems. The numerical approach and some results are given in Section  5. Section  6 concludes and mentions some limits and future works.

A geometric constraint system, in short GCS, is defined by a triple 
                           C
                           
                              [
                              X
                              ,
                              A
                              ]
                           
                         where 
                           X
                         is a set of unknowns, 
                           A
                         is a set of parameters and 
                           C
                         is a set of constraints on 
                           X
                         and 
                           A
                        . The unknowns correspond to some geometric entities (also called primitives or objects) such as points, lines, circles, planes, etc., the constraints are relationships involving distances, angles, tangencies, incidences, etc., and the parameters are the values imposed as dimensions like distance and angle values.

More specifically, we consider here rigid bars problems as encountered for instance in CAD, robotics and molecular modeling. So, entities are points and hyperplanes, that is, lines in 2D and planes in 3D; constraints are about distances between two entities and angles between hyperplanes. The model that we use does not include 3D lines. However, it is often possible to replace them by pair of incident points. For instance, when angles between 3D lines are considered, they often concern adjacent segments. So the angle between segment 
                           p
                           1
                           p
                           2
                         and segment 
                           p
                           1
                           p
                           3
                         can be transformed into a distance that is expressed as a function of lengths of both segments and the angle. Unless otherwise stated, we assume that statements are in 3D. It is also assumed that constraint systems are well-constrained, meaning first that there is a finite number of solutions up to rigid body motions, and second, that in some open neighborhood of the parameter values, each solution is a continuous function of the parameter values. Thus parameters are assigned to non-critical values (or regular values). For instance, for a triangle specified by its three lengths, no length equals the sum of the two other lengths. Note that the triangle can still have some special property, like a right angle, or being equilateral: we do not impose the parameter values to be generic. Indeed, the zero distance is used later on to specify point–plane incidence.

A geometric constraint system is usually associated with its corresponding graphs of constraints. Indeed, as constraints always involved two objects in our case, a constraint system can be represented by graph 
                           G
                           =
                           
                              〈
                              V
                              ,
                              E
                              〉
                           
                         where 
                           V
                         is the set of vertices for entities and 
                           E
                         is the set of pairwise edges for constraints. An edge between:
                           
                              •
                              two points mean the point–point distance constraint;

two hyperplanes represent the angle constraint;

a hyperplane 
                                    h
                                  and a point 
                                    p
                                  mean distance between 
                                    p
                                  and its projection onto 
                                    h
                                  (it is 0 if 
                                    p
                                  lies on 
                                    h
                                 ).

In the rest of the paper, for the sake of simplicity, when there is no ambiguity, we confound both notions of GCS and its associated graph of constraints.

As an example, we consider a GCS coming from a mechanism constituted by two stacked Stewart platforms. Recall that a Stewart platform is an articulated system that can be represented as a triangle basis connected by six bars to another triangle whose position depends on the lengths of the bars. Fig. 1
                        (a) shows a double Stewart platform and Fig. 1(b) is the corresponding graph. The GCS includes 9 points and 21 distance constraints.

Geometrically, the notion of determinant is related to volume. By classical operations on determinants, Cayley expressed the volume of a simplex in terms of distances. If coordinates of points are rows of matrices, multiplications of such matrices perform dot products that eliminate coordinates and make distances appear. Later, Menger studied its relevance to solve geometrical problems. Since then, the Cayley–Menger determinant is used to express or solve the geometric problem in a coordinate-free framework. Lu Yang  [11] extended Cayley–Menger determinants to hyperplanes and hyperspheres.

Given a set of 
                           n
                         points 
                           
                              {
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              }
                           
                         in the Euclidean space of dimension 
                           d
                        , the Cayley–Menger (CM for short) determinant of these points is defined by: 
                           
                              
                                 D
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    |
                                    
                                       
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             1
                                          
                                          
                                             ⋯
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   ,
                                                   2
                                                
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   ,
                                                   n
                                                
                                             
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   ,
                                                   1
                                                
                                             
                                          
                                          
                                             0
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   ,
                                                   n
                                                
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                          
                                             ⋮
                                          
                                          
                                             ⋮
                                          
                                          
                                             ⋱
                                          
                                          
                                             ⋮
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   2
                                                
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             0
                                          
                                       
                                    
                                    |
                                 
                              
                           
                         where 
                           
                              
                                 r
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                         is the squared distance between 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                        . Then 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         is the determinant of a symmetric matrix.

In dimension 
                           d
                        , a set of 
                           n
                           ≥
                           d
                           +
                           2
                         points specified by a Cayley–Menger determinant is embeddable in 
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                         if 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           0
                        . In particular, in 3D, for 5 and 6 distinct points it comes: 
                           
                              
                                 D
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          4
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          5
                                       
                                    
                                    )
                                 
                                 =
                                 0
                              
                           
                         and 
                           
                              
                                 D
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          4
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          5
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          6
                                       
                                    
                                    )
                                 
                                 =
                                 0
                                 .
                              
                           
                         These properties are widely used in the following to write down the system of equations corresponding to GCS.

In addition, for 
                           n
                           =
                           d
                           +
                           3
                        , Sippl and Scheraga  [12] showed that equation 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                    −
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           0
                         can be substituted by 
                           
                              
                                 D
                              
                              
                                 ∗
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                    −
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           0
                         where: 
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       ∗
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    |
                                    
                                       
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             1
                                          
                                          
                                             ⋯
                                          
                                          
                                             1
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   ,
                                                   2
                                                
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   ,
                                                   n
                                                   −
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   ,
                                                   n
                                                   −
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   ,
                                                   1
                                                
                                             
                                          
                                          
                                             0
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   ,
                                                   n
                                                   −
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   ,
                                                   n
                                                   −
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                          
                                             ⋮
                                          
                                          
                                             ⋮
                                          
                                          
                                             ⋱
                                          
                                          
                                             ⋮
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   −
                                                   2
                                                   ,
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   −
                                                   2
                                                   ,
                                                   2
                                                
                                             
                                          
                                          
                                             ⋮
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   −
                                                   2
                                                   ,
                                                   n
                                                   −
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   −
                                                   2
                                                   ,
                                                   n
                                                   −
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   2
                                                
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   n
                                                   −
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   n
                                                   ,
                                                   n
                                                   −
                                                   1
                                                
                                             
                                             .
                                          
                                       
                                    
                                    |
                                 
                                 .
                              
                           
                        
                     

This simplification that removes one line and one column is made thanks to Jacobi’s theorem with the fact that minors involving 
                           d
                           +
                           2
                         objects are equal to 0. So, in 3D, the matrix for 6 points has the same size than a 5 points matrix. This property is useful to lower the degree of the equations.

In this paper, we use the extended definitions coming from  [11] in which points and hyperplanes are considered within a coherent framework. In  [11], hyperspheres are also included in the framework, but we do not consider this case here. For a given set of 
                           n
                         objects 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        , where 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         can be a point or a hyperplane, matrix 
                           M
                         is defined as follows:
                           
                              
                                 M
                                 =
                                 
                                    (
                                    
                                       
                                          
                                             0
                                          
                                          
                                             δ
                                          
                                       
                                       
                                          
                                             
                                                
                                                   δ
                                                
                                                
                                                   t
                                                
                                             
                                          
                                          
                                             G
                                          
                                       
                                    
                                    )
                                 
                              
                           
                         with 
                           δ
                           =
                           
                              (
                              
                                 
                                    δ
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    δ
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         and 
                           
                              
                                 δ
                              
                              
                                 i
                              
                           
                           =
                           1
                         if 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         is a point and 
                           
                              
                                 δ
                              
                              
                                 i
                              
                           
                           =
                           0
                         if it is a hyperplane. With 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                         the 
                           i
                        th row and 
                           j
                        th column element of 
                           G
                        , we have: 
                           
                              •
                              
                                 
                                    
                                       
                                          g
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                  is the squared distance between 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                  if they are both points (
                                    
                                       
                                          r
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                  above)


                                 
                                    
                                       
                                          g
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                  is the signed distance of 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                  if one is a point and the other a hyperplane (so it is 0 for the incidence relation)


                                 
                                    
                                       
                                          g
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                  equals 
                                    −
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    cos
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  if they are both hyperplanes.

The determinant of 
                           M
                         is still called a Cayley–Menger determinant and the previous notation 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         is used. The property 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    p
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           0
                         if 
                           n
                           ≥
                           d
                           +
                           2
                         and the simplification 
                           
                              
                                 D
                              
                              
                                 ∗
                              
                           
                         are still valid. A 
                           
                              CM
                           
                        -determinant can be expanded in an equation where 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                         are either unknowns or numeric values if they correspond to a parameter. Now, let us see how to use this to solve distance and angle constraints.

Given a set 
                           X
                         of points and hyperplanes, and a set of constraints 
                           C
                         involving distances, incidences and angles, the objects of 
                           X
                         can be determined by solving the GCS corresponding to 
                           C
                        . But, they can also be determined if all the distances or angles between any pair of objects of 
                           X
                         are known, or at least, a representative sub-set of all these distances and angles which could make feasible a simple computation of coordinates of all objects by intersecting spheres and planes. The previous properties help: if we can find numeric values for all the distances (or angles) such that 
                           D
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    4
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    5
                                 
                              
                              )
                           
                           =
                           0
                        , we can compute the coordinates of, say 
                           
                              
                                 p
                              
                              
                                 4
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 5
                              
                           
                         according to a position of 
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         and the values of the distances. This way, the constraints of distance or angle give known values in the previous determinant, and each absence of constraint between two objects gives an unknown distance or angle that we have to find in order to solve the problem. The initial problem of finding some coordinates is then translated into a problem where some distances or angles are known and we want to know the other distances or angles between some pairs of objects.

Following this approach, we have to find subsets of 
                           X
                        , each of size equal or greater than 
                           d
                           +
                           2
                        . Each subset gives rise to the nullity of a determinant, that is an equation, and the overall system of equations must be well-formed that is: there are as many equations than unknowns and no subsystem has more equations than unknowns. Obviously, there are a lot of possibilities to build such equation systems. In general, they have fewer equations than the corresponding GCS. With example of Fig. 1, the Cartesian approach leads to a 21-equation system. In Table 1
                        , we give some examples of well-formed systems of equation that come from the Cayley–Menger determinant approach.

In Cayley–Menger determinants (CM-system for short), unknowns are pairwise relations such as point–point distances, point–plane distance or angle between planes. Once numerically solved, the values of distances and angles are used to determine the coordinates of points and planes. To achieve this, a set 
                           R
                         of 3 primitives say 
                           
                              {
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              }
                           
                         is chosen. Such a set of primitives is called a reference. For each primitive 
                           p
                        , if relations between 
                           p
                         and all elements of 
                           R
                         are known, then coordinates of 
                           p
                         can be computed. This implies that a construction must be known for each possible GCS involving four entities and six constraints.

Systems 1, 2 and 3 are all well-formed and the natural question is how to get such a well-formed system and which to choose to efficiently solve the constraints. The following section addresses these issues.

To build a well-formed 
                        
                           CM
                        
                     -system it is possible to first choose a reference 
                        R
                      and then build a system that will provide numeric values of relations between all primitives and 
                        R
                     . The construction of such systems relies on what we call the external edges of 
                        R
                     . Given a graph 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      and a set 
                        R
                        ⊂
                        V
                     , an edge 
                        
                           (
                           x
                           ,
                           y
                           )
                        
                      is an external edge if 
                        x
                        ∉
                        R
                      and 
                        y
                        ∉
                        R
                     . So external edges are edges whose end vertices do not belong to reference 
                        R
                     .

As a preliminary remark, it has to be mentioned that our framework is generic in the sense that the constraints are algebraically independent and do not induce incidence constraints. For instance, points are not colinear or coplanar if such constraints are not in the GCS.

An entity is a point or a plane and has 3 degrees of freedom. Each constraint removes one degree of freedom. So each vertex in a constraint graph is an endpoint of at least 3 edges. If this is not true the assumption that the constraint system is well-constrained does not hold. If an entity 
                           p
                         is not involved in any external edge so it is connected by three constraints to 
                           R
                        . Entity 
                           p
                         can be removed and computed after the whole system is solved. Such entities are then filtered out before running algorithms on 
                           
                              CM
                           
                        -system computation. The following first algorithm is only based on external edges. Three points are chosen for 
                           R
                        , and we note 
                           R
                           =
                           
                              {
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              }
                           
                        :


                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm: CM3
                                       
                                    
                                    
                                       
                                          Input: constraint graph 
                                             G
                                           and 
                                             R
                                          
                                       
                                    
                                    
                                       
                                          Output:
                                          
                                             
                                                CM
                                             
                                          -system SCM
                                    
                                    
                                       1—SCM = 
                                             0̸
                                          
                                       
                                    
                                    
                                       2—for each external edge 
                                             
                                                (
                                                P
                                                ,
                                                Q
                                                )
                                             
                                           of 
                                             G
                                          
                                       
                                    
                                    
                                       
                                          add 
                                             D
                                             
                                                (
                                                R
                                                ,
                                                P
                                                ,
                                                Q
                                                )
                                             
                                           to SCM
                                    
                                 
                              
                           
                        
                     

According to 
                           R
                        , resulting system 
                           
                              SCM
                           
                         may contain more or less equations. This is discussed further.

Let us prove that 
                           
                              SCM
                           
                         is structurally well-constrained, that is: 
                           
                              (a)
                              it contains as many equations as unknowns;

each of its subsystems contains more unknowns than equations.

Since the constraint system is assumed to be well-constrained there are two necessary conditions. First, a GCS of 
                           n
                         entities has 
                           3
                           n
                           −
                           6
                         constraints. Indeed, points and planes in 3D have 3 degrees of freedom and a rigid object has 6 degree of freedom, 3 for rotations and 3 in translations. Second, for any subsystem of 
                           
                              
                                 c
                              
                              
                                 ′
                              
                           
                         constraints involving 
                           
                              
                                 n
                              
                              
                                 ′
                              
                           
                         entities, we have 
                           
                              
                                 c
                              
                              
                                 ′
                              
                           
                           ≤
                           3
                           
                              
                                 n
                              
                              
                                 ′
                              
                           
                           −
                           6
                        .

Let us show (a) first. If 
                           k
                         is the number of external edges, 
                           
                              SCM
                           
                         has 
                           k
                         equations. In equation 
                           D
                           
                              (
                              R
                              ,
                              P
                              ,
                              Q
                              )
                           
                        , the 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        ’s are: 3 relations within elements of 
                           R
                        , 3 relations between 
                           P
                         and 
                           R
                        , 3 relations between 
                           Q
                         and 
                           R
                         and finally the relation between 
                           P
                         and 
                           Q
                        . In the whole system 
                           
                              SCM
                           
                        , the number of entities is 
                           n
                         and each 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           ∉
                           R
                         is the end of at least one external edge. So, the number of 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        ’s of 
                           
                              SCM
                           
                         is 
                           3
                           +
                           3
                           
                              (
                              n
                              −
                              3
                              )
                           
                           +
                           k
                           =
                           3
                           n
                           −
                           6
                           +
                           k
                        . Given that 
                           3
                           n
                           −
                           6
                         are parameters among the 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        ’s, it remains 
                           k
                         unknowns.

For (b), consider a subsystem of 
                           
                              SCM
                           
                         with 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                           <
                           k
                         CM-determinants involving 
                           
                              
                                 n
                              
                              
                                 ′
                              
                           
                           ≤
                           n
                         entities. With the same arguments than for (a), the number of 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        ’s is 
                           3
                           
                              
                                 n
                              
                              
                                 ′
                              
                           
                           −
                           6
                           +
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                        . Among them, the number of unknowns, i.e. that do not correspond to a parameter, is less or equal to 
                           3
                           
                              
                                 n
                              
                              
                                 ′
                              
                           
                           −
                           6
                         because of the second necessary condition. So the number of unknowns is greater or equal to 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                        .

Actually, we can directly prove that 
                           
                              SCM
                           
                         is equivalent to the constraint system 
                           S
                         represented by 
                           G
                        . Indeed, 
                           
                              SCM
                           
                         is not over-constrained, since every solution of 
                           S
                         gives a solution of 
                           
                              SCM
                           
                        . In turn, each constraint of 
                           S
                         is taken into account in 
                           
                              SCM
                           
                        . If 
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         is the edge for a constraint 
                           c
                        , there are 3 cases. First, if 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           ∈
                           R
                         and 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                           ∈
                           R
                           ,
                           c
                         takes place in every equation. If 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           ∉
                           R
                         and 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                           ∉
                           R
                           ,
                           c
                         is an external edge and was used to form one equation. Finally if 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           ∈
                           R
                         and 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                           ∉
                           R
                        , then 
                           c
                         appears in each equation where 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         is an end of an external edge which is the case for at least one external edge. So, constraint 
                           c
                         is taken into account in 
                           
                              SCM
                           
                        .

In Table 1, system 2 is returned by 
                           
                              CM
                           
                           3
                         with 
                           R
                           =
                           
                              {
                              p
                              1
                              ,
                              p
                              7
                              ,
                              p
                              8
                              }
                           
                         and system 3 with 
                           R
                           =
                           
                              {
                              p
                              4
                              ,
                              p
                              5
                              ,
                              p
                              6
                              }
                           
                        .

A 4 point reference can also be considered. Let us take 
                           R
                           =
                           
                              {
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    4
                                 
                              
                              }
                           
                        . This second algorithm is described by the following pseudo-code:


                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm: CM4
                                       
                                    
                                    
                                       
                                          Input:
                                          
                                             G
                                           and 
                                             R
                                             =
                                             
                                                {
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      4
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                          Output:
                                          
                                             
                                                CM
                                             
                                          -system SCM
                                    
                                    
                                       1—SCM = 
                                             0̸
                                          
                                       
                                    
                                    
                                       2—for each entity P in 
                                             
                                                {
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      5
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      n
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                          add 
                                             D
                                             
                                                (
                                                R
                                                ,
                                                P
                                                )
                                             
                                           to SCM
                                    
                                    
                                       3—for each external edge 
                                             
                                                (
                                                P
                                                ,
                                                Q
                                                )
                                             
                                           of 
                                             G
                                          
                                       
                                    
                                    
                                       
                                          add 
                                             
                                                
                                                   D
                                                
                                                
                                                   ∗
                                                
                                             
                                             
                                                (
                                                R
                                                ,
                                                P
                                                ,
                                                Q
                                                )
                                             
                                           to SCM
                                    
                                 
                              
                           
                        
                     

Again, we can prove that CM-systems yielded by CM4 are well-formed. For point (a), let us note 
                           n
                         the number of entities from 
                           G
                         and 
                           k
                         the number of external edges. Algorithm 
                           
                              CM
                           
                           4
                         puts 
                           t
                           =
                           
                              (
                              n
                              −
                              4
                              )
                           
                           +
                           k
                         equations on 
                           
                              SCM
                           
                        . Consider now the number of unknowns. In step 2, each entity 
                           P
                         is connected by 4 relations to 
                           R
                        . There are 
                           
                              (
                              n
                              −
                              4
                              )
                           
                         such entities. Step 3 adds 
                           k
                         new relations and there are 6 relations within elements of 
                           R
                        . Among these 
                           4
                           
                              (
                              n
                              −
                              4
                              )
                           
                           +
                           k
                           +
                           6
                         relations, 
                           3
                           n
                           −
                           6
                         of them are parameters, so it remains 
                           n
                           −
                           4
                           +
                           k
                         unknowns.

For point (b), we consider a subsystem 
                           
                              SCM
                           
                         with 
                           m
                           =
                           
                              
                                 m
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                         equations with 
                           
                              
                                 m
                              
                              
                                 1
                              
                           
                         the number of equations coming from step 2, and 
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                         the number of equations coming from step 3. Suppose that this subsystem involves 
                           c
                         constraints of the GCS and 
                           y
                         entities. The number of 
                           
                              
                                 g
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        ’s is 
                           4
                           
                              (
                              y
                              −
                              4
                              )
                           
                           +
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                           +
                           6
                         and the number of unknowns is 
                           x
                           =
                           4
                           
                              (
                              y
                              −
                              4
                              )
                           
                           +
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                           +
                           6
                           −
                           c
                        . We have to prove that 
                           x
                           ≥
                           m
                        . Since the GCS is well-constrained, we also have 
                           c
                           ≤
                           3
                           y
                           −
                           6
                        . Thus, we obtain: 
                           
                              
                                 x
                                 ≥
                                 y
                                 −
                                 4
                                 +
                                 
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                         It is easy to see that 
                           y
                           −
                           4
                           ≥
                           
                              
                                 m
                              
                              
                                 1
                              
                           
                         (
                           y
                           −
                           4
                           =
                           
                              
                                 m
                              
                              
                                 1
                              
                           
                         when considering the whole system). We can then conclude that 
                           x
                           ≥
                           m
                        .

In Section  2, system 1 was provided with 
                           R
                           =
                           
                              {
                              p
                              3
                              ,
                              p
                              4
                              ,
                              p
                              6
                              ,
                              p
                              9
                              }
                           
                        , the first five equations come from step 2 and the last four come from step 3.

Systems can be roughly compared according to their size that is the number of equations. First, one can wonder if CM3 and CM4 always provide smaller systems than the Cartesian approach. With 
                           
                              |
                              R
                              |
                           
                           =
                           3
                        , the output CM-system is smaller than the Cartesian system if 
                           k
                           <
                           3
                           n
                           −
                           6
                         which always occurs since 
                           k
                         is the number of external edges. Indeed, 
                           k
                         is always lower than the overall number of geometric constraints. With 
                           
                              |
                              R
                              |
                           
                           =
                           4
                        , output CM-system is smaller when 
                           n
                           −
                           4
                           +
                           k
                           <
                           3
                           n
                           −
                           6
                        , this implies that 
                           k
                           <
                           2
                           n
                           −
                           2
                        . With 
                           n
                         points and 
                           
                              |
                              R
                              |
                           
                           =
                           4
                         there are 
                           n
                           −
                           4
                         points that are not in 
                           R
                        . External edges are edges between these 
                           n
                           −
                           4
                         points and there are at most 
                           3
                           
                              (
                              n
                              −
                              4
                              )
                           
                           −
                           6
                         such edges. So, 
                           k
                         is bounded by 
                           3
                           n
                           −
                           18
                        . Finally, 
                           3
                           n
                           −
                           18
                           ≥
                           2
                           n
                           −
                           2
                         may occur from 
                           n
                           =
                           16
                         and in that case, CM4 may provide a bigger system than the Cartesian approach. If this occurs, CM3 will be preferred.

To avoid any ambiguity, in the following, 
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                         is the number of external edges for a 3 points reference and 
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                         for a 4 points reference.

Next, one can ask whether it is better to choose either a 3 points or a 4 points reference. Given a 3 points reference 
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                        , if a 4th vertex 
                           p
                         is added, does the number of unknowns could decrease? With 
                           
                              
                                 R
                              
                              
                                 4
                              
                           
                           =
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                           ∪
                           
                              {
                              p
                              }
                           
                        , it is obvious that 
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                           >
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                         and 
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                           −
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                         is the degree of 
                           p
                         in the graph. The number of equations is smaller if 
                           n
                           −
                           4
                           +
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                           <
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                        , that implies 
                           n
                           −
                           4
                           <
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                           −
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                        . So, if there exists a vertex the degree of which is greater or equal to 
                           n
                           −
                           4
                         then the number of equations can be reduced with 
                           R
                           ∪
                           p
                        .

According to the chosen reference, the system of equations could be different. The question is whether there is a better system than others. Actually the answer depends on the numeric solving method. Two were tested: the Newton–Raphson method  [2] and Homotopy  [13,14,3]. The first one has a complexity related to the size of the system. The solving time for homotopy mostly depends on the degree of the system and on the size of the system to a lesser extent. Recall that for a monomial 
                           
                              
                                 x
                              
                              
                                 0
                              
                              
                                 
                                 
                                    
                                       α
                                    
                                    
                                       0
                                    
                                 
                              
                           
                           ⋯
                           
                              
                                 x
                              
                              
                                 n
                              
                              
                                 
                                 
                                    
                                       α
                                    
                                    
                                       n
                                    
                                 
                              
                           
                        , its degree is 
                           
                              
                                 α
                              
                              
                                 0
                              
                           
                           +
                           ⋯
                           +
                           
                              
                                 α
                              
                              
                                 n
                              
                           
                        . The degree of a polynomial is the maximum of the degrees of its monomials. And for a system of polynomials of degrees 
                           
                              
                                 d
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 d
                              
                              
                                 1
                              
                           
                           ⋯
                           
                              
                                 d
                              
                              
                                 m
                              
                           
                        , its degree is 
                           
                              
                                 d
                              
                              
                                 0
                              
                           
                           ⋅
                           
                              
                                 d
                              
                              
                                 1
                              
                           
                           ⋯
                           
                              
                                 d
                              
                              
                                 m
                              
                           
                        .

With CM3 or CM4 the number of equations is 
                           O
                           
                              (
                              k
                              )
                           
                        . To get the smallest value for 
                           k
                        , vertices of a reference must cover a maximum set of edges. This is strongly related to the maximum coverage problem which is NP-hard. With 
                           n
                         standing for the number of entities in the GCS, since the number of reference to try is 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         for CM3 and 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              )
                           
                         for CM4, a brute force algorithm can be used in practice.

For larger problems, a classical greedy algorithm provides a satisfactory outcome and for most of our examples it gives the best result. The greedy algorithm consists in iteratively choosing one of the most connected vertices and removing it from the graph. For instance, with example of Fig. 1, greedy strategy with 3 points reference could give 
                           R
                           =
                           
                              {
                              p
                              4
                              ,
                              p
                              5
                              ,
                              p
                              6
                              }
                           
                         and a system of size 6.

Once a CM-system has been built, it has to be solved. CM-systems usually have several solutions, most of which are non-reals (about two-thirds of the solutions in our experiments). Indeed, many numerical values found are negative whereas they often represent squared distances. A numerical method like Newton–Raphson has a complexity mostly related to the size of the system. But this method only provides one solution. Since we have algebraic systems of equations, classical homotopy methods can be used in order to get all the solutions.

With homotopy, the criterion is the degree of the system (Bézout or BBK bound). Indeed, the total degree of the system determines the number of paths which have to be followed by homotopy. Here, we have considered Bézout bound which is the product of the degrees of the equations. Let us notice that equations coming from CM determinants with 5 or 6 objects have degree either 2 or 4. As mentioned, due to Sippl optimization, the size of the matrix is the same for 5 or 6 objects. If all unknowns are in the 
                           i
                        th row (and 
                           i
                        th column by symmetry) then the degree is 2. Otherwise, it is 4. Homotopy complexity is mostly related to the degree of the system but also linked to the number of equations since in each path the system must be evaluated many times. Finding out the best system is then an optimization problem. It amounts to getting a system with a minimum degree with the least equations.

So far, a brute-force algorithm is used. It tries all the possible references and provides two systems: the system that minimized the Bézout bound and the one with the smallest size. But it is possible to do better with a process of decomposition.

In Section  2.2, system number 3 on Table 1 contains 6 equations and there is no smaller system when using algorithm CM3. Considering a single Stewart platform we could have a system with only 2 equations by using CM determinants. So by considering separately the two platforms, the overall system could have only 4 equations. Actually, this could be achieved by decomposing the system of constraints. We first recall some basic principles of structural and geometrical decompositions.

Structural decomposition was first studied in order to perform a triangulation by blocks of systems of equations. Structural decomposition means here that only rearrangements of unknowns and of equations are used in a combinatorial way to decompose that systems. The first block contains as many unknowns than equations and can be solved first independently of the other equations. Once the equations of the first block are solved, the values of these unknowns become parameters in the other blocks. Thus, the system can be solved block by block.

A classical algorithm for computing a structural decomposition is based on the well-known Dulmage–Mendelsohn decomposition (DM for short)  [15]. It uses a bipartite graph in which the unknowns yield the first set of vertices and the equations yield the second one. Each arc expresses then the membership of an unknown to an equation and is oriented from the unknown to the equation. In the first step, a maximum matching is sought in order to associate each unknown to the equation that can solve it. In the next step, for each arc of the matching the method adds an arc oriented in the opposite direction. Vertices are then divided into three parts. All vertices that can be reached from unsaturated equations (that are not extremity of a matching edge) are in the over-constrained part. Vertices that can be reached from unsaturated unknowns are in the under-constrained part and remaining vertices are in the well-constrained part. This latter is a subgraph where 
                           v
                         unknowns are matched to 
                           v
                         equations. It has been shown that the decomposition does not depend on the choice of the maximum matching.

In turn, the well-constrained part can be more finely divided into strongly connected components. In the reduced graph of strongly connected components, vertices represent blocks and arcs impose the order in which the blocks are to be solved. On the one hand, in  [16], this method is used in the context of systems of equations for the geometry where it is used to guide the sequence of pseudo-divisions in the Ritt–Wu method. But, on the other hand, the Dulmage–Mendelsohn algorithm has also been adapted to constraint graphs  [17]. There, the input is no more a bipartite graph, but a constraint graph where the vertices are labeled by the degree of freedom (in short DoF), the primitives and the edges, which corresponds to constraints, are labeled by the DoF they remove.

Classical methods of geometric decomposition are based on the invariance up to rigid body motions and then involve two additional ingredients with the notions of references and borders.

Given a GCS issued from CAD, a plain DM decomposition of a GCS would place all vertices in the under-constrained part. It is therefore necessary to choose a reference for “pinning” some primitives in order to get as many equations as unknowns. For instance in a 2D problem, a reference may be obtained by fixing a point at the origin and the direction of an incident line. Choosing a reference, however, has a great influence on the decomposition. In the example in the 2D sketch in Fig. 2
                            with 12 points and 21 distances, the structural decomposition using DM is different according to the choice of a pair of points as a reference. For instance, by fixing: 
                              
                                 1.
                                 points 
                                       p
                                       10
                                     and 
                                       p
                                       11
                                    , we get the decomposition 
                                       
                                          {
                                          p
                                          10
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          11
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          1
                                          ,
                                          …
                                          ,
                                          p
                                          9
                                          ,
                                          p
                                          12
                                          }
                                       
                                    
                                 

points 
                                       p
                                       7
                                     and 
                                       p
                                       8
                                    , we get 
                                       
                                          {
                                          p
                                          7
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          8
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          1
                                          ,
                                          …
                                          ,
                                          p
                                          6
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          9
                                          ,
                                          …
                                          ,
                                          p
                                          12
                                          }
                                       
                                    
                                 

points 
                                       p
                                       1
                                     and 
                                       p
                                       2
                                    , we get 
                                       
                                          {
                                          p
                                          1
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          2
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          3
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          4
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          5
                                          ,
                                          …
                                          ,
                                          p
                                          8
                                          }
                                       
                                       ,
                                       
                                          {
                                          p
                                          9
                                          ,
                                          …
                                          ,
                                          p
                                          12
                                          }
                                       
                                    .

Choosing a reference is quite different when considering usual geometric solvers using coordinates or CM-based solvers. In the first case, the primitives are always chosen in order to fulfill some constraints imposed by the constraint graph. For instance, in the 2D case, the choice of two points is subject to the condition that they must be involved in a distance constraint. On the contrary, when solving a GCS by a CM method as the previous ones, we can choose any triple or quadruple of points without consideration of constraint. In the following we will use the term of CM-reference to make a clear distinction with the usual notion.

The notion of border is also an important notion when dealing with invariance. Indeed, the symmetry of an invariant system is broken by fixing a reference. The solutions found for a subsystem are not the general solutions and they cannot be used for continuing the resolution. On the other hand, one can add any invariant constraint built with the values of the solved subsystem and add them to complete the remaining constraint system.

For example, consider the classic 2D GCS given in Fig. 3
                           (a). After fixing the point 
                              p
                              1
                            and 
                              p
                              2
                           , the algorithm of  [17] finds blocks 
                              
                                 {
                                 p
                                 1
                                 ,
                                 p
                                 2
                                 ,
                                 p
                                 6
                                 }
                              
                            and 
                              
                                 {
                                 p
                                 3
                                 ,
                                 p
                                 4
                                 ,
                                 p
                                 5
                                 }
                              
                           . This amounts to solve separately on the one hand triangle 
                              p
                              6
                              p
                              1
                              p
                              2
                              p
                            and on the other hand all the other equations, that is to say, the figure composed of 5 points from 
                              p
                              2
                            to 
                              p
                              6
                           . But this system of 5 points is not rigid. However, if after the resolution of the triangle 
                              p
                              6
                              p
                              1
                              p
                              2
                           , the calculated distance 
                              p
                              2
                              p
                              6
                            is added as shown in Fig. 3(b) then the remaining system becomes well constrained up to rigid body motions. The GCS consisting of the points 
                              p
                              2
                            and 
                              p
                              6
                            with the distance 
                              p
                              2
                              p
                              6
                            is called the border. The new system can in turn be decomposed by choosing another reference. One can for example set the points 
                              p
                              3
                            and direction of segment 
                              p
                              3
                              p
                              4
                            and isolate triangle 
                              p
                              2
                              p
                              3
                              p
                              4
                           .

To summarize, values found for unknowns are used when using plain DM decomposition while in geometric decomposition, the transmitted information is looser and consists of relationships that are invariant up to rigid body motions (distances, angles, and so on).

Most work on GCS decomposition methods is based on a general pattern; see for example  [18] or  [19]. For the present, we use the formalism of graphs as a GCS can be seen as a graph. Strictly speaking, with constraints with arity greater than 2, a GCS is a hyper-graph but the following discussion can easily be generalized to hyper-graphs.

Let us recall some basic notions. With a graph 
                           G
                           =
                           
                              〈
                              V
                              ,
                              E
                              〉
                           
                        : 
                           
                              •
                              if 
                                    
                                       
                                          V
                                       
                                       
                                          1
                                       
                                    
                                    ⊂
                                    V
                                 , then 
                                    G
                                    
                                       [
                                       
                                          
                                             V
                                          
                                          
                                             1
                                          
                                       
                                       ]
                                    
                                  denotes the induced graph, it is a subgraph of 
                                    G
                                 
                              

an edge-induced graph is denoted by 
                                    G
                                    
                                       [
                                       
                                          
                                             E
                                          
                                          
                                             1
                                          
                                       
                                       ]
                                    
                                  where 
                                    
                                       
                                          E
                                       
                                       
                                          1
                                       
                                    
                                    ⊂
                                    E
                                 : each endpoint of an edge of 
                                    
                                       
                                          E
                                       
                                       
                                          1
                                       
                                    
                                  is a vertex of 
                                    G
                                    
                                       [
                                       
                                          
                                             E
                                          
                                          
                                             1
                                          
                                       
                                       ]
                                    
                                 
                              


                                 
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    G
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  is the subgraph 
                                    G
                                    
                                       [
                                       E
                                       −
                                       
                                          
                                             E
                                          
                                          
                                             1
                                          
                                       
                                       ]
                                    
                                 , so constraints of 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  are not in 
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                  can have common primitives


                                 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             V
                                          
                                          
                                             1
                                          
                                       
                                       ∪
                                       
                                          
                                             V
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          
                                             E
                                          
                                          
                                             1
                                          
                                       
                                       ∪
                                       
                                          
                                             E
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                 
                              


                                 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                    ∩
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                  is the subgraph 
                                    G
                                    
                                       [
                                       
                                          
                                             V
                                          
                                          
                                             1
                                          
                                       
                                       ∩
                                       
                                          
                                             V
                                          
                                          
                                             2
                                          
                                       
                                       ]
                                    
                                 
                              

a subgraph 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  of 
                                    G
                                  is faithful if 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  contains primitives only connected to primitives of 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                 , in others words, with 
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    G
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                 , the graph 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                    −
                                    
                                       (
                                       
                                          
                                             G
                                          
                                          
                                             2
                                          
                                       
                                       ∩
                                       
                                          
                                             G
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                  is not empty

and for a subgraph 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                    
                                       (
                                       
                                          
                                             V
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             E
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                  of 
                                    G
                                 , if 
                                    G
                                    2
                                    =
                                    G
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                 , the border 
                                    
                                       
                                          B
                                       
                                       
                                          
                                             
                                                G
                                             
                                             
                                                1
                                             
                                          
                                          /
                                          G
                                       
                                    
                                  is given 
                                    
                                       (
                                       
                                          
                                             V
                                          
                                          
                                             1
                                          
                                       
                                       ∩
                                       
                                          
                                             V
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          (
                                          
                                             
                                                E
                                             
                                             
                                                1
                                             
                                          
                                          ∩
                                          
                                             
                                                E
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       ∪
                                       
                                          
                                             E
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                  where 
                                    
                                       
                                          E
                                       
                                       
                                          b
                                       
                                    
                                  is a set of constraints such that 
                                    
                                       
                                          B
                                       
                                       
                                          
                                             
                                                G
                                             
                                             
                                                1
                                             
                                          
                                          /
                                          G
                                       
                                    
                                  is not under-constrained.

With this terminology, a geometrical decomposition of graph 
                           G
                         is a sequence 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 G
                              
                              
                                 n
                              
                           
                         where: 
                           
                              •
                              
                                 
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                  is a well-constrained subgraph


                                 
                                    
                                       
                                          G
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          G
                                       
                                       
                                          n
                                       
                                    
                                  is the decomposition sequence of graph 
                                    G
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          B
                                       
                                       
                                          
                                             
                                                G
                                             
                                             
                                                1
                                             
                                          
                                          /
                                          G
                                       
                                    
                                 .

The result of a decomposition process is not necessarily unique. A decomposition is said maximal if 
                           n
                         is maximal.

The more commonly used method for proceeding a bottom-up geometrical decomposition is as follows:


                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm: GDecomposition
                                       
                                    
                                    
                                       
                                          Input: A GCS 
                                             G
                                           as a constraint graph
                                    
                                    
                                       
                                          Output: a list of constraint graphs
                                    
                                    
                                       1—in 
                                             G
                                          , choose a reference 
                                             r
                                           not yet chosen
                                    
                                    
                                       2—get a faithful graph 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                             ⊂
                                             G
                                             +
                                             r
                                           (
                                             r
                                           is in 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                          )
                                    
                                    
                                       
                                          if 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             G
                                             +
                                             r
                                           then
                                    
                                    
                                       
                                          if no more unchosen reference in 
                                             G
                                           then
                                    
                                    
                                       
                                          return 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                           else goto 1
                                    
                                    
                                       3—compute the border 
                                             
                                                
                                                   B
                                                
                                                
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   /
                                                   G
                                                
                                             
                                          
                                       
                                    
                                    
                                       4—return GDecomposition(
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                          ) @ GDecomposition
                                    
                                    
                                       
                                          (
                                             G
                                             −
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                             +
                                             
                                                
                                                   B
                                                
                                                
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   /
                                                   G
                                                
                                             
                                          )
                                    
                                 
                              
                           
                        
                     

where @ is the operator of concatenation of lists. This algorithm is rather a general method since the different tasks can be implemented in different ways.

In step 1, the choice of reference is often made by searching a pattern: a plan 
                           p
                           l
                         with a point of 
                           p
                           l
                         and a line of 
                           p
                           l
                         incident to the point, three points with three distances, etc. For step 2, once a reference 
                           r
                         is set, a structural decomposition can produce 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        , note that 
                           r
                         is in 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        . Indeed, any other subsystem is under-constrained. To find 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        , other techniques are possible such as the use of geometric properties that reveal a subgraph 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         and solve it at the same time.

The goal of step 3 is to produce a not under-constrained subgraph. Several approaches exist. In the classical ones, the border can be completed to be well-constrained. It is easy most of the time since the border is often limited to two points and three points in 2D in 3D. When the border contains more elements it is necessary to use techniques such as those presented in  [20,21] for 2D problems or to invoke witness methods like in  [22]. In addition, completion may take the solving method into consideration like in  [20]. For instance, if subgraphs are solved by the locus intersection method, they must be completed in order to make this method successful. On the other hand, it is also possible to consider coherently over-constrained borders by saturating the corresponding constraint graph. With 
                           n
                         primitives on the border, this leads to add 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         constraints. This obviously implies that the corresponding solving method can manage over-constrained GCS.

In step 4, the call to GDecomposition(
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        ) leads to consider all possible references. To avoid this, the recursive call is not always performed, especially if 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         has few primitives. It is then not guaranteed to find the minimal decomposition.

Once a decomposition is found, the successive constraint systems are solved in the order they appear in the list. The terminal solving methods can be either numerical or based on geometrical construction, or with ad hoc pre-determined systems. The solutions of the different systems are then assembled two by two with respect to their border. Since the constraint systems are well-constrained, the primitives of the border are sufficient to calculate a displacement that will join the two systems.

For CM-systems, a bottom-up decomposition goes back over the GDecomposition method but with some distinctive features. Consider the steps of the above method.

First, at step 1, a reference must be chosen. Recall that in GCS terminology, the notion of reference is slightly different from the one used in the CM-system. For a GCS 
                           S
                        , a reference is any sub-GCS 
                           R
                         such that the group of rigid body motions acts regularly on its solution set.

For instance, in 3D, a configuration with three points constrained by three distances is a reference. But, the configuration corresponding to a tetrahedron constrained by six pairwise distances is not a reference since there could be two solutions up to rigid body motions.

On the contrary, when considering CM-systems, a reference is made up by three objects without consideration on the constraints between them. The three distances or angles between that objects could even be three unknowns in the CM-system: the relative locations of the objects will be known once the whole system will be solved.

Once a reference 
                           r
                         is arbitrarily chosen, a system of equations is formed. Unlike the approach that works directly on the GCS (Cartesian approach, for example), a choice of reference leads to a specific system of equations as explained in Section  3. So a change of reference changes the system of equations.

Step 3 has to be discussed before step 2. The completion of the border consists of adding pairwise relations of primitives of the border. With CM-methods this can be done by saturation that is to say by adding all possible distances. The border is then over-constrained beyond five primitives, indeed, with 3 or 4 points, for example, saturation distances lead to a triangle or tetrahedron in which all distances are known. Thus, the search for a subsystem in step 2 must take this into account and should be able to manage a possibly over-constrained system.

In step 2, the algorithm of structural Dulmage–Mendelsohn decomposition is used to produce a faithful subgraph 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        . Because of the border, the system is potentially over-constrained. The DM-decomposition then produces an over-constrained part. Therein, the matching associates each unknown to one equation and some equations are not matched. Since these equations are redundant, they can be removed.

After the removal of unmatched equations, we get a structurally well-constrained system. Continuing the DM-decomposition yields the DAG (directed graph without cycle) 
                           D
                           G
                         of strongly connected components. Subgraph 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         is built from the constraints contained in the components 
                           C
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           ,
                           C
                           
                              
                                 c
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           C
                           
                              
                                 c
                              
                              
                                 k
                              
                           
                         such as: 
                           
                              •
                              
                                 
                                    C
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    C
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    C
                                    
                                       
                                          c
                                       
                                       
                                          k
                                       
                                    
                                  is the beginning of a topological sort of vertices of 
                                    D
                                    G
                                 
                              


                                 
                                    G
                                    1
                                  is faithful


                                 
                                    G
                                    1
                                  is minimal in terms of primitives.

So, our decomposition method for CM-systems follows this algorithm:


                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm: decomposition for CM-systems
                                       
                                    
                                    
                                       
                                          Input: a constraint graph 
                                             G
                                          
                                       
                                    
                                    
                                       
                                          Output: a list of irreducible constraint subgraphs of 
                                             G
                                          
                                       
                                    
                                    
                                       1—choose a 3 point reference 
                                             r
                                           not chosen for 
                                             G
                                          , if no more
                                    
                                    
                                       
                                          reference then return 
                                             G
                                          
                                       
                                    
                                    
                                       
                                          get equational system 
                                             E
                                             q
                                             =
                                             C
                                             M
                                             3
                                             
                                                (
                                                G
                                                ,
                                                r
                                                )
                                             
                                          
                                       
                                    
                                    
                                       2—perform a Dulmage–Mendelsohn decomposition with
                                    
                                    
                                       
                                          equations removal:
                                    
                                    
                                       
                                          get bipartite graph from 
                                             E
                                             q
                                          
                                       
                                    
                                    
                                       
                                          compute a maximum matching
                                    
                                    
                                       
                                          remove unsaturated equations
                                    
                                    
                                       
                                          get DAG 
                                             D
                                             G
                                           of strongly connected components
                                    
                                    
                                       
                                          
                                          
                                             G
                                             1
                                             =
                                             getFaithfulGraph
                                          (DG, G)
                                    
                                    
                                       
                                          if 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             G
                                           then goto 1
                                    
                                    
                                       3—
                                             
                                                
                                                   G
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             G
                                             −
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   G
                                                   /
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             =
                                             
                                                completion
                                             
                                             
                                                (
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ∩
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      2
                                                   
                                                
                                                )
                                             
                                          , make 
                                             
                                                
                                                   B
                                                
                                                
                                                   G
                                                   /
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                           a clique
                                    
                                    
                                       
                                          add note that new edges are distances whose values will come
                                    
                                    
                                       
                                          from 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                           once solved
                                    
                                    
                                       4—decompose(
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                          ) @ decompose(
                                             G
                                             2
                                             +
                                             
                                                
                                                   B
                                                
                                                
                                                   G
                                                   /
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          )
                                    
                                 
                              
                           
                        
                     


                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm: getFaithfulGraph
                                       
                                    
                                    
                                       
                                          Input: a DAG 
                                             D
                                             G
                                           of strongly connected components of equations
                                    
                                    
                                       
                                          a constraint graph 
                                             G
                                          
                                       
                                    
                                    
                                       
                                          Output: a subgraph of 
                                             G
                                          
                                       
                                    
                                    
                                       1—Get a sequence 
                                             S
                                             =
                                             C
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             C
                                             
                                                
                                                   c
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             …
                                             ,
                                             C
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                             
                                           that corresponds to the
                                    
                                    
                                       
                                          beginning of a topological sort of vertices of 
                                             D
                                             G
                                           and let 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                           be
                                    
                                    
                                       
                                          the corresponding constraint subgraph of 
                                             G
                                             
                                             k
                                           is chosen such that
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                           is faithful.
                                    
                                    
                                       2—By depth-search in 
                                             D
                                             G
                                          , consider other beginnings of topological
                                    
                                    
                                       
                                          sort in order to make 
                                             
                                                
                                                   G
                                                
                                                
                                                   1
                                                
                                             
                                           minimal in terms of primitives.
                                    
                                 
                              
                           
                        
                     

The decomposition yields a list of subgraphs that must be solved and then merged. Algorithms CM3 and CM4 of Section  3 can be used in turn with all possible references in order to get the best equational system in terms of the number of equations.

A decomposition could be performed either on a CM-system or on a GCS after its translation into a system of equations and after adding coordinates for a reference. A natural question arises about the difference between the decomposition of a GCS 
                           G
                         or a CM-system derived from 
                           G
                        .

The geometric decomposition methods always organize constraints in order to make appear monolithic rigid subsystems. The main feature of these approaches lies in the consideration of the invariance up to rigid body motions that enables: 
                           
                              •
                              to add constraints for references

to add constraint on the border of subsystems

to remove constraint of reference for merging subsystems.

Moreover, the fact that one primitive at least does not belong to the border of subsystems guarantees the termination of the decomposition process.

For a given reference, it is known that the maximal decomposition is given by the algorithm of Dulmage–Mendelsohn. Trying all possible references ensures to yield a maximal decomposition. Thus, the geometric decomposition algorithms proposed in works like  [19,18] give the same results up to the choice of references. That is to say they give the same decomposition to the same problems. The difference lies in how references are chosen and how borders are built.

In Section  3, we saw that for a GCS 
                           G
                         translated into a CM-system 
                           C
                         by algorithms CM3 or CM4, all constraints of 
                           G
                         are taken into account in 
                           C
                         and all solutions of 
                           G
                         are solutions of 
                           C
                        . The same reasoning can be made for a subsystem 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         of 
                           G
                        . If, for 
                           G
                        , a CM-reference is chosen in 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         then the CM-system will have a CM-subsystem that corresponds to 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                        . Since, at worst, all references are considered, 
                           
                              
                                 G
                              
                              
                                 1
                              
                           
                         will be found. With CM-systems, elementary components (
                           C
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                         in the algorithm above) are not the same as the traditional approach (with Cartesian equations or constraints) but subgraphs returned by the procedure getFaithfulGraph are the same.

The difference mainly is in the ingredients of this decomposition which are references and borders. CM-references of 3 points are used for the decomposition. The production of these 3 points is basic and does not require a study as in most other methods. Once the decomposition is obtained, CM-references of 4 points can be considered on each sub-system to try to reduce the number of equations or the degree of the system.

Regarding the border, this method has the advantage of not needing a well-constrained completion. The border may be over-constrained and is therefore very easy to make by saturating the system. In the research phase of the strongly connected components, supernumerary constraints are removed, but they must then be taken into account in the optimization of each subsystem. Indeed, for a given reference, the constraints in the border are primarily eliminated if they are of external edges.

Finally, the interest of a CM-decomposition lies in a simpler production of references, a simpler completion of border and smaller systems of equations on which the decomposition is calculated.

The decomposition algorithm implements a divide and conquer strategy. Its average complexity is not easy to compute since the step where the division occurs cannot be predicted. However we can make a rough analysis regardless of the division step to give an order of the worst case. The objective is to show that the algorithm can be reasonably used in practice.

In our decomposition algorithm, for each reference the following steps are applied in sequence: DM algorithm, a topological sorting and border calculation. Note that in a constraint graph with 
                           n
                         vertices the number of edges is 
                           3
                           n
                           −
                           6
                         which is in 
                           O
                           
                              (
                              n
                              )
                           
                        . During the decomposition process, the number of references that are considered is 
                           n
                         choose 3 which is in 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                        . For 
                           e
                         equations, the complexity of DM is in 
                           O
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    2.5
                                 
                              
                              )
                           
                         (see  [23]). Since 
                           e
                         is in 
                           O
                           
                              (
                              n
                              )
                           
                        , DM decomposition complexity is in 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2.5
                                 
                              
                              )
                           
                        . The topological sort which applied to the graph of strongly connected components is linear in the number of edges of the DAG. The process of saturating a border can be done in 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         as it is to produce the constraints for each pair of vertices. Thus, for each reference we have in the worst case a 
                           
                              
                                 O
                              
                              
                                 2.5
                              
                           
                         complexity. Then taking account of all the references, the complexity of our decomposition algorithm is at worst in 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                    +
                                    2.5
                                 
                              
                              )
                           
                        .

Subsystems about 3 entities are too small to be faithful. Subsystems of 4 entities are tetrahedron and can be filtered out as earlier explained. So minimal subsystems have 5 entities. To have a light presentation of the decomposition algorithm we did not specify the subsystems with five entities are returned as is. Thus, all references are not considered in the decomposition algorithm. Nevertheless for each subsystem, algorithm CM3 or CM4 can be performed to try to reduce the size of the system to be solved. Thus, ultimately, all references are potentially tested.

CM-systems contain polynomial equations. To solve them, existing methods are often expensive. This is the case of Gröbner basis or methods based on Bernstein polynomials  [24]. Homotopy methods, also called continuation method, can be very expensive but the cost is a priori known because it strongly depends on the degree of the system. They also have the advantage of being implemented in several software robust and efficient as PHCpack, Bertini or Hom4PS  [25].

Basically, a homotopy function is defined by 
                        H
                        
                           (
                           X
                           ,
                           t
                           )
                        
                        =
                        
                           (
                           1
                           −
                           t
                           )
                        
                        ⋅
                        F
                        
                           (
                           X
                           )
                        
                        +
                        t
                        ⋅
                        G
                        
                           (
                           X
                           )
                        
                      with 
                        t
                      in range 
                        
                           [
                           0
                           ,
                           1
                           ]
                        
                     . Function 
                        G
                        
                           (
                           X
                           )
                        
                      is the function whose solutions are sought. Function 
                        F
                        
                           (
                           X
                           )
                        
                      is a function whose solutions are known and which has as many solutions as function 
                        G
                     .

Softwares that implement homotopy input a polynomial system, they calculate the degree 
                        d
                      of the system and generate a system 
                        F
                        
                           (
                           X
                           )
                        
                      with 
                        d
                      known solutions. By varying 
                        t
                     , each solution of 
                        F
                        
                           (
                           X
                           )
                        
                      heads toward a solution of 
                        G
                        
                           (
                           X
                           )
                        
                     . From values and 
                        
                           
                              x
                           
                           
                              i
                           
                        
                        ,
                        
                           
                              t
                           
                           
                              i
                           
                        
                      the new value 
                        
                           
                              x
                           
                           
                              i
                              +
                              1
                           
                        
                        ,
                        
                           
                              t
                           
                           
                              i
                              +
                              1
                           
                        
                      is calculated by prediction–correction  [26]. However, 
                        d
                      is an estimate of the number of solutions and some of them lead to solutions at infinity. This is for example the case of a system of degree one involving the intersection of two parallel lines. When following a solution path to infinity, 
                        t
                      grows slowly and never reaches 1. In most software, a solution is considered to be the solution at infinity when 
                        t
                      grows slowly and tends to 1 but this stopping numerical criterion does not guarantee that 
                        t
                      will never reach 1. Such solutions are penalizing on the one hand because they slow down the search for solutions and on the other hand because some other solutions can be wrongly considered solutions at infinity.

Homotopy software is not always very stable. Indeed, the function 
                        F
                        
                           (
                           X
                           )
                        
                      is constructed randomly and some solutions can be misinterpreted as solutions at infinity. For our experiments we used Hom4PS. This software is fast and robust in the sense that solutions are always the same from one running to another.


                     Fig. 4
                     (a) and (b) present two examples taken from  [27]. It is a matter of distance models of two molecules that are disulfide for Fig. 4(a) and bicyclohexane for Fig. 4(b). They involve 3D points and distance constraints.

Decomposition algorithm establishes that the disulfide model is irreducible. Next, brute-force algorithms, i.e. calling CM4 or CM3 with all possible references, provide results that are summarized in Table 2
                     . With a 4 points reference, one of the best CM-system in terms of number of equations has 6 equations and its degree is 212. Hom4PS was executed first in the classical mode and then in the polyhedral mode. In the classical mode, the number of solutions of 
                        F
                        
                           (
                           X
                           )
                        
                      to track is the Bézout bond (BB) which is the degree of the polynomial system. In the polyhedral mode, a better estimation of the number of possible solutions is performed. It is based on the mixed volume polytope computation  [28] and then leads to follow a smaller number of paths to track. In  [27] distances are proposed and 18 solutions are found in about 13 min with a divide-and-conquer solver based on Bernstein representation. With the proposed CM-system, Hom4PS finds the solutions in 5.3 s. By selecting the degree criteria, the brute-force algorithm yields another reference with more equations but with lower degree. So the number of paths to track is reduced and the numerical solving is faster. With a 3 points reference, one of the best system both in terms of size and degree has 5 equations and a Bézout bound of 29. Although the BKK bound is higher than in the previous experiment, a lower number of equations makes the computational time shorter.


                     Table 3
                      presents some examples processed with and without decomposition. The third line is related to example of Fig. 4(b). Without decomposition the smallest system has 8 equations and is solved in more than 4 s. Decomposition yields three subsystems: 
                        
                           {
                           p
                           1
                           ,
                           p
                           2
                           ,
                           p
                           3
                           ,
                           p
                           4
                           ,
                           p
                           5
                           ,
                           p
                           6
                           }
                        
                        ,
                        
                           {
                           p
                           1
                           ,
                           p
                           2
                           ,
                           p
                           7
                           ,
                           p
                           8
                           ,
                           p
                           9
                           ,
                           p
                           10
                           }
                        
                      and 
                        
                           {
                           p
                           1
                           ,
                           p
                           2
                           ,
                           p
                           6
                           ,
                           p
                           10
                           }
                        
                     . The first two subsystems have two equations. Indeed, with 
                        
                           {
                           p
                           1
                           ,
                           p
                           2
                           ,
                           p
                           4
                           }
                        
                      as CM-reference, there are two external edges 
                        p
                        5
                        p
                        6
                      and 
                        p
                        3
                        p
                        5
                     . Each external edge leads to an equation and the whole system has two unknowns: distances 
                        p
                        1
                        p
                        4
                      and 
                        p
                        2
                        p
                        5
                     . The third subsystem is a tetrahedron where all the distances are known so no numerical solving is needed. In this subsystem, all data are known to perform a immediate computation of coordinates. In Table 3, repartition of equations is denoted by 2/2/0 meaning that the constraint problem is cut in three subsystems, two with two equations and one with no equation. Finally all coordinates are computed according to the decomposition order. Since pairs of subfigures share three points with consistent distances, they can be assembled.

The example named pyramids refers to Fig. 4(c). It consists of two pyramids sharing edge 
                        p
                        3
                        p
                        4
                      and constrained by an angle between planes 
                        p
                        l
                        2
                      and 
                        p
                        l
                        3
                     . Points 
                        p
                        5
                        ,
                        p
                        1
                        ,
                        p
                        2
                      lie on 
                        p
                        l
                        2
                      and 
                        p
                        8
                        ,
                        p
                        7
                        ,
                        p
                        6
                      lie on plane 
                        p
                        l
                        3
                     . The two pyramids with coplanar bases are independently solved in subsystems with two equations. Each subsystem has five points, one plane, eight constraints of distance and four constraints of incidence. For pyramid with base in plane 
                        p
                        l
                        1
                      for example, a CM-reference could be 
                        p
                        1
                        ,
                        p
                        2
                        ,
                        p
                        3
                     . So there are two external edges: distance 
                        p
                        5
                        p
                        4
                      and coplanarity 
                        p
                        4
                        p
                        l
                        1
                      leading to two equations. Another subsystem has plane 
                        p
                        l
                        2
                      and points 
                        p
                        1
                        ,
                        p
                        2
                        ,
                        p
                        5
                     . This system has no equation. It is the same with plane 
                        p
                        l
                        3
                      and points 
                        p
                        8
                        ,
                        p
                        6
                        ,
                        p
                        7
                     . The remaining GCS is shown in Fig. 4d where distances between points 
                        p
                        3
                        ,
                        p
                        4
                      and planes 
                        p
                        l
                        2
                        ,
                        p
                        l
                        3
                      are added border constraints. Again, in CM formalism, this system has no unknowns.

The last example comes from a random arrangement of 10, 100 and 200 Stewart platforms. Decomposition process isolates each platform that are separately solved.

@&#CONCLUSION@&#

In this paper, we present a method that aims to take the best of two classical approaches in geometric constraint solving: 
                        
                           •
                           our approach directly deals with invariance under rigid body motions by using coordinate-free geometry. We provide ways for automatically build equation systems involving known and unknown distances or angles. These equation systems are always smaller than the ones obtained by a classical Cartesian approach.

a step of decomposition of the equation systems is done using techniques coming from classical studies in geometric constraint systems decompositions. Such a decomposition allows a better reduction of the number of equations.

Our method constitutes a first step in a hybrid approach mixing distance geometry and classical decomposition methods. It can be improved on several points. First, we use the brute force algorithm to find the better reference giving the smallest CM-system.

We studied some heuristics but we do not have results yet about their effectiveness.

Second, our method for decomposing equation systems is based on the Dulmage–Mendelsohn decomposition method which is powerful and very general. Applied on equation systems coming from CM-systems, one could think that invariance by rigid body motions is fully taken into account. This is not the case and some tricks coming from previous studies of geometric constraint system decomposition have been used here. A better method well suited to CM-systems could avoid these tricks and have better performances.

Finally, one of our goals in this paper is to compute all the solutions for a geometric constraint system. The idea here was to use classical homotopy through free software like Bertini or Hom4PS, but there are other numerical methods based on path tracking and able to yield several solutions, unfortunately, for now, with no guarantee that all the real solutions are found. A promising work could aim at adapting these methods in this particular framework making feasible the computation of all the solutions.

@&#ACKNOWLEDGMENTS@&#

The authors wish to thank all the anonymous referees for their valuable suggestions and comments.

@&#REFERENCES@&#

