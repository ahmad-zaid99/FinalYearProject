@&#MAIN-TITLE@&#Data driven webpage color design

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The first attempt to automate webpage coloring through a data driven approach.


                        
                        
                           
                           We addressed the three fundamental design objectives of webpage coloring.


                        
                        
                           
                           We introduced novel probabilistic models capturing color contrasts and semantics.


                        
                        
                           
                           The models coordinated with the lexicographic strategy prove effective in demos.


                        
                        
                           
                           User tests verify the system-generated designs are more preferable.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Data driven

Color design

Lexicographic optimization

Color semantics

@&#ABSTRACT@&#


                  This paper presents a design framework for automatic webpage coloring regarding several fundamental design objectives: proper visual contrasts, multi-color compatibility and semantic associations. The objective functions are formulated with data-driven probabilistic models: the Color Contrast model concerning visual saliencies is trained on 52,000 basic components parsed from 500 popular webpages. Color Compatibility and Semantics are modeled from a dataset of manually tagged and rated color schemes from Adobe Kuler. To incorporate the multi-objectives in optimization, the framework adopts a lexicographic strategy, which determines the best choices by optimizing the objectives one by one in a user specified sequence. We demonstrate the effectiveness of the models and the flexibility of the framework in two typical web color design scenarios: fine tuning a colored page and recoloring a page with a specified palette. Independent perception experiments verify that the system-generated designs are preferable to those generated by nonprofessionals.
               

@&#INTRODUCTION@&#

Color is a primitive modularity of a vision system, triggering instant aesthetic sensation  [1]. The first impression of a webpage on an audience only requires an initial 50 ms of glimpse  [2]. While many people can easily distinguish good and bad color designs, creating a pleasing color design requires much more time and effort  [3]. Webpage color design usually requires considerable experimentation and guesswork. It is highly difficult to systematically investigate the world of all color constellations. Even permutations of several colors on a webpage are usually astronomical. (Human beings can distinguish approximately 128 different hues, 130 different tints, and 23 shades, reaching a total of approximately 82,720 different colors  [4].)

Is it possible that computers complete the coloring process by automatically evaluating and screening this huge amount of design alternatives? The main challenges in automatic color design are: how to determine a coloring that is aesthetically pleasing yet also contributes to the functionality of the design, and how to use color to convey specific moods to the audience.

In this paper, we begin with computational encoding of the properties that make a webpage coloring agreeable. A data driven framework can determine an optimum coloring effect for the webpage with minimal user interactions and specifications.

A webpage coloring must consider at least three fundamental design objectives  [5]: functionality (usability) for visual communication, i.e., legibility and proper visual saliency allocation; multi-color compatibility, i.e., harmony; and sematic associations with the specific moods.

Three objective functions are subsequently formulated with probabilistic models on datasets of design examples:


                     Color contrast. Color contrast not only makes a form distinguishable, but research suggests that proper distribution of color contrasts yields a hierarchy of visual saliencies  [6], allocating our resources of attention and reducing our cognitive loads. Color contrast is also regarded as a foundation of harmony  [7]. To determine proper edge contrasts of color patches on a webpage, a probabilistic model is trained on 52,000 visual components parsed from 500 webpages with their edge contrast properties and selected predictive features.


                     Color harmony. Harmony is the most addressed objective of color design. The framework employs a Color Compatibility model, developed by O’Donovan et al.  [8]. The model is a regression of user preferences on a large dataset of color schemes from Adobe Kuler and Amazon Mturk samples. A color scheme is an ordered row of five colors.


                     Color semantics. Note that contrast and harmony are general qualities that cannot capture the specific color themes. To express specific color moods, we introduce a probabilistic model, driven by the dataset of tagged color schemes from Adobe Kuler, to fine-tune a webpage according to specified keywords.

Finally, to incorporate the multi-objective functions in the coloring process, the framework adopts a lexicographic strategy  [9], which applies the objective functions sequentially, not simultaneously.

The main contribution of this paper is an attempt to automate webpage coloring through a data driven optimization. Fundamental objectives of webpage color design are addressed and formulated with probabilistic models, to capture desirable properties of webpage coloring underlying collected design data. We demonstrate that cooperation of the objectives could lead to acceptable converged states of results. Independent perception experiments verify that the system-generated designs are preferable to designs generated by nonprofessionals.

@&#BACKGROUND@&#

Color design supporting tools are closely related to studies of color perception and aesthetic computing.

There are generally two approaches to color design automation: rule-based and data-driven. A number of quantitative models in color harmony theory have been put forward in the past two centuries to help designers create pleasant color combinations  [7,10–12].

Itten’s color contrasts  [7] and Matsuda’s harmonious templates  [13] are the most widely cited models. Color harmony is quantified by certain geometric structures in the color space. The models have been widely applied to graphic design and image processing systems  [14–19]. The rule-based models, however, seem rigorous but oversimplified. Ou et al. studied people’s preferences for monochrome and color pairs, indicating that colors selected according to these rules do not necessarily lead to harmony  [20].

To complete webpage coloring, this paper uses data-driven approaches, which predict the performances of new color designs in real contexts of layouts based on existing sample data. O’Donovan et al.  [8] used a regression model to predict the compatibility of a color scheme based on online color scheme datasets. The model has been integrated into a clothing optimization system  [21] and a generative pattern coloring system  [3]. The data-driven approaches are expected to be more robust to predict colorings in real contexts of uses than the classical deterministic rules. Moreover, early rule-based systems focus on color harmonization, which is just one of the aspects of color design. It is suggested that having only color compatibility cannot ensure a successful coloring result in design  [3]. We believe that the data-driven approach is not only suitable for color compatibility but also useful for optimizing color contrasts and semantics. It is expected that with well defined objectives and proper constraints, the optimization may lead to a stably converged coloring result.

Some studies focus more on evaluating colors within their contexts of use. Zhang et al. developed a color harmony measure model with shape information  [22]. Wang et al. applied color scheme to enhance images while complying with common sense of the natural world colors by taking color-texture joint probability as a constraint  [23]. Lin implemented a generative auto-coloring system for 2D patterns  [3]. They collected learning cases of 8000 designs of color patterns to establish a mapping between the color properties and spatial features of shapes.

Webpage coloring has functionality for visual communication, which is slightly different from decorative patterns. Coloring a webpage must ensure accessibility. W3C’s WCAG2.0 gives some recommended Legibility standards of minimum luminance contrast ratios against backgrounds for both small and large fonts, regarding peoples with low vision or color vision deficiency  [24]. Our system uses those guidelines as the hard constraints in coloring processes.

Poor color contrast choices can induce eyestrains and headaches (see Fig. 1
                        ). Saliencies typically arise from contrasts between components and their surroundings  [25]. The proper distribution of saliencies allocates viewer limited resources of attention, which is an essential measure of the quality of the visualization  [26]. Color blocks on the webpage with different usages often need different visual saliencies. A vivid color patch (high saturation against the background, sometimes called the accent color) produces a pop-out effect, enabling humans to detect targets such as navigation bars or link buttons very rapidly, even without any consciousness. A psychological phenomenon of simultaneous contrast demonstrates that color contrast may bias our perceptions of color  [27].

To predict web components’ edge contrasts, our data-driven model captures the joint probabilities between the web components’ edge contrasts and other traits embodying their functionalities. Kumar’s study in building a webpage design repository shows that webpage modules and elements have obvious categories of forms and functions  [28].

Color semantics, sometimes known as the meaning of colors  [5], attract interest from researchers across many disciplines, including psychology, design and computing. The variations of color, as an emotion messenger, can be associated with different moods, such as cheerful or quiet, hard or soft, warm or cool, bitter or delicious. Lin et al. used the term semantically resonant to refer to color choices that are evocative of a given concept  [29].

Semantic Differential of Kansei Engineering is a well-established method for designers to capture semantic feelings of visual forms  [30]. Through a user perception study, then multivariate factor analysis, Ou et al. suggested three semantic dimensions: activity, weight and heat, with corresponding empirical functions to evaluate any input unary and dual colors in a CIElab space  [31,32].

Color constellations can evoke more rich and complex imagery. Semantics for multi-color combinations (color schemes) are generally category based. Kobayashi’s Color Image Scale  [33] provides 1170 three-color combinations grouped into 15 subsets and labeled with 180 adjectives on two semantic scales. Pantone Color Scheme  [34] defined 27 adjective clusters. Each cluster contains 24 three-color combinations. Moreover, Adobe Kuler and Colourlover communities have accumulated a large number of color schemes with semantic tags for retrieval. Compared with the Kansei method, the category-based method is more simple to use in design practices.

Category-based tools so far only support keyword-based color scheme retrieval. It is possible and more useful to generalize and predict beyond the example data. Our data driven approach provides a probabilistic regression model to interpolate the subtle mood changes in color schemes based on some discriminative features of semantic categories.

The framework is illustrated in Fig. 2
                     . The framework mainly consists of a color block/text parser, a generative design engine, three objective models, and two datasets. The three data driven objective models are prepared offline, to statistically capture the properties of desired colorings with the collected datasets. Details of the two datasets are given in Section  4.

In runtime, the pipeline takes a webpage’s fixed layout and a few keywords describing certain moods as inputs, and outputs sorted optimum colorings of the webpage.

An input page layout specifies which segments on the page can be colored in and which segments are assigned with the same color. For instance, the background of the sidebars may have the same color as the body texts, and all hyperlink texts must be the same color.

The color block/text parser processes the input webpage into a set of elementary color patches and text boxes, which is then encoded in the generative design engine for generating alternative page colorings. Moreover, it extracts all the components’ spatial features and properties of the Document Object Model (DOM), which are necessary predictive information for some context relevant evaluations later on. Details of the Parser are given in Section  4.1. The procedure of the page parsing and feature extraction must keep same as in preparing the edge contrast training set for the contrast model.

The generative design engine provides the infrastructure for regenerating and screening new designs by calling the three objective models.

Coloring a webpage can be modeled as a spatial permutation problem. Design solutions are encoded as a string of RGB values. Changing the sequence and values generates a new alternative coloring of the webpage. A webpage may have hundreds of blocks and text boxes. Most segments are colored in groups. We refer to a set of segments that map to the same color as a color group, and a webpage normally uses less than ten colors. Suppose a webpage has 
                           k
                         segments assigned with 
                           n
                           
                           
                              (
                              n
                              ≤
                              k
                              )
                           
                         colors picked from a set of 
                           m
                         colors 
                           
                              (
                              m
                              ∈
                              
                                 [
                                 n
                                 …
                                 256
                                 
                                 
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                 3
                                 ]
                              
                              )
                           
                        . There are a total of 
                           
                              
                                 C
                              
                              
                                 m
                              
                              
                                 n
                              
                           
                           
                              
                                 P
                              
                              
                                 n
                              
                              
                                 k
                              
                           
                         solutions (
                           C
                         means combination and 
                           P
                         means permutation). If we pick colors from the full color set of RGB, even if the page has only a few color groups and the regions of color groups are fixed, the solution set is still enormous.

To reduce the complexity, the coloring process in the generative design engine has two phases: palette (theme) generation and page coloring. The framework supports automatic color palette (theme) retrieval or selection from the Kular dataset in terms of user input keywords. A palette is a considerably smaller color set generated in advance to page coloring. It is an intermediate form that enables pre-evaluation of color harmony and color semantics without taking into account the spatial context of the page. This is a common practice in real color design. The palette can also be generated by color quantization of a mood board  [35,36] or inquiring online databases, such as Adobe Kuler. A number of tools have been developed to manually or automatically generate harmonious color themes  [10–13]. Since the palette generation is a well addressed topic, we focus our later discussion and demonstrations more on how the system evaluates and optimizes the coloring effects in the spatial contexts of webpages, which is believed the bottleneck of the pipeline.

To evaluate the new designs, the framework uses three data driven models: the contrast, harmony and semantic models.

The edge contrasts of the components parsed from the input webpage must be evaluated in their spatial contexts. The contrast model predicts each components edge contrast with its spatial features and DOM properties. The details of the model are given in Section  5.1. The model is trained offline on the contrast training set, which has 52000 elementary color patches (visible DOM nodes and their render-time color properties) parsed from the 500 positive webpage examples in the web design repository collected with a design crawler.

Color harmony is evaluated using the data-driven model introduced by O’Donovan et al.  [8]. To evaluate a palette more than five colors, we extract representative five colors from the palette using 
                              k
                           -means (
                              k
                              =
                              5
                           ) in CIElab space. The colors selected are the closest ones to the cluster centers. Their spatial arrangement retains their original sequential order on the palette. In general, low-scoring schemes are rated lower than high-scoring schemes regardless of ordering  [3].

To evaluate a colored page, the five largest color groups on the page are reordered linearly. The five color groups can be modeled as a node graph with connections that represent their spatial closeness. Next, we transform the graph into a line by solving a traveling salesman problem (TSP) to find the shortest path passing all five nodes. If a coloring solution contains fewer than five colors, we repeat colors in order of size to fill the remaining swatches.

The semantic model needs a few user specified keywords as an extra input to complete its setup. Users can specify an expected mood with one or multiple keywords, for instance:“Business”,“Clean”, “Playful” and so on. Each keyword retrieves a set of color schemes from Adobe color theme database. With identified discriminative features to semantic categories of color schemes, which were firstly introduced by Csurka et al.  [37], our approach is to use Probability Density Functions to infer the high probability areas in the feature space based on the collected samples. The method is detailed in Section  5.2. The approach provides a regression to capture the subtle mood changes in between the color scheme samples.

It is necessary to evaluate color semantics once again after assigning colors from the palette to the page context, because the member colors and their areas might have changed in the spatial permutation.

Color design can be modeled as a multi-objective optimization problem. The optimization usually requires integrating all of the objective functions as a weighted sum or product. The weight setting of multi-objective optimization is still a challenge  [38]. Towards different design specifications, the adaptive weight learning is computationally intensive. In this paper, we adopt a lexicographic strategy, a more flexible approach to coordinating the multi-objectives utilizing user interaction, which determines the best choices by optimizing the objectives one by one in a user specified sequence. The strategy will be detailed in Section  6 and demonstrated in Section  7.

Two datasets are prepared offline. Data acquisition, especially the web design repository, needs some page segmentation and vision processing techniques.

To establish the web design repository, we use a style crawler  [28] to collect the top 300 designs on Alexa in 2013 and 200 popular designs from design communities. The crawler uses a layout engine, Webkit, to process retrieved HTML CSS into a DOM tree and render visual appearances. The Text/Block parser module traverses the DOM tree to extract their computed styles and node properties. Assisted with visual segmentation techniques, the nodes’ edge contrast and spatial shape features are extracted. The invisible nodes are discarded.

The DOM nodes with visible color properties are categorized as: text nodes (nodes that have “InnerText” properties) and non-textual nodes of color blocks. The edge contrasts of the texts (WCAG 2.0 legibility) are estimated first. Meanwhile, the text node’s other DOM properties, i.e., fontSize, fontWeight, numLinks, numChildren, numImages, numSiblings, siblingOrder, textArea, wordCount, treeLevel, verticalSidedness, are saved together. Next, the remaining color blocks on the pages are segmented (see Fig. 3
                        ). The colors and edge contrasts of those blocks are therefore estimated statistically. Their extensive geometrical and spatial features are measured, including: each color block’s contour length, relative area, the depth of nesting, bounding box, elongation, invariant moments, Normalized Discrete Compactness (a relationship between the color patch’s boundary edges and its area  [39]), the area of its background, and their semantic tags of DOM, such as: search, footer, header, image, logo, navigation, and so on.

The boxes/blocks (basic components) are saved in the dataset as elementary entries. Because there are usually many repetitive blocks on a single page, blocks with the same color and shape features are clustered (grouped) into one component. Each basic component therefore has its group properties, such as: the number of siblings, 
                           x
                           y
                         frequency, 
                           x
                           y
                         interval, group moment and centroid, density. Each basic component has 46 features.

After parsing the 500 webpages, we obtain a sample of approximately 52000 components, including 45300 text nodes and 6800 nodes of color blocks. The parsing process coalesces each component’s visual, semantic, and render-time features into a normalized vector descriptor consisting of 6 color contrast properties, 27 predictive DOM features of texts, and 46 spatial and shape properties of color blocks, exposing the properties in a convenient form for future model training and feature selection.

The original color properties of RGB are also transformed into the HSV and CIElab space, which are closer to the nature of human perception. Fig. 4
                         visualizes the distribution of samples of texts and blocks on the plane of edge contrasts (on saturation and value).

The Kuler dataset comprises more than 100,000 color schemes created by visitors to the kuler.adobe.com. Most of the color schemes from Kuler consist of RGB raw data and have been tagged with several keywords. This approach allows users to retrieve the wanted color schemes quickly. Color schemes with different semantic tags proved to be distributed in different areas and clusters  [37]. Fig. 5
                         illustrates the distributions of the color schemes with the semantic tags of “business” and “fresh” separately.

We now describe the methods for formulating the objectives. The models of edge contrasts and color semantics are generally based on the idea of probability density estimation. To evaluate the color harmony, we use the MATLAB implementation provided by ODonovan et al.  [8].

The Contrast Model is expected to evaluate the edge contrasts of basic components parsed from an input layout. With the training set introduced in Section  4.1, our method is to estimate the probability distribution on the edge contrast of each basic component when given its known features: 
                           
                              (1)
                              
                                 P
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          
                                             cp
                                          
                                       
                                    
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          
                                             cp
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                         For a component 
                           
                              cp
                           
                        , 
                           C
                         is its edge contrast and 
                           F
                         is its known spatial and morphological features. To obtain the distribution, we first discretize the space of color contrast by clustering (
                           k
                        -means) the training sample into a number of groups in terms of their edge contrast values (here, we use the differences on the 3 dimensions of the HSV space with 6 kernels found in the clustering).

Next, we use the clustered sample to train a classifier. The classifier is multinomial logistic regression (MNR). The classifier can predict, when given a Feature vector 
                           
                              
                                 F
                              
                              
                                 
                                    cp
                                 
                              
                           
                        , the probabilities of it falling into each cluster. Then, we place a Gaussian Kernel at each cluster’s center 
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                         with the corresponding probability as its density and set the widths in terms of the cluster’s standard deviations 
                           σ
                        . Through the construction of the Gaussian Mixture Model (GMM), we obtain an estimation of 
                           P
                           
                              (
                              
                                 
                                    C
                                 
                                 
                                    
                                       cp
                                    
                                 
                              
                              |
                              
                                 
                                    F
                                 
                                 
                                    
                                       cp
                                    
                                 
                              
                              )
                           
                        , which is a continuous probability distribution of variable 
                           
                              
                                 C
                              
                              
                                 
                                    cp
                                 
                              
                           
                         depending on the feature vector 
                           
                              
                                 F
                              
                              
                                 
                                    cp
                                 
                              
                           
                        . 
                           
                              (2)
                              
                                 P
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          
                                             cp
                                          
                                       
                                    
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          
                                             cp
                                          
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       6
                                    
                                 
                                 exp
                                 
                                    (
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   ‖
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         
                                                            cp
                                                         
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ‖
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ⋅
                                 P
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          j
                                       
                                    
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          
                                             cp
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                        
                        Fig. 6
                         visualizes the estimated probability distributions of brightness and saturation contrasts for different components on a page layout.

The method was firstly introduced by Charpiat et al.  [40], who built multimodal distributions of colors given local texture features for gray scale image colorization. Later, Wang referred to this method in image color theme enhancement  [23] and Lin in her generative coloring of patterns  [3].

We encode color solution 
                           X
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                              )
                           
                           ,
                           
                           X
                           ∈
                           S
                        . 
                           
                              
                                 x
                              
                              
                                 k
                              
                           
                         represents the alterable color attribute of the 
                           k
                        th color group on a page, and 
                           S
                         is the set of all solutions. Suppose there are 
                           N
                         basic components parsed from the page, then, its overall contrast settings are then evaluated with a weighted sum of local probabilities: 
                           
                              (3)
                              
                                 
                                    
                                       f
                                    
                                    
                                       c
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       N
                                    
                                 
                                 P
                                 
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                    
                                    
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             
                                                fg
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             
                                                bg
                                             
                                          
                                       
                                       |
                                       
                                          
                                             F
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 
                                    
                                       A
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       x
                                    
                                    
                                       
                                          fg
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       
                                          bg
                                       
                                    
                                 
                                 ∈
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                              
                           
                         where 
                           
                              
                                 C
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    
                                       fg
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       bg
                                    
                                 
                              
                              )
                           
                         is the edge contrast of the 
                           i
                        th component with corresponding foreground color group 
                           
                              
                                 x
                              
                              
                                 
                                    fg
                                 
                              
                           
                         and background color group 
                           
                              
                                 x
                              
                              
                                 
                                    bg
                                 
                              
                           
                        . 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                         is the predictive feature vector of the component’s edge. 
                           
                              
                                 A
                              
                              
                                 i
                              
                           
                         is the area proportion of the 
                           i
                        th component. It roughly represents the contribution of visual impact of the component. This equation approximately represents the contribution of visual impact of the component.

The vector 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                         has been described in the last section. In the training, it is reduced to 32 dimensions with feature selection techniques from 46 initial dimensions. The Sequential Feature Selection technique (SFS)  [41]  adds features one by one to a sub-feature set while cross-validating and evaluating misclassification rates of the MNR classifier. The decreases of misclassification rates are actually the indexes of information gains of the added features. Those features that have very low contribution to the classification rate (
                           <
                           0.001
                        ) are discarded.

It is supposed that audiences’ subjective evaluations of a design 
                           X
                         regarding a specific mood being aroused is a normal distribution and could be estimated by 
                           
                              (4)
                              
                                 
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 E
                                 
                                    (
                                    y
                                    |
                                    X
                                    )
                                 
                                 =
                                 ∫
                                 y
                                 P
                                 
                                    (
                                    y
                                    |
                                    X
                                    )
                                 
                                 d
                                 y
                              
                           
                         where 
                           y
                         is the rating of the mood strength. According to Bayes’ theorem 
                           
                              (5)
                              
                                 
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 ∫
                                 y
                                 
                                    
                                       P
                                       
                                          (
                                          X
                                          ,
                                          y
                                          )
                                       
                                    
                                    
                                       P
                                       
                                          (
                                          X
                                          )
                                       
                                    
                                 
                                 d
                                 y
                                 =
                                 
                                    
                                       ∫
                                       y
                                       P
                                       
                                          (
                                          X
                                          ,
                                          y
                                          )
                                       
                                       d
                                       y
                                    
                                    
                                       ∫
                                       P
                                       
                                          (
                                          X
                                          ,
                                          y
                                          )
                                       
                                       d
                                       y
                                    
                                 
                                 .
                              
                           
                         With a set of sample 
                           
                              (
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           ,
                           
                           i
                           ∈
                           
                              {
                              1
                              ,
                              2
                              …
                              ,
                              n
                              }
                           
                        , collected for a specified mood, the 
                           P
                           
                              (
                              X
                              ,
                              y
                              )
                           
                         and 
                           P
                           
                              (
                              X
                              )
                           
                         can be approximated using GMM with 
                           n
                         kernels. 
                           
                              (6)
                              
                                 P
                                 
                                    (
                                    X
                                    ,
                                    y
                                    )
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             
                                                (
                                                2
                                                π
                                                )
                                             
                                          
                                          
                                             
                                                (
                                                k
                                                +
                                                1
                                                )
                                             
                                             /
                                             2
                                             
                                                
                                                   σ
                                                
                                                
                                                   
                                                      (
                                                      k
                                                      +
                                                      1
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ⋅
                                 
                                    
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 exp
                                 
                                    (
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   ‖
                                                   X
                                                   −
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ‖
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ⋅
                                 exp
                                 
                                    (
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   ‖
                                                   y
                                                   −
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ‖
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    )
                                 
                              
                           
                         where 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                         is the 
                           i
                        th design (or 
                           i
                        th cluster mean) in the sample set. 
                           
                              
                                 y
                              
                              
                                 i
                              
                           
                         is the rating of the mood given by people. 
                           k
                         is the dimension of 
                           X
                        . 
                           σ
                         is the diameter of the Gaussian kernels. After combining (5) and (6), then performing integrations we get: 
                           
                              (7)
                              
                                 
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                       exp
                                       
                                          (
                                          −
                                          
                                             
                                                
                                                   ‖
                                                   X
                                                   −
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ‖
                                                
                                             
                                             
                                                2
                                             
                                          
                                          /
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       exp
                                       
                                          (
                                          −
                                          
                                             
                                                
                                                   ‖
                                                   X
                                                   −
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ‖
                                                
                                             
                                             
                                                2
                                             
                                          
                                          /
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                    
                                 
                                 .
                              
                           
                         It reveals that for any new design 
                           X
                         input, 
                           
                              
                                 f
                              
                              
                                 s
                              
                           
                           
                              (
                              X
                              )
                           
                         can be visualized as a weighted mean of 
                           
                              
                                 y
                              
                              
                                 i
                              
                           
                        . The weights are the exponential function of the 
                           
                              
                                 L
                              
                              
                                 2
                              
                           
                         distance between 
                           X
                         and 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                        .

It is impractical to manually rate each 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                         with a scale value 
                           
                              
                                 y
                              
                              
                                 i
                              
                           
                         in terms of the specified mood. The training data available is a large set of color schemes tagged with all kinds of keywords in the Adobe Kuler database. Users can specify an expected color mood with one or several weighted keywords, for instance, “energetic and young but not so hot”. Then, as an approximation, the color schemes retrieved with keywords “energetic” and “young” are rated +1. And the “hot” schemes are rated 0. Some randomly sampled color schemes from the rest are rated 0.5. Usually there are thousands and hundreds color schemes for each keyword in Adobe dataset. The reason to use this probability density model is that its non-parametric nature allows users to avoid re-training for any new combination/weighting of mood keywords.

Any solution 
                           X
                         needs to be transformed into a 
                           k
                        -dimension semantic feature vector before evaluation. We initially selected total 82 high-level features: in addition to raw features of five member colors’ RGB and HSV values, many statistical global features are calculated, including mean, standard deviation, max and min of each channel of HSV, RGB, Lab, and edge contrasts of the channels; dominant color (the member color closest to the mean); accent color (the member color that has the largest difference from the dominant color); bag of visual word (BOV) and Fisher vectors based on the Kuler dataset, and hue entropy  [8]. O’Donovan has investigated most of these features in his research of color scheme compatibility with weight learning. We expect them to also be effective for color semantics. Csurka et al., through the error rates of cross validations of classifications, proved that the BOV and Fisher Vector are more discriminative than the raw RGB feature in semantic categories  [37].

With the semantic features, the model could capture a subtle mixed mood expressed with any combination of multiple keywords, which may not be available by direct keyword searching in the dataset. For instance, the dataset has 156 “soft + fresh” and 1582 “Business” but returned nothing for “business + soft + fresh”. Utilizing the model, users could infer a mood specified with multi-words and induce the most representative sample in a set. An experiment on the Kuler set illustrates this point (Fig. 7
                        ). The model may also allow the users to filter out an original, vast color palette into a smaller amount of colors.

Color design is used to find the optimum permutation 
                        X
                      by maximizing the contrast, semantic and harmony objectives: 
                        
                           (8)
                           
                              max
                              
                              
                                 (
                                 
                                    
                                       f
                                    
                                    
                                       c
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       h
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 )
                              
                              ,
                              
                              s.t.
                              
                              g
                              
                                 (
                                 X
                                 )
                              
                              ≤
                              0
                              ,
                              
                              X
                              ∈
                              S
                           
                        
                     
                     
                        g
                        
                           (
                           X
                           )
                        
                      is the constraint, such as the W3C web standard of legibility.

The lexicographic strategy progressively reduces the number of candidate solutions by applying selection criteria in sequence. The optimization starts from seeking one of the objectives: 
                        
                           
                              max
                              
                                 
                                    f
                                 
                                 
                                    1
                                    
                                       st
                                    
                                 
                              
                              
                                 (
                                 X
                                 )
                              
                              ,
                              
                              X
                              ∈
                              S
                              .
                           
                        
                      We next obtain the optimum 
                        
                           
                              f
                           
                           
                              1
                              
                                 st
                              
                           
                           
                              ∗
                           
                        
                      and a reduced solution set 
                        
                           
                              S
                           
                           
                              1
                              
                                 st
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    S
                                 
                                 
                                    1
                                    
                                       st
                                    
                                 
                              
                              =
                              
                                 [
                                 X
                                 |
                                 
                                 
                                    
                                       f
                                    
                                    
                                       1
                                       
                                          st
                                       
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 ≥
                                 
                                    (
                                    1
                                    −
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                1
                                                s
                                                t
                                             
                                          
                                       
                                       
                                          100
                                       
                                    
                                    )
                                 
                                 
                                    
                                       f
                                    
                                    
                                       1
                                       
                                          st
                                       
                                    
                                    
                                       ∗
                                    
                                 
                                 ]
                              
                              ∩
                              S
                              ,
                              
                              δ
                              ∈
                              
                                 [
                                 0
                                 ,
                                 100
                                 ]
                              
                              .
                           
                        
                      Next, we continue to reduce the set 
                        S
                      by conducting such an operation using other objective functions until the final optimal solution set in a lexicographic sense. 
                        δ
                      represents the relaxation factor, adjusting the proportion of surviving solutions in each stage. The method takes effect on the condition that the reduced 
                        S
                      must have more than one element every time. Color design usually has quite a number of optimum solutions rather than an absolutely unique one. It need not be the strict optimal before starting the next stage of operation.

We now demonstrate how the models and strategy may be useful when applied to two typical web-coloring scenarios. One is coloring a webpage with a prepared color palette. Another is fine-tuning a colored webpage within specified ranges of changes. Both the situations take the webpages’ layouts as inputs.

Because the areas of the components and color groups are fixed during the optimization, the spatial and morphological features of the components and color groups can be pre-calculated in a single run offline. Therefore, the objective functions only need small fractions of recalculation for every update of the coloring on the page.

From color design communities, such as Adobe Kuler, Colorlover, Aviary Toucan and Daily Color Scheme, designers can search for wanted color schemes (color palette). Color schemes can be pre-evaluated by using the harmony model and semantic model. We have demonstrated the semantic fine-tuning in Fig. 7. Well-selected color schemes, however, do not assure an expected final coloring effect on page. Transferring colors from a color scheme to different regions of a webpage usually produces significantly different visual effects.

In this demonstration, we selected a blog page as the target layout (http://purecss.io/layouts/blog/). The webpage has seven fixed regions of color groups. Thus, we retrieved two color schemes from Kuler, plus an extra neutral gray. An 11-color palette is created (see Fig. 8
                        )

There is a total of 
                           11
                           !
                           /
                           4
                           !
                           =
                           1
                           ,
                           663
                           ,
                           200
                         possible alternatives. We use a brute force search to evaluate all 1,663,200 alternatives. A depth first searching tree in terms of the states of the seven color groups is constructed. The color groups containing texts are placed closer to the root node so that we can efficiently prune the branches of illegible solutions (violating the WCAG 2.0 luminance standard) at the very beginning. Those that have a text luminance below 2.2 are killed without further evaluations. Approximately 200,000 solutions remained after the pruning. The solutions are then further evaluated and sorted with a sequence of objective models.

To evaluate the solutions with the contrast model introduced in Section  5.1, basic components of the page must be parsed at the beginning. There is a total of 15 text/block components on the page, with their weights and predictive features being measured. The overall score is the weighted sum of the evaluations on the components (see Eq. (3)). Fig. 9
                         shows results with the first and third scores of the overall contrast evaluations.

The top 10 results have apparent diversity (see Fig. 10
                        ). This verifies that the contrast qualities alone may be too general to converge the results, even with a small palette. More objectives, such as semantic preferences, may be necessary.

If we apply the semantic models at first and sort out a portion of the total 200,000 for further contrast evaluation (or vice versa), the final results can be significantly different. Fig. 11
                         shows the best contrast results with two different prerequisites of keywords. Fig. 12
                         shows that with the prerequisites, the top contrast results converge much more than those in Fig. 10.

In every lexicographic stage, a sample of sorted high scored results must be saved. The users can browse through it to obtain the sense of how diverse the results are so far and then decide on the portion reserved for the next stage of screening.

In another case, the layout is designed with a template (http://demo.mekshq.com/?theme=seashell). It has 7 color groups. We create a palette by acquiring colors from the theme image on the target page. This is a popular practice for designers to achieve harmony and semantic consistency on webpages  [36]. Fig. 13
                         shows a palette that has 10 colors from van Gogh’s Wheatfield with Crows.

The total number of solutions is 604,800, in which only 1442 meet the WCAG legibility standard because most colors on the palette are neutral and dim. We sort the 1442 solutions with a semantic objective before applying the contrast models to them. Fig. 14
                         shows the results of two different semantic objectives: the left is the best contrast setting among the top 200 “warm soft”. The right is obtained from the top 200 “cool business”.

An essential detail of lexicographic optimization is to set a proper tolerance 
                           δ
                        . This refers to how to determine the surviving portion of the last screening to enter the next stage. There is no mature guideline to follow to date. Generally, we must keep sufficient variety in the retained set to leave room for the next stage of screening. In this paper, we interactively expand the retained set to alter the best ones until we obtain sufficient variety.

In the experiments, we found that a harmonious color scheme generally ensures harmonious page coloring effects. However, a larger palette may result in potential incompatible combinations. In the next trial, we use a 20-color palette (see Fig. 15
                        ). The target page is still the same as the last. There is a total of 390,700,800 possible candidate solutions. 706,800 remained after legibility checking. Then, the further screenings have three layers. Harmonization is inserted in between semantic and contrast evaluations, considering contrast evaluations are computationally heaviest among the three. Fig. 16
                         demonstrates the best ones at each of the three consecutive evaluations from left to right with notable improvements.

In the demos, the contrast model generally performs well. However, it is not perfect, as some types of components, such as the div of the headline, text input box and navigation bars, seem to be mixed up in the predictions. This may be because they share too many similar features. It would be better to add more discriminative tags of their natures.

Some webpage makers like to start from a roughly specified color tone on the page following tiresome adjusting processes. The data-driven models may assist them in improving their initial colorings with slight modifications. That is, given a current page coloring 
                           X
                        , the system automatically finds better-looking alternatives 
                           X
                         nearby in the space of solutions. 
                           
                              (10)
                              
                                 
                                    Max
                                 
                                 
                                 f
                                 
                                    (
                                    
                                       
                                          X
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 s.t.
                                 
                                 
                                    ‖
                                    
                                       
                                          X
                                       
                                       
                                          ′
                                       
                                    
                                    −
                                    X
                                    ‖
                                 
                                 ≤
                                 D
                                 .
                              
                           
                         The 
                           
                              
                                 L
                              
                              
                                 2
                              
                           
                         distance 
                           D
                         is computed in HSV space, constraining the variations of 
                           X
                        . 
                           D
                         can be set individually for each color region and each color channel. Here, we set 
                           D
                         on the HSV dimensions separately with 
                           
                              
                                 D
                              
                              
                                 h
                              
                           
                           =
                           0.01
                        , 
                           
                              
                                 D
                              
                              
                                 s
                              
                           
                         and 
                           
                              
                                 D
                              
                              
                                 v
                              
                           
                           =
                           0.1
                        , because people are more sensitive to the change of hue than the other two channels.

Firstly, we demonstrate “finding a better direction of the next move”. We enumerate all possible slight moves away from the original. Four foreground color groups on the page are set as variables. Suppose each channel of a color has three states: move upward, move downward and no move; then, there is a total of 
                           3
                           
                           
                              
                              
                                 ˆ
                              
                           
                           
                           12
                           −
                           1
                           =
                           531
                           ,
                           441
                         combinations (directions) around the original coloring state. We try to find a direction better than the original from both contrast and harmony points of views (see Fig. 17
                        ).

Another demo uses Covariance Matrix Adaptation (CMA)  [42], an evolutionary approach, to fine tune the page, with the constraints being enforced by assigning large penalties to generated alternatives that violate the constraints. CMA is run for 50 iterations to converge with a sample size 
                           N
                           =
                           30
                        .

The CMA is run twice. In the first run, the original page is adapted to an optimum contrast state. In the second run, the optimum contrast ratios on the page are fixed as constraints. The harmony model leads the adaptation. Fig. 18
                         shows two original pages and their subsequent consecutive adaptations.

We evaluated the effectiveness of the approach through user perception studies. Twenty undergraduates from various departments (15 males and 5 females) were recruited to participate in the study. All participants had normal color vision.

In the first test, 30 coloring solutions of the same input layout using the same color palette were prepared as the test material, in which 10 were made by nonprofessional university students, 10 generated by the system randomly, and 10 generated by the system with optimization to two objectives (contrast and harmony).

The participants were shown each of the 30 effects for 5 s on an Apple 27 in cinema display in randomized order with a 5 s black screen interval and were asked to indicate their attitude to each coloring effect: like, dislike or no opinion. 8 effects were presented once again to check the consistency of the participants’ attitudes.


                     Fig. 19
                      shows that human design and our model received more “like”s and less “dislike”s than the random base-line. Pairwise 
                        T
                      test shows that the difference between the generated colorings with the model and without the model is significant (like: 
                        t
                        =
                        8.986
                     , dislike: 
                        t
                        =
                        −
                        15.449
                     , with 
                        p
                        <
                        0.001
                     ). The model-generated colorings received more “like”s than those generated by non-professional students (
                        t
                        =
                        2.236
                     ,  
                        p
                        <
                        0.05
                     ), while the “dislike”s they received have no difference (
                        −
                        0.237
                        ,
                        
                        P
                        =
                        0.815
                     ).

We also conducted an A–B test on the effectiveness of the fine-tuning. 10 pairs of test material were prepared. 20 participants were asked to compare each original webpage coloring with its tuned version on a screen at the same time in a five second interval and to select either their preferable one, both or none. The analysis of the results shows that the tuned versions received more preferences (see Fig. 20
                     ). We also found that those that originally had less “like”s were improved more significantly.

To evaluate the predictability of the semantic model, a user test presented participants with a randomized grid of 16 colorings generated for the same webpage. Participants were asked to rate the colorings 
                        
                           (
                           −
                           1
                           ,
                           0
                           ,
                           +
                           1
                           )
                        
                      in terms of given keywords. The test uses 3 unary keywords (fresh, soft, business) and 3 compound keywords (fresh + business, soft + business, soft + fresh). We compared the human ratings on the 16 colorings with the model evaluations. The Pearson correlation between the human ratings and model predictions is 0.826 for the unary and 0.653 for the compound keywords with 
                        p
                        <
                        0.05
                     .

In this paper, we present a data-driven design framework for automatically coloring webpages. Three fundamental objectives are addressed in the optimization. The contrast and semantic models are newly introduced in webpage design and formulated with probabilistic density estimations in the established feature spaces with the design samples we prepared. The framework supports an interactive lexicographic strategy to coordinate the multi-objectives. The demonstrations of the initial implementation of the framework in two typical design scenarios are encouraging. The user perception experiments suggest the effectiveness of the models. The system-generated designs are generally preferable to those designs by nonprofessionals.

The internal mechanism of color aesthetics perception is still not very clear. For instance, the colors on a page interact with each other. The areas, shapes, distances and so on all mutually affect the effects of colors in a composition. Thus, the evaluation of page harmony using five linearly arranged color swatches might be oversimplified.

There remains considerable work to be performed to identify which color properties matter most to the semantic expression needs of a systematic features selection process. For a better contrast prediction, the contrast model needs to explore more discriminative features of the webpage components, try different granularities in the contrast space, and enlarge the design repository with more examples.

For the sake of the simplification of computing, presently, in design generation, the number of color groups and their zoning are not adjustable. If so, the total number of alternatives may increase exponentially, making brute force searching certainly not a reasonable option. More efficient searching, such as Stochastic, iterative and evolutionary techniques, genetic algorithms and the ant colony algorithm may be more suitable.

To date, the objective model has been implemented using MATLAB and the generative engine using Python and JavaScript. The demonstrations of color assignments in this paper normally require 30 min 
                        ∼
                        6
                        
                        
                           h
                        
                      on a 1.7 GHz Intel core i5, 8 GB DDR to complete these optimizations (it generally depends on the sizes of solution sets) and the color fine tunings with CMA require about 2 h to converge. The performance of the system can still be greatly improved.

This research presents a new vision for future adaptive webpage coloring. A webpage may quietly harmonize itself, adjust its visual saliencies, and change its color mood based on its contents, different audiences or different seasons.

@&#ACKNOWLEDGMENTS@&#

We thank Xinya Xu and Chen Chu for their help in the analysis of the user study results, and the anonymous reviewers for their very helpful comments and suggestions. This research was supported by the interdisciplinary research fund of art and science in Shanghai Jiao Tong University.

@&#REFERENCES@&#

