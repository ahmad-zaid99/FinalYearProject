{"id": "S0168874X13001601", "article": "MAIN-TITLE Configuration-dependent interpolation in higher-order 2D beam finite elements   HIGHLIGHTS          We propose a configuration-dependent interpolation for 2D non-linear beams.      We establish a connection between this interpolation and linked interpolation in linear analysis.      The results obtained show good performance regardless of the integration order.          KEYPHRASES   Non-linear analysis  Reissner\u2013Simo beam theory  Configuration-dependent interpolation   Geometrically exact beam theory and its finite element implementation have been the subject of extensive research in the recent past (see e.g. [1\u20134]). We are concerned with the geometrically exact 3D beam theory of Reissner [5] and Simo [1] which has provided the basis for many of the recent finite element formulations for 3D beams (e.g. [2,3,6]). The geometrically exact theory provides the relationship between the configuration and the adopted strain measures which are fully consistent with the virtual work principle and the differential equations of motion, regardless of the magnitude of displacements, rotations and strains involved [1].  Most of the procedures in the finite element method in general, and in the application of the beam theories with an independent rotational field in particular, use Lagrangian polynomials as interpolation functions to describe unknown functions approximately. (A typical example of such a theory in engineering practice is the Timoshenko beam theory, which in the geometrically non-linear environment generalises to the Reissner beam theory considered here. In the Bernoulli beam, in contrast, the rotational field is not independent of the displacements eventually leading to Hermitean, rather than the Lagrangian interpolation.) Since non-linear analysis employs Newton\u2013Raphson solution procedure to solve the system of equations iteratively, this allows us to generalise the interpolation procedure without additional computational efforts apart from the changes made on one element level.  When choosing new interpolation functions we demand that they result in exact solution where such exists, such as linear analysis and pure bending in non-linear analysis. In order to define this new configuration dependent interpolation, existing configuration-dependent interpolations are used as a template [7,8].  In [7] a strain-invariant and path-independent geometrically exact isoparametric 3D beam element with arbitrary number of nodes has been derived. The key to the formulation is found in the interpolation of current local rotations. A different approach, aimed at resolving a more general type of non-objectivity of the numerical results with respect to the chosen definition of the beam reference line, is given in [8]. The resulting formulation in the process returns exactly the same solution for the interpolation of the rotation field as [7], and it additionally eliminates the problem of shear locking by design. However, the formulation is only applicable to two-noded elements and the given methodology has been strictly limited to that case.  In non-linear 3D beam theory with rotational degrees of freedom [1] configuration-dependent interpolation therefore may be utilised to provide a result invariant to the choice of the beam reference axis [8] or invariant to a rigid-body rotation [7]. For 2D beam elements, the latter issue vanishes, and such elements are more illustrative for the study of accuracy of the configuration-dependent interpolation in higher-order elements.  In Section 2 we present the methodology used to design a configuration-dependent interpolation for the position vector in 3D beam elements of arbitrary order. In Section 3 we apply this interpolation to derive a new family of beam elements and in Section 4 we conduct some 2D numerical tests to assess the performance of these elements against the elements with Lagrangian or linked interpolation.  In the first three subsections we present the three basic ingredients on which we build our family of elements with configuration-dependent interpolation.  The first of these is the family of generalised interpolation functions for the rotation increments which, for a two-noded element, coincides with the interpolation for the same quantity in the helicoidal interpolation, our second basic ingredient. Since the helicoidal interpolation is only applicable to two-noded elements and it utilises the same interpolation also for the position vector, it appears to be a natural idea to use the generalised interpolation from our first ingredient when attempting to generalise the helicoidal interpolation to higher-order elements. This interpolation is next fine-tuned to provide the exact solution in linear analysis, our third ingredient. In the following subsection we constrain this interpolation to satisfy the strain-invariance condition and in the last subsection we give the result for the 2D case.  A strain-invariant path-independent formulation for geometrically exact higher-order beam element has been derived in [7]. In this formulation the position vector of the beam reference axis, taken to coincide with the line of centroids, in the deformed state r (   x   1   ) has been interpolated in a Lagrangian manner as  (1)  r (   x   1   ) \u2248   r   h   (   x   1   ) =   \u2211   i = 1   N     P   i   (   x   1   )   r   i   ,   where   x   1   \u2208 [ 0 , L ] is the material-point position parameter, N is the number of element nodes,   P   i   (   x   1   ) are the Lagrangian polynomials of order N \u2212 1 satisfying   P   i   (   x   1 j   ) =   \u03b4   ij   and   r   i   =   r   h   (   x   1 i   ) , where index h denotes an interpolated field, and   \u03b4   ij   is the Kronecker symbol (   \u03b4   ij   = 1 if i = j and   \u03b4   ij   = 0 otherwise).  The rotations have been treated in a very specific manner. The rotation matrix \u039b (   x   1   ) has been decomposed into a part which is constant for the whole beam and rigidly attached to a node (   \u039b   r   ) , and the part due to a local   \u03a8   l   rotation with respect to   \u039b   r   :  (2)  \u039b (   x   1   ) =   \u039b   r    exp    \u03a8   l   (   x   1   ) \u2248   \u039b   h   (   x   1   ) =   \u039b   r    exp      \u03a8   ^     lh   (   x   1   ) ,   with  (3)  exp     \u03a8   ^     lh   = I +    sin    \u03a8   lh       \u03a8   lh          \u03a8   ^     lh   +    1 \u2212 cos    \u03a8   lh       (   \u03a8   lh   )   2        (     \u03a8   ^     lh   )   2   ,   where   \u03a8   lh   = \u2225   \u03a8   lh   \u2225 and   \u039b   r   may be taken to coincide with a particular node I or may be related to two chosen nodes I and J via  (4)    \u039b   r   =   \u039b   I    exp (    1   2      \u03d5   ^   ) ,   where \u03d5 is the relative material rotation between the nodes I and J extracted from  (5)  exp   \u03d5   ^   =   \u039b   I   T     \u039b   J     and index l denotes a local value of a rotation taken with respect to the reference triad   \u039b   r   . Note that for I = J ,  exp    \u03d5   ^   = I or, in other words, there is no relative rotation \u03d5 .  The hat (      ^   ) above a 3D vector in (3) and throughout the text denotes a cross-product operator such that for a vector v = {       v   1       v   2         v   3     } ,   v   ^   is defined as     v   ^   = [     0   \u2212   v   3       v   2         v   3     0   \u2212   v   1       \u2212   v   2       v   1     0     ] .      The local rotation   \u03a8   l   (   x   1   ) is interpolated in the Lagrangian way  (6)    \u03a8   l   (   x   1   ) \u2248   \u03a8   lh   (   x   1   ) =   \u2211   i = 1   N     P   i   (   x   1   )   \u03a8   i   l   ,   where the local nodal rotations   \u03a8   i   l   are extracted from  (7)  exp      \u03a8   ^     i   l   =   \u039b   r   T     \u039b   i   .      For the non-linear finite-element solution procedure it is necessary to interpolate the Newton\u2013Raphson increments \u0394 r and \u0394 \u03d1 in \u0394 \u039b =   \u0394 \u03d1   ^   \u039b . Obviously  (8)  \u0394 r \u2248 \u0394   r   h   =   \u2211   i = 1   N     P   i   \u0394   r   i   ,   while \u0394 \u03d1 has been closely investigated in [7] and the result found in the form  (9)  \u0394 \u03d1 \u2248 \u0394   \u03d1   h   =   \u2211   i = 1   N       I   \u02dc     i   (   \u039b   h   ) \u0394   \u03d1   i   ,   with  (10)      I   \u02dc     i   =   \u2211   j = 1   N     \u2211   k = 1   N     \u0394   k   ij     \u039b   r   {  (   \u03b4   Ik   +   \u03b4   Jk   ) [  I \u2212 H (   \u03a8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   (   \u03a8   m   l   )  ]   V   j   + H (   \u03a8   lh   )   P   k     H   \u2212 1   (   \u03a8   j   l   )  }   \u039b   r   T   ,      (11)    V   I   =    1   2    (  I +    1   \u03d5     tan     \u03d5   4      \u03d5   ^    ) ,      (12)    V   J   =    1   2    (  I \u2212    1   \u03d5     tan     \u03d5   4      \u03d5   ^    )   and  (13)  H (   \u03a8   l   ) = I +    1 \u2212 cos    \u03a8   l       (   \u03a8   l   )   2          \u03a8   ^     l   +      \u03a8   l   \u2212 sin    \u03a8   l       (   \u03a8   l   )   3        (     \u03a8   ^     l   )   2   ,      (14)    H   \u2212 1   (   \u03a8   l   ) = I \u2212    1   2        \u03a8   ^     l   \u2212    1   2         \u03a8   l    sin    \u03c8   l   + 2  cos    \u03a8   l   \u2212 2     (   \u03a8   l   )   2   ( 1 \u2212 cos    \u03a8   l   )      (     \u03a8   ^     l   )   2   ,   while  (15)    \u0394   k   ij   = {     1   for  i = j = k     0   otherwise .          For I = J the generalised interpolation (10) simplifies considerably and reads  (16)      I   \u02dc     i   =   \u2211   j = 1   N     \u2211   k = 1   N     \u0394   k   ij     \u039b   I   {    \u03b4   Ik   [  I \u2212 H (   \u03a8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   (   \u03a8   m   l   )  ] + H (   \u03a8   lh   )   P   k     H   \u2212 1   (   \u03a8   j   l   )  }   \u039b   I   T   .      The helicoidal interpolation presented and developed in many different aspects in [8\u201312] may be thought of as originating from a requirement that the finite-element solution should be invariant to the choice of the beam reference line and kinematically consistent in the sense that it should belong to the solution space including the orthogonality group SO ( 3 ) .  The first of these requirements boils down simply to the condition that both the position vector of the reference line ( r ) and the rotation tensor ( \u039b ) should be interpolated using the same interpolation functions. This issue is explored in more detail in Section 2.6. For instance, using the Lagrangian polynomials this yields [12]    r   h   (   x   1   ) =   \u2211   i = 1   N     P   i   (   x   1   )   r   i   and  (17)    \u039b   h   (   x   1   ) =   \u2211   i = 1   N     P   i   (   x   1   )   \u039b   i   .      The above interpolation of the rotation tensor, however, is clearly kinematically inconsistent, i.e.   \u039b   h   (   x   1   ) is in general neither orthogonal nor unimodular. To satisfy this requirement, an alternative interpolation has been proposed in [8] which reads  (18)    r   h   (   x   1   ) =   \u2211   i = 1   2       N   \u02dc     i     r   i        (19)    \u039b   h   (   x   1   ) =   \u2211   i = 1   2       N   \u02dc     i     \u039b   i   \u21d2 \u0394   \u03d1   h   (   x   1   ) =   \u2211   i = 1   2       N   \u02dc     i   \u0394   \u03d1   i   ,   where the generalised interpolation functions     N   \u02dc     i   are identical to     I   \u02dc     i   in (10) for N = 2 (two-noded element). It is important to note that the proposed helicoidal interpolation makes sense only for two-noded elements.  Since, for I = J , the interpolation functions     I   \u02dc     i   in (10) also satisfy     \u039b   h   (   x   1   ) =   \u2211   i = 1   N       I   \u02dc     i     \u039b   i     it appears that the helicoidal interpolation may be generalised to higher-order elements using the interpolation functions from (10) and applying them to both the translations and the rotations via  (20)    r   h   (   x   1   ) =   \u2211   i = 1   N       I   \u02dc     i     r   i        (21)    \u039b   h   (   x   1   ) =   \u2211   i = 1   N       I   \u02dc     i     \u039b   i   ,  \u0394   \u03d1   h   (   x   1   ) =   \u2211   i = 1   N       I   \u02dc     i   \u0394   \u03d1   i   .      With the above generalisation to a higher-order element (expressions (20) and (21)), however, the exact result, even in the limit case of the analysis becoming linear, cannot be achieved. To show this let us first note that  (22)    \u039b   I     \u039b   I   T   = I ,      (23)    \u039b   I   H (   \u03a8   lh   )   \u039b   I   T   = H (   \u039b   I     \u03a8   lh   ) ,      (24)    \u039b   I     H   \u2212 1   (   \u03a8   i   l   )   \u039b   I   T   =   H   \u2212 1   (   \u039b   I     \u03a8   i   l   ) ,      (25)    \u039b   I     V   I     \u039b   I   T   =    1   2    I +    1   2       lim   \u03d5 \u2192 0   (     1   \u03d5     tan     \u03d5   4        \u039b   I   \u03d5   ^    ) =    1   2    I   and also   \u039b   I     \u03a8   i   l   and   \u039b   I   \u03d5 are the spatial counterparts of   \u03a8   i   l   and \u03d5 :  (26)    \u03c8   i   l   =   \u039b   I     \u03a8   i   l   ,      (27)  \u03c6 =   \u039b   I   \u03d5 = 0 .      Now, in the case of linear analysis, the rotations become infinitesimally small which means that   \u039b   I   =   \u039b   0   , where   \u039b   0   is a matrix of initial undeformed orientation, which results in the following expressions:  (28)  H (   \u03c8   lh   ) = I +   lim     \u03a8   lh   \u2192 0   (     1 \u2212 cos    \u03c8   lh       (   \u03c8   lh   )   2       )     \u03c8   ^     lh   +   lim     \u03c8   lh   \u2192 0   (       \u03c8   lh   \u2212 sin    \u03c8   lh       (   \u03c8   lh   )   3          \u03c8   ^     lh    )     \u03c8   ^     lh   ,   which further reduces to  (29)  H (   \u03c8   lh   ) = I +    1   2        \u03c8   ^     lh   .   Also, for the case of linear analysis:  (30)    H   \u2212 1   (   \u03c8   i   l   ) = I \u2212    1   2        \u03c8   i   l     ^   \u2212    1   2       lim     \u03c8   i   l   \u2192 0   (       \u03c8   i   l    sin    \u03c8   i   l   + 2  cos    \u03c8   i   l   \u2212 2     (   \u03c8   i   l   )   2   ( 1 \u2212 cos    \u03c8   i   l   )     )   (     \u03c8   ^     i   l   )   2   ,   which further reduces to  (31)    H   \u2212 1   (   \u03c8   i   l   ) = I \u2212    1   2        \u03c8   ^     i   l   .   Also  (32)    \u039b   0     V   I     \u039b   0   T   =    1   2    I ,   and, owing to   \u039b   I   =   \u039b   0   , the rotations cease to be local, i.e.   \u03c8   i   l   =   \u03c8   i   .  In linear analysis from (16) we thus have  (33)      I   \u02dc     i   =   \u2211   j = 1   N     \u2211   k = 1   N     \u0394   k   ij     \u03b4   Ik   [  I \u2212 (  I +   1   2       \u03c8   ^     h    )   \u2211   m = 1   N     P   m   (  I \u2212   1   2       \u03c8   ^     m    )  ] +   \u2211   j = 1   N     \u2211   k = 1   N     \u0394   k   ij     P   k   (  I +   1   2       \u03c8   ^     h    ) (  I \u2212   1   2       \u03c8   ^     j    ) =   P   i   (  I +   1   2       \u03c8   h   \u2212   \u03c8   i     ^    ) =   P   i   (  [     1   0   0     0   1   0     0   0   1     ] +    1   2    [     0   \u2212 (   \u03c8   3   h   \u2212   \u03c8   i 3   )     \u03c8   2   h   \u2212   \u03c8   i 2         \u03c8   3   h   \u2212   \u03c8   i 3     0   \u2212 (   \u03c8   1   h   \u2212   \u03c8   i 1   )     \u2212 (   \u03c8   2   h   \u2212   \u03c8   i 2   )     \u03c8   1   h   \u2212   \u03c8   i 1     0     ]  ) ,   after elimination of the second-order terms.  The results from (20) and (21) now become  (34)    r   h   =   \u2211   i = 1   N     P   i   (  I +    1   2        \u03c8   h   \u2212   \u03c8   i     ^    )   r   i   =   \u2211   i = 1   N     P   i   (  I +    1   2        \u03c8   h   \u2212   \u03c8   i     ^    ) (   R   i   +   u   i   ) ,      (35)  \u0394   \u03d1   h   =   \u2211   i = 1   N     P   i   (  I +    1   2        \u03c8   h   \u2212   \u03c8   i     ^    ) \u0394   \u03d1   i   ,   where   R   i   is the vector of initial nodal positions and   u   i   is the vector of nodal displacements. Since   r   h   =   R   h   +   u   h   and   R   h   =   \u2211   i = 1   N     P   i     R   i   and because in linear analysis \u0394   \u03d1   i   =   \u03c8   i   and the second-order terms vanish, we further have  (36)    \u2211   i = 1   N     P   i     R   i   +   u   h   =   \u2211   i = 1   N     P   i     R   i   +   \u2211   i = 1   N     P   i     u   i   +    1   2      \u2211   i = 1   N     P   i       \u03c8   ^     h     R   i   \u2212    1   2      \u2211   i = 1   N     P   i       \u03c8   ^     i     R   i   ,      (37)    \u03c8   h   = (  I +    1   2        \u03c8   ^     h    )   \u2211   i = 1   N     P   i     \u03c8   i   ,   i.e.  (38)  (  I \u2212    1   2        \u03c8   ^     h    )   \u03c8   h   =   \u2211   i = 1   N     P   i     \u03c8   i   \u21d2   \u03c8   h   =   \u2211   i = 1   N     P   i     \u03c8   i     and  (39)    u   h   =   \u2211   i = 1   N     P   i     u   i   +    1   2        \u03c8   ^     h     \u2211   i = 1   N     P   i     R   i   \u2212    1   2      \u2211   i = 1   N     P   i       \u03c8   ^     i     R   i   =   \u2211   i = 1   N     P   i   (    u   i   +    1   2        R   i   \u2212   R   h     ^     \u03c8   i    ) .      In [13] it has been shown that in linear analysis the exact result follows from the interpolation  (40)    \u03c8   h   =   \u2211   i = 1   N     P   i     \u03c8   i   ,      (41)    u   h   =   \u2211   i = 1   N     P   i   (    u   i   +    1   N        R   i   \u2212   R   h     ^     \u03c8   i    ) ,   which coincides with the result in (38) and (39) only for two-noded element where N = 2 . In other words, an attempt to generalise the helicoidal interpolation from (20) and (21) to higher-order elements by using the generalised interpolation from (10) would fail to provide the exact linear result. Remark In [13] it has been shown that (41) may be written as     u   h   =   \u2211   i = 1   N     P   i     u   i   \u2212    L   N      \u220f   j = 1   N     N   j     \u2211   p = 1   N     ( \u2212 1 )   p \u2212 1   (     N \u2212 1     p \u2212 1     )   G   1   \u00d7   \u03c8   p   ,   where   N   1   =   x   1   / L ,   N   j   = 1 \u2212 ( ( N \u2212 1 ) / ( j \u2212 1 ) )   x   1   / L for j = 2 , \u2026 , N , and   G   1   is the material unit vector along the beam axis. The meaning of the interpolation functions multiplying the nodal parameters   u   i   and   \u2211   p = 1   N     ( \u2212 1 )   p \u2212 1   (   N \u2212 1   p \u2212 1   )   G   1   \u00d7   \u03c8   p   is shown in Fig. 1 .  Alternatively, a \u2018Hermitean-like\u2019 linked interpolation for a Timoshenko beam in 3D may be derived [14], which by-passes the need for the internal nodes, but requires additional problem-dependent terms which depend on the applied loading in order to provide the exact field distribution. In the presently considered non-linear environment, however, the internal nodes shown in Fig. 1 have the potential to offer additional accuracy even for the point loading.  In order to generalise the formulation from (20) and (21) to higher-order elements, the generalised interpolation from (10) may still be used if accordingly modified. In particular, to achieve the desired interpolation for   u   h   in (41), we have to have a generalised interpolation which will result in the linearised form equal to   P   i   ( I + ( 1 / N )     \u03c8   h   \u2212   \u03c8   i     ^   ) , rather than the result obtained in (33). This is possible if the generalised interpolation in (16) is modified into  (42)    J   i   =   \u2211   j = 1   N     \u2211   k = 1   N     \u0394   k   ij     \u039b   I   {    \u03b4   Ik   [  I \u2212 H ( \u03b2   \u03a8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   ( \u03b2   \u03a8   m   l   )  ] + H ( \u03b3   \u03a8   lh   )   P   k     H   \u2212 1   ( \u03b3   \u03a8   j   l   )  }   \u039b   I   T   ,   with \u03b2 = 1 and \u03b3 = 2 / N and used in   r   h   (   x   1   ) =   \u2211   i = 1   N     J   i     r   i   . However, if \u03b2 and \u03b3 (which are introduced to provide the most general form) are considered as free parameters alternative interpolations may be obtained. In particular, for \u03b2 = \u03b3 = 1 we thus recover the original interpolation from (16).  As mentioned in Section 2.1, to keep the formulation strain invariant and at the same time make it reduce to the exact form in linear analysis regardless of the number of nodes, it turns out to be necessary to interpolate the rotational changes exactly as in (9), with     I   \u02dc     i   given in (10). It has to be remembered, however, that such duality goes against the logic of the helicoidal interpolation which was motivated by a desire to make the formulation independent of the choice of the beam reference axis, as explained in Section 2.2.  Furthermore, as stated earlier, the strain invariant interpolation is given as \u0394   \u03d1   h   =   \u2211   i = 1   N       I   \u02dc     i   \u0394   \u03d1   i   and   r   h   =   \u2211   i = 1   N     P   i     r   i   , not   r   h   =   \u2211   i = 1   N       I   \u02dc     i     r   i   , or in this case the modified interpolation   r   h   =   \u2211   i = 1   N     J   i     r   i   . In other words, the latter interpolation is acceptable only if we can prove that it also gives a strain-invariant solution.  To check this, we recall from [7] that a strain invariant interpolation   r   h   must satisfy  (43)      r   \u0332     h   =   \u039b   R   (   r   R   +   r   h   ) ,   where   \u039b   R   and   r   R   are arbitrary constant rotation and translation, respectively, and     r   \u0332     h   is the interpolated position of a configuration rotated by   \u039b   R   and displaced by   r   R   , such that  (44)      \u039b   \u0332     i   =   \u039b   R     \u039b   i   ,      (45)      r   \u0332     i   =   \u039b   R   (   r   R   +   r   i   ) .      For the interpolation given in (42) we thus have to check if  (46)    \u2211   i = 1   N       J   \u0332     i       r   \u0332     i   =   \u039b   R   (    r   R   +   \u2211   i = 1   N     J   i     r   i    ) .      Since   \u03a8   l   in   J   i   in (42) is a local rotation, which is by definition not affected by any constant rotation, it follows that     J   \u0332     i   =   J   i   (   \u039b   R   \u039b ) =   \u039b   R     J   i     \u039b   R   T   and we are left to check if  (47)    \u2211   i = 1   N     \u039b   R     J   i     \u039b   R   T     \u039b   R   (    r   R   +   r   i    ) =   \u039b   R   (    r   R   +   \u2211   i = 1   N     J   i     r   i    ) ,   which is equivalent to checking if     \u2211   i = 1   N     J   i     r   R   =   r   R   .   Since   r   R   belongs to the null-space of   \u2211   i = 1   N     J   i   \u2212 I , its rank is zero and the matrix vanishes. In other words the generalised interpolation functions must be complete, i.e.   \u2211   i = 1   N     J   i   = I .  The condition for a strain-invariant solution is therefore (note that   \u03c8   l   =   \u039b   I     \u03a8   l   )     \u2211   i = 1   N     J   i   =   \u2211   i = 1   N   {    \u03b4   Ii   [  I \u2212 H ( \u03b2   \u03c8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   ( \u03b2   \u03c8   m   l   )  ] + H ( \u03b3   \u03c8   lh   )   P   i     H   \u2212 1   ( \u03b3   \u03c8   i   l   )  } = I ,   i.e.   I \u2212 H ( \u03b2   \u03c8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   ( \u03b2   \u03c8   m   l   ) + H ( \u03b3   \u03c8   lh   )   \u2211   i = 1   N     P   i     H   \u2212 1   ( \u03b3   \u03c8   i   l   ) = I ,   leading to H ( \u03b2   \u03c8   lh   )   \u2211   i = 1   N     P   i     H   \u2212 1   ( \u03b2   \u03c8   i   l   ) = H ( \u03b3   \u03c8   lh   )   \u2211   i = 1   N     P   i     H   \u2212 1   ( \u03b3   \u03c8   i   l   ) .  The strain-invariance condition therefore is satisfied if \u03b2 = \u03b3 although other solutions may also exist. The resulting interpolation obtained in this way, therefore, has only one free parameter \u03b2 and can be written in the form:  (48)    J   i   =   \u03b4   Ii   [  I \u2212 H ( \u03b2   \u03c8   lh   )   \u2211   m = 1   N     P   m     H   \u2212 1   ( \u03b2   \u03c8   m   l   )  ] + H ( \u03b2   \u03c8   lh   )   P   i     H   \u2212 1   ( \u03b2   \u03c8   i   l   ) .      In conclusion, the helicoidal interpolation may be generalised to higher-order elements in the following two ways:  (1)   \u03b2 = 1 , which provides a same interpolation for the position vector and the rotation matrix and thus gives a solution which is independent of the position of the beam reference axis (see also Section 2.6); this solution, however, does not represent the exact field distribution in the linear limit;    \u03b2 = 2 / N , which provides the exact field distribution in the linear limit, but fails to provide the solution which is independent of the position of the beam reference axis.  It is obvious from the above presentation that one of the principal motivations for the development of the generalised interpolation (48) lies in the analysis of the conditions for objectivity of the numerical solution [7], which is a problem that exists only in 3D and is solved by introducing the generalised interpolation (9). However, since we here study the implications of applying this result to the interpolation of translations, it makes sense to limit our attention only to 2D, where the complexities of implementation of the kinematics of 3D rotations vanish.  In 2D these results simplify considerably since all the rotations are coaxial. Owing to the structure of matrices H and   H   \u2212 1   , which contain the skew-symmetric matrices of rotational components, it turns out simply that  (49)  \u0394   \u03d1   h   =   \u2211   i = 1   N       I   \u02dc     i   \u0394   \u03d1   i   =   \u2211   i = 1   N     P   i   \u0394   \u03d1   i   ,   which means that the total rotations in 2D (let us denote them as \u03c6 rather than \u03d1 ) are interpolated simply as \u03c6 \u2248   \u03c6   h   =   \u2211   i = 1   N     P   i     \u03c6   i   .  After the node I has been chosen, the rigid rotation from   \u039b   r   in (4) is simply  (50)    \u03c6   r   =   \u03c6   I     and the local nodal rotations are obtained as  (51)    \u03c6   i   l   =   \u03c6   i   \u2212   \u03c6   I   ,   while the interpolated local rotations are  (52)    \u03c6   lh   =   \u03c6   h   \u2212   \u03c6   I   =   \u2211   i = 1   N     P   i     \u03c6   i   \u2212   \u2211   i = 1   N     P   i     \u03c6   I   =   \u2211   i = 1   N     P   i     \u03c6   i   l   .      Since all the rotations are planar, note that   \u03c8   l   and   \u03a8   l   in   J   i   are the same, and in 2D we have denoted them as   \u03c6   l   .  Since all the rotations are coaxial (   \u03c6   h   =   \u03c6   h     e   3   ,   \u03c6   i   =   \u03c6   i     e   3   ,   \u03c6   I   =   \u03c6   I     e   3   ,   \u03c6   lh   =   \u03c6   lh     e   3   ,   \u03c6   i   l   =   \u03c6   i   l     e   3   , where   e   3   is a unit vector orthogonal to the plane of the problem), the products of matrices H ( \u03b2   \u03c6   lh   ) and   H   \u2212 1   ( \u03b2   \u03c6   m   l   ) in   J   i   in (48) simplify.  Denoting     e   3   = {     0     0     1     } \u27fa     e   ^     3   = [     0   \u2212 1   0     1   0   0     0   0   0     ] ,   these matrices become  (53)  H ( \u03b2   \u03c6   lh   ) = I +    1 \u2212 cos  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh          e   ^     3   +    \u03b2   \u03c6   lh   \u2212 sin  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh        (     e   ^     3   )   2   ,      (54)    H   \u2212 1   ( \u03b2   \u03c6   m   l   ) = I \u2212    \u03b2   \u03c6   m   l     2        e   ^     3   \u2212    1   2       \u03b2   \u03c6   m   l    sin  \u03b2   \u03c6   m   l   + 2  cos  \u03b2   \u03c6   m   l   \u2212 2   1 \u2212 cos  \u03b2   \u03c6   m   l        (     e   ^     3   )   2     and noting that   J   i   only ever multiplies the position vector, which only has the first two components different from zero, we may introduce   e   ^   = [   0   1     \u2212 1   0   ] , where   (   e   ^   )   2   = \u2212 I . Finally in 2D, matrices H ( \u03b2   \u03c6   lh   ) and   H   \u2212 1   ( \u03b2   \u03c6   m   l   ) can be written as  (55)  H ( \u03b2   \u03c6   lh   ) =    sin  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh      I +    1 \u2212 cos  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh        e   ^   ,      (56)    H   \u2212 1   ( \u03b2   \u03c6   m   l   ) =    \u03b2   \u03c6   m   l     2       sin  \u03b2   \u03c6   m   l     1 \u2212 cos  \u03b2   \u03c6   m   l      I \u2212    \u03b2   \u03c6   m   l     2      e   ^   .      Let us analyse the product H ( \u03b2   \u03c6   lh   )   H   \u2212 1   ( \u03b2   \u03c6   m   l   ) in expression (48). From (55) and (56) it follows  (57)  H ( \u03b2   \u03c6   lh   )   H   \u2212 1   ( \u03b2   \u03c6   m   l   ) =    \u03b2   \u03c6   m   l     2    (     sin  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh      I +    1 \u2212 cos  \u03b2   \u03c6   lh     \u03b2   \u03c6   lh        e   ^    ) (     sin  \u03b2   \u03c6   m   l     1 \u2212 cos  \u03b2   \u03c6   m   l      I \u2212   e   ^    ) .      Using the double angle trigonometric transformations, and the relations   \u03c6   lh   =   \u03c6   h   \u2212   \u03c6   I   and   \u03c6   m   l   =   \u03c6   m   \u2212   \u03c6   I   , we finally have the following result expressed in terms of the actual rotational unknowns   \u03c6   1   , \u2026 ,   \u03c6   N   :  (58)  H ( \u03b2   \u03c6   lh   )   H   \u2212 1   ( \u03b2   \u03c6   m   l   ) =       sin     \u03b2   \u03c6   lh     2         \u03b2   \u03c6   lh     2            sin     \u03b2   \u03c6   m   l     2         \u03b2   \u03c6   m   l     2          [  cos (  \u03b2      \u03c6   h   \u2212   \u03c6   m     2     ) I + sin (  \u03b2      \u03c6   h   \u2212   \u03c6   m     2     )   e   ^    ] .      Taking the above result and substituting it into (48), gives  (59)    J   i   =   \u03b4   Ii   (  I \u2212   \u2211   m = 1   N     N   m    ) +   N   i   ,   with  (60)    N   i   =   P   i         sin (  \u03b2      \u03c6   h   \u2212   \u03c6   I     2     )   \u03b2      \u03c6   h   \u2212   \u03c6   I     2            sin (  \u03b2      \u03c6   i   \u2212   \u03c6   I     2     )   \u03b2      \u03c6   i   \u2212   \u03c6   I     2          [  cos (  \u03b2      \u03c6   h   \u2212   \u03c6   i     2     ) I + sin (  \u03b2      \u03c6   h   \u2212   \u03c6   i     2     )   e   ^    ] .      Introducing substitutions   \u03c8   h   = \u03b2 (   \u03c6   h   \u2212   \u03c6   I   ) / 2 and   \u03c8   i   = \u03b2 (   \u03c6   i   \u2212   \u03c6   I   ) / 2 this may be further compacted to  (61)    N   i   =   P   i         sin    \u03c8   h       \u03c8   h           sin    \u03c8   i       \u03c8   i         [ cos (   \u03c8   h   \u2212   \u03c8   i   ) I + sin (   \u03c8   h   \u2212   \u03c8   i   )   e   ^   ] ,   where the result in the brackets is the 2D orthogonal tensor of rotation   \u03c8   h   \u2212   \u03c8   i   .  Note that the above result is well defined in the limit when   \u03c6   i   \u2192   \u03c6   I   \u27fa   \u03c8   i   \u2192 0 :     lim     \u03c8   i   \u2192 0     N   i   =   P   i      sin    \u03c8   h       \u03c8   h      ( cos    \u03c8   h   I + sin    \u03c8   h     e   ^   ) .      If   \u03c8   h   \u2192 0 , too,   N   i   obviously reduces to the Lagrangian interpolation.  Here we derive the conditions under which the solution of the beam problem does not depend on the chosen reference axis. Two different reference axes will be considered, denoted as   p   0   and   p   c   in Fig. 2 .  The position vector in the undeformed state R can be defined with respect to both reference lines as  (62)  R ( x ) =   R   0   (   x   1   ) +   \u039b   0     Y   0   (   x   2   ,   x   3   ) =   R   c   (   x   1   ) +   \u039b   0     Y   c   (   x   2   ,   x   3   ) ,   where   R   0   is the position vector of the point on the reference line   p   0   in a cross-section,   R   c   is the position vector of the point on the reference line   p   c   in the cross-section considered, E is the position vector of the point on reference line   p   c   with respect to the point on   p   0   ,   \u039b   0   is the initial rotation matrix defining orientation of the cross-section,   Y   0   is the position vector of the observed point in the cross-section with respect to the point on   p   0   , and   Y   c   is the position vector of the observed point with respect to the point on   p   c   .  From (62) there follows  (63)    Y   0   \u2212   Y   c   =   \u039b   0   T   (   R   c   \u2212   R   0   ) .      Further, the position vector in the deformed state can also be written with respect to both these axes as follows:  (64)  r ( x ) =   r   0   (   x   1   ) + \u039b   Y   0   (   x   2   ,   x   3   ) =   r   c   (   x   1   ) + \u039b   Y   c   (   x   2   ,   x   3   ) .      Let us now assume an orientation-dependent interpolation     C   \u02dc     i   (   \u039b   h   (   x   1   ) ,   x   1   ) for the position of a chosen reference line, i.e.  (65)    r   0   (   x   1   ) =   \u2211   i = 1   N       C   \u02dc     i     r   0 , i        (66)    r   c   (   x   1   ) =   \u2211   i = 1   N       C   \u02dc     i     r   c , i   .      Using (65) and (66), (64) can be written as     \u2211   i = 1   N       C   \u02dc     i   (   x   1   )   r   0 , i   + \u039b (   x   1   )   Y   0   (   x   2   ,   x   3   ) =   \u2211   i = 1   N       C   \u02dc     i   (   x   1   )   r   c , i   + \u039b (   x   1   )   Y   c   (   x   2   ,   x   3   )      Since   r   0 , i   =   r   c , i   \u2212   \u039b   i   E and   Y   0   = E +   Y   c   , the above expression reduces to  (67)  (  \u039b \u2212   \u2211   i = 1   N       C   \u02dc     i     \u039b   i    ) E = 0 .      This expression has to be satisfied for any E , therefore  (68)  \u039b =   \u2211   i = 1   N       C   \u02dc     i     \u039b   i   .      This is the condition that has to be satisfied if a solution is to be independent of the choice of the beam reference axis. In other words, such a solution is possible only if the same interpolation functions are used to interpolate both the position vector field and the rotation tensor field.  The configuration-dependent interpolation derived will be now illustrated and compared to the Lagrangian interpolation polynomials for a two-noded and a three-noded element.  If a reference node I is chosen to be the left node of a two-noded element ( I = 1 ), interpolation matrices   J   1   and   J   2   are obtained from (59) as     J   1   = I \u2212   N   2    and    J   2   =   N   2   ,   where   N   2   is calculated from (61) for   \u03c8   1   = 0 ,   \u03c8   h   =   P   2     \u03c8   2   ,   P   1   = 1 \u2212   x   1   / L and   P   2   =   x   1   / L and various values of   \u03c8   2   = ( \u03b2 / 2 ) (   \u03c6   2   \u2212   \u03c6   1   ) . The matrix function   N   2   is for a planar problem a two-dimensional tensor with its components given in Fig. 3 as functions of x 1. Different line-types are used to illustrate these functions for different values of   \u03c8   2   ( 0 , \u03c0 / 3  and  \u03c0 / 2 ). As expected, for   \u03c8   2   = 0 ,   J   1   and   J   2   coincide with the Lagrangian polynomials P 1 and P 2. As   \u03c8   2   increases the diagonal terms in   N   2   increasingly deviate from   P   2   =   x   1   / L , while the off-diagonal terms also grow from the initial zero value.  In this case the reference node is chosen to be the middle node of the element ( I = 2 ). The configuration-dependent interpolation   J   1   ,   J   2    and    J   3   follow from (59) as     J   1   =   N   1   ,    J   2   = I \u2212   N   1   \u2212   N   3    and    J   3   =   N   3   ,   where matrices   N   1   and   N   3   are calculated from (61). To simplify the calculation, the local rotations of the first and the last node are taken to be equal in magnitude and of an opposite sign. The components of   J   1   ,   J   2   and   J   3   are shown in Figs. 4\u20136   for three different values of   \u03c8   1   = \u2212   \u03c8   3   ( 0 , \u03c0 / 6 , \u03c0 / 4 ) . Again, it can be observed that, for a zero local rotation, the proposed interpolation functions coincide with the Lagrangian polynomials  x  1   2   = 1 \u2212 3   x   1   / L + 2   x   2   /   L   2   ,  x  1   2   = 4   x   1   / L \u2212 4   x   2   /   L   2   and  x  1   2   = \u2212   x   1   / L + 2   x   2   /   L   2   . Obviously, the departure of the proposed interpolation from the Lagrangian interpolation is in this element far smaller than in the two-node element.  A straight beam (Fig. 7 ) of a length L and a uniform cross-sectional area A is considered.  The beam axis is taken to be a straight line which coincides with the   x   1   -axis of the Cartesian frame with the orthonormal unit base vectors   g   1 , 0   ,   g   2 , 0   ,   g   3 , 0   . The orthonormal triad   e   1   ,   e   2   ,   e   3   defines spatial frame. These two frames are connected with the initial rotational matrix   \u039b   0   which depends only on the angle of inclination of the beam in the undeformed state. Equation that defines connection between these two frames is given by     g   i , 0   =   \u039b   0     e   i   ,  i = 1 , 2 , 3 .   A similar connection can be defined for the orientation of the cross-section in the deformed configuration as     g   i   = \u039b   e   i   ,  i = 1 , 2 , 3 ,   where   g   i   is the orthonormal triad that defines the cross-section in the deformed configuration and \u039b is the rotation matrix in the deformed state. The first member of this triad   g   1   is perpendicular to the plane of the cross-section while the other two members   g   2   ,   g   3   are situated within the plane of the cross-section, along the principal axes of the cross-section.  The position vector x of an arbitrary point of the deformed beam is defined by three parameters (   x   1   ,   x   2   ,   x   3   ) where the first one is the coordinate of the length along the axis of the beam and the other two are the coordinates of the cross-section for the given   x   1   . This can be written by an equation  (69)  x = r + \u039b {     0       x   2         x   3       } ,   where r is the position vector of the point on the deformed axis of the beam and   \u3008 0    x   2      x   3   \u3009   T   is the material position of the considered point with respect to the intersection of the reference line with the cross-section. In this way the kinematics of the beam is completely defined by a position vector on the axis of the beam and the orientation of the cross section ( r , \u039b ). Further, the position vector r (   x   1   ) can be expressed in terms of the displacement vector u (   x   1   ) and the position vector of the point on the axis of the beam in the undeformed state R (   x   1   ) as r (   x   1   ) = R (   x   1   ) + u (   x   1   ) .  Strain measures of the Reissner\u2013Simo beam theory are given in [1] as  (70)  \u0393 =   \u039b   T   r \u2032 \u2212   E   1   ,   \u03ba   ^   =   \u039b   T   \u039b \u2032 ,   where \u0393 is a vector of translational strain measures made up of one axial ( \u03b5 ) and two shear strains (   \u03b3   2   ,   \u03b3   3   ). Matrix of rotational strain measures is represented with a symbol   \u03ba   ^   and it consists of one torsional (   \u03ba   1   ) and two bending strains (   \u03ba   2   ,   \u03ba   3   ). Here and throughout the text a dash (\u2019) denotes the derivative d /   dx   1   and the material vector   E   1   = {    1     0     0    } .  The constitutive law for a linear elastic material is given by     F   N   =   C   N   \u0393 ,    F   M   =   C   M   \u03ba ,   where, for the beam reference axis coinciding with the centroidal axis,   C   N   = diag ( EA ,   GA   2   ,   GA   3   ) and   C   M   = diag (   GI   t   ,   EI   2   ,   EI   3   ) are constant constitutive matrices of a linear elastic material. Here, E and G denote Young's and shear modulus of the material, A is the cross-sectional area,   A   2   and   A   3   are the shear areas of the cross section,   I   t   is the torsional constant and   I   2   and   I   3   are the second moments of area of the cross section.  To apply the interpolation derived in the previous section, we consider the Reissner\u2013Simo beam [2] with the strain energy  (71)  \u03d5 =    1   2      \u222b   0   L   \u3008   \u0393   T     \u03ba   T   \u3009 {       F   N         F   M       }    dx   1     and the potential of the applied loading  (72)  U =   \u222b   0   L   \u3008   u   T     \u03d1   T   \u3009 {       n   \u00af         m   \u00af       }    dx   1   + \u3008   u   0   T     \u03d1   0   T   \u3009 {         F   \u00af     N 0           F   \u00af     M 0       } + \u3008   u   L   T     \u03d1   L   T   \u3009 {         F   \u00af     NL           F   \u00af     ML       } ,   where   n   \u00af   ,   m   \u00af   are the distributed force and moment loading, and     F   \u00af     N 0   ,     F   \u00af     M 0   ,     F   \u00af     NL   ,     F   \u00af     ML   are the endpoint concentrated force and moment loadings. Here,   u   0   ,   u   L   denote endpoint displacement vectors, while   \u03d1   0   ,   \u03d1   L   denote endpoint rotation vectors. Note that the potential in (72) makes sense only for conservative loading and in 3D the applied moments are very often non-conservative.  For conservative loading, the equilibrium follows from the requirement that the variation of the total potential energy should be zero:  (73)  \u03b4 ( \u03d5 \u2212 U ) = 0 \u27fa   \u222b   0   L   \u3008 \u03b4   \u0393   T   \u03b4   \u03ba   T   \u3009 {       F   N         F   M       }    dx   1   \u2212 \u03b4 U = 0 ,   with  (74)  \u03b4 U =   \u222b   0   L   \u3008 \u03b4   r   T   \u03b4   \u03d1   T   \u3009 {       n   \u00af         m   \u00af       }    dx   1   + \u3008 \u03b4   r   0   T   \u03b4   \u03d1   0   T   \u3009 {         F   \u00af     N 0           F   \u00af     M 0       } + \u3008 \u03b4   r   L   T   \u03b4   \u03d1   L   T   \u3009 {         F   \u00af     NL           F   \u00af     ML       } .      Strain measures of a 2D problem contain only one shear strain   \u03b3   2   = \u03b3 and one bending strain   \u03ba   3   = \u03ba , hence the strain measures given in (70) can be simplified and written in an expanded form as  (75)  {     \u03b5     \u03b3     \u03ba     } = [     cos (   \u03c6   0   + \u03c6 )   sin (   \u03c6   0   + \u03c6 )   0     \u2212 sin (   \u03c6   0   + \u03c6 )   cos (   \u03c6   0   + \u03c6 )   0     0   0   1     ] {     cos    \u03c6   0   + u \u2032     sin    \u03c6   0   + v \u2032     \u03c6 \u2032     } \u2212 {     1     0     0     } ,   where   \u03c6   0   is the initial slope of the beam in the undeformed state.  The variation of the strain energy is  (76)  \u03b4 \u03d5 \u2248 \u03b4   \u03d5   h   =   \u222b   0   L   \u3008 \u03b4   r   T   \u03b4 \u03c6 \u3009 [       I   2      d     dx   1          0   2         r   \u2032 T     e   ^        d     dx   1          ] [     \u039b     0   2         0   2   T     1     ] {       F   N         F   M       }    dx   1   ,   with   0   2   as the two-dimensional null-vector. After application of interpolation of \u03b4 r and \u03b4 \u03c6 , the above becomes   \u03b4 \u03d5 = \u03b4   p   T     q   i   = \u3008 \u03b4   p   1   T   \u22ef \u03b4   p   N   T   \u3009 {       q   i , 1       \u22ee       q   i , N       } =   \u2211   j = 1   N   \u03b4   p   j   T     q   i , j   ,   where   \u03b4   p   j   = {     \u03b4   r   j       \u03b4   \u03c6   j       } .      To find the internal force vector at a node j,   q   i , j   , our interpolation will be introduced  (77)  r \u2248   r   h   =   \u2211   i = 1   N     J   i     r   i   ,      (78)  \u03c6 \u2248   \u03c6   h   =   \u2211   i = 1   N     P   i     \u03c6   i   ,   with   J   i   given in (59). Obviously,   \u03b4 \u03c6 \u2248 \u03b4   \u03c6   h   =   \u2211   i = 1   N     P   i   \u03b4   \u03c6   i   ,   while   \u03b4 r \u2248 \u03b4   r   h   =   \u2211   i = 1   N   ( \u03b4   J   i     r   i   +   J   i   \u03b4   r   i   ) =   \u2211   i = 1   N     J   i   \u03b4   r   i   +   \u2211   i = 1   N   \u03b4   J   i     r   i   .      In order to write the complete variation of   J   i   given by (59), variation of the function   N   i   will be needed.  Variation of the function   N   i   is  (79)  \u03b4   N   i   =    \u03b2   2      N   i     \u2211   k = 1   N     M   ik   \u03b4   \u03c6   k   ,   where (see Appendix A for the derivation)  (80)    M   ik   =   P   k   ( \u2212   f   h   I +   e   ^   ) + (   f   i   I \u2212   e   ^   )   \u03b4   ik   \u2212   \u03b4   Ik   (   f   i   \u2212   f   h   ) I ,   with     f   i   =    1     \u03c8   i      \u2212    cos    \u03c8   i     sin    \u03c8   i       and    f   h   =    1     \u03c8   h      \u2212    cos    \u03c8   h     sin    \u03c8   h      .      Variation of the interpolation function   J   i   is  (81)  \u03b4   J   i   =   \u2211   k = 1   N     Q   ik   \u03b4   \u03c6   k   ,   where  (82)    Q   ik   =    \u03b2   2    (    N   i     M   ik   \u2212   \u03b4   Ii     \u2211   m = 1   N     N   m     M   mk    ) .   Further   \u03b4   J   i     r   i   =   \u2211   k = 1   N     Q   ik     r   i   \u03b4   \u03c6   k   = [    Q   i 1     r   i      Q   i 2     r   i    \u22ef    Q   iN     r   i    ] {     \u03b4   \u03c6   1       \u03b4   \u03c6   2       \u22ee     \u03b4   \u03c6   N       }   and  (83)  \u03b4 r \u2248 \u03b4   r   h   =   \u2211   i = 1   N   (   J   i   \u03b4   r   i   + \u03b4   J   i     r   i   ) = [ [   J   1     j   1   ]  \u22ef  [   J   N     j   N   ] ] {     {     \u03b4   r   1       \u03b4   \u03c6   1       }     \u22ee     {     \u03b4   r   N       \u03b4   \u03c6   N       }     } ,   where  (84)    j   k   =   \u2211   i = 1   N     Q   ik     r   i   =    \u03b2   2      \u2211   i = 1   N     N   i     M   ik   (   r   i   \u2212   r   I   ) .      Note that, in linear analysis, (83) reads   \u03b4   r   h   =   \u2211   i = 1   N     P   i   [  \u03b4   r   i   +    \u03b2   2      e   ^   (   R   h   \u2212   R   i   ) \u03b4   \u03c6   i    ] ,   which for \u03b2 = 2 / N coincides with the variation of (41) thus confirming that the linked interpolation is a limiting case of the configuration-dependent interpolation with \u03b2 = 2 / N in linear analysis.  Let us introduce the following notation:  (85)  {     \u03b4 r     \u03b4 \u03c6     } =   \u2211   j = 1   N     K   j   \u03b4   p   j   ,   where  (86)  \u03b4   p   j   = {     \u03b4   r   j       \u03b4   \u03c6   j       }   and  (87)    K   j   = [       J   j       j   j         0   2   T       I   j       ] ,   as well as the matrices of Reissner's beam theory [15]   (88)  D = [       I   2      d     dx   1        \u2212   e   ^   r \u2032       0   2   T        d     dx   1          ] ,  L = [     \u039b     0   2         0   2   T     1     ] ,  S = {       F   N         F   M       } ,   where   0   2   is a two-dimensional null vector and   I   2   is a two-dimensional unity matrix. With this notation, the strain-energy variation may be expressed as  (89)  \u03b4 \u03d5 \u2248 \u03b4   \u03d5   h   =   \u2211   j = 1   N   \u03b4   p   j   T     \u222b   0   L     (   DK   j   )   T   LS    dx   1   =   \u2211   j = 1   N   \u03b4   p   j   T     q   i , j   .      The vector of the internal forces   q   i , j   at node j is given as  (90)    q   i , j   =   \u222b   0   L     B   j   T   LS    dx   1   ,   with  (91)    B   j   =   DK   j   = [       J   j   \u2032       \u2211   i = 1   N     Q   ij   \u2032     r   i   \u2212   e   ^     P   j   r \u2032       0   2   T       P   j   \u2032       ] = [       J   j   \u2032       j   j   \u2032   \u2212   e   ^     P   j   r \u2032       0   2   T       P   j   \u2032       ] ,      (92)    J   j   \u2032   =   N   j   \u2032   \u2212   \u03b4   Ij     \u2211   m = 1   N     N   m   \u2032   ,      (93)    N   j   \u2032   =   N   j   [  (       P   j   \u2032       P   j      \u2212   f   h     \u03c8   h \u2032    ) I +   \u03c8   h \u2032     e   ^    ] ,      (94)    \u03c8   h \u2032   =    \u03b2   2      \u2211   p = 1   N     P   p   \u2032     \u03c6   p   ,      (95)    Q   ij   \u2032   =    \u03b2   2    [    N   i   \u2032     M   ij   +   N   i     M   ij   \u2032   \u2212   \u03b4   Ii     \u2211   m = 1   N   (   N   m   \u2032     M   mj   +   N   m     M   mj   \u2032   )  ] ,      (96)    M   ij   \u2032   =   P   j   \u2032   ( \u2212   f   h   I +   e   ^   ) + (   \u03b4   Ij   \u2212   P   j   )   f   h \u2032   I ,      (97)    f   h \u2032   = \u2212 (     1     (   \u03c8   h   )   2      \u2212    1     sin   2      \u03c8   h       )   \u03c8   h \u2032   = \u2212     g   \u02dc     h     \u03c8   h \u2032   ,      (98)      g   \u02dc     h   =    1     (   \u03c8   h   )   2      \u2212    1     sin   2      \u03c8   h      ,      (99)  r \u2032 =   \u2211   j = 1   N     J   j   \u2032     r   j   ,      (100)    j   j   \u2032   =   \u2211   i = 1   N     P   ij   \u2032     r   i   .      The nodal equilibrium  (101)    g   j   \u2261   q   i , j   \u2212   q   e , j   = 0   is to be established iteratively via  (102)    \u2211   k = 1   N     K   jk   \u0394   p   k   = \u2212   g   j   ,   where   q   i , j   is the vector of the internal forces at node j,   q   e , j   is the vector of the external forces at node j and   K   jk   is the stiffness matrix relating the change in   p   k   to the change of   q   i , j   .  In order to obtain the stiffness matrix of the finite element, it is necessary to carry out the linearisation of the vector of the internal forces   q   i , j   given by (90).  Linearisation of the vector of the internal forces can be performed as follows:  (103)  \u0394   q   i , j   =   \u222b   0   L   ( \u0394   B   j   T   LS +   B   j   T   \u0394 LS +   B   j   T   L \u0394 S )    dx   1   .   Denoting \u0394   B   j   as \u0394   B   j   = \u0394   B   1 j   + \u0394   B   2 j   with  (104)  \u0394   B   1 j   = [     \u0394   J   j   \u2032     \u0394   j   j   \u2032         0   2   T     0     ] ,      (105)  \u0394   B   2 j   = [     0   \u2212   e   ^     I   j   \u0394 r \u2032       0   2   T     0     ] ,   we may separate the geometric from the configuration-dependent influences in   B   j   , i.e.  (106)  \u0394   q   i , j   =   \u222b   0   L   \u0394   B   1 j   T   LS    dx   1   +   \u222b   0   L   \u0394   B   2 j   T   LS    dx   1   +   \u222b   0   L     B   j   T   \u0394 LS    dx   1   +   \u222b   0   L     B   j   T   L \u0394 S    dx   1   =   \u2211   k = 1   N     K   jk   CD   \u0394   p   k   +   \u2211   k = 1   N     K   jk   G   \u0394   p   k   +   \u2211   k = 1   N     K   jk   M   \u0394   p   k   .      The first term in the above expression leads to the configuration-dependent part, the next two terms lead to the geometric part and the last leads to the material part of the stiffness matrix.   K   jk   M   and   K   jk   G   are the standard material and geometric nodal stiffness matrix blocks where, however, the strain measures are computed from the interpolated position vector r as given in (77).  Since S depends linearly on the strain measures, the last term in \u0394   q   i , j   turns out to be     \u222b   0   L     B   j   T   L \u0394 S    dx   1   =   \u2211   k = 1   N     \u222b   0   L     B   j   T     LCL   T     B   k      dx   1   \u0394   p   k   ,   where C = diag ( EA ,   GA   s   , EI ) is a constitutive matrix for the 2D problem analysed and the material part of the stiffness matrix block is given as  (107)    K   jk   M   =   \u222b   0   L     B   j   T     LCL   T     B   k      dx   1   ,   with   B   j   given in (91).  The geometric part of the stiffness matrix block also follows using the standard procedure (see Appendix B):  (108)    K   jk   G   =   \u222b   0   L     (   D   2     K   j   )   T   G (   D   2     K   k   )    dx   1   ,   where matrices   D   2   and G introduced in [15] are given as  (109)    D   2   = [        d     dx   1        0   0     0      d     dx   1        0     0   0   1     ] ,      (110)  G = [     0   0   \u2212 t     0   0   n     \u2212 t   n   \u2212 t ( v \u2032 + sin    \u03c6   0   ) \u2212 n ( u \u2032 + cos    \u03c6   0   )     ] ,   with spatial stress resultants n , t defined as  (111)  n = {     n     t     } = \u039b [     EA   0     0     GA   s       ] {     \u03b5     \u03b3     } .      The configuration-dependent part of the stiffness matrix block given by the first term in (106) will be derived from (104) .  From (92), \u0394   J   j   \u2032   follows as   \u0394   J   j   \u2032   = \u0394   N   j   \u2032   \u2212   \u03b4   Ij     \u2211   m = 1   N   \u0394   N   m   \u2032 ,       \u0394   N   j   =    \u03b2   2      N   j     \u2211   k = 1   N     M   jk   \u0394   \u03c6   k   ,       \u0394   N   j   \u2032   =    \u03b2   2      \u2211   k = 1   N   (    N   j   \u2032     M   jk   +   N   j     M   jk   \u2032  ) \u0394   \u03c6   k   =    \u03b2   2      N   j     \u2211   k = 1   N     T   jk   \u0394   \u03c6   k   ,         T   jk   = (       P   j   \u2032       P   j      +   \u03c8   h \u2032   ( \u2212   f   h   I +   e   ^   )  )   M   jk   +   M   jk   \u2032 ,      (112)  \u0394   J   j   \u2032   =    \u03b2   2      \u2211   k = 1   N   (    N   j     T   jk   \u2212   \u03b4   Ij     \u2211   m = 1   N     N   m     T   mk    ) \u0394   \u03c6   k   =   \u2211   k = 1   N     Z   jk   \u0394   \u03c6   k   .   Here  (113)    Z   jk   =    \u03b2   2    (    N   j     T   jk   \u2212   \u03b4   Ij     \u2211   m = 1   N     N   m     T   mk    ) =    \u03b2   2    [  (   N   j     M   jk   ) \u2032 \u2212   \u03b4   Ij     \u2211   m = 1   N   (   N   m     M   mk   ) \u2032  ] .      From (95) and (100), \u0394   j   j   \u2032   follows as  (114)  \u0394   j   j   \u2032   =    \u03b2   2      \u2211   p = 1   N   ( \u0394   N   p   \u2032     M   pj   +   N   p   \u2032   \u0394   M   pj   + \u0394   N   p     M   pj   \u2032   +   N   p   \u0394   M   pj   \u2032   ) (   r   p   \u2212   r   I   ) +    \u03b2   2      \u2211   p = 1   N   (   N   p   \u2032     M   pj   +   N   p     M   pj   \u2032   ) ( \u0394   r   p   \u2212 \u0394   r   I   ) ,   with   \u0394   M   pj   =    \u03b2   2      \u2211   k = 1   N     V   jk   p   \u0394   \u03c6   k   ,         V   jk   p   = [  (   P   j   \u2212   \u03b4   Ij   )   g   h   (   P   k   \u2212   \u03b4   Ik   ) \u2212   g   p   (   \u03b4   pj   \u2212   \u03b4   Ij   ) (   \u03b4   pk   \u2212   \u03b4   Ik   )  ] I ,       \u0394   M   pj   \u2032   =    \u03b2   2      \u2211   k = 1   N     V   jk   p \u2032   \u0394   \u03c6   k   ,      (115)    V   jk   p \u2032   = [  (   P   j   \u2032     g   h   +   P   j     g   h \u2032   \u2212   \u03b4   Ij     g   h \u2032   ) (   P   k   \u2212   \u03b4   Ik   ) + (   P   j   \u2212   \u03b4   Ij   )   P   k   \u2032   g   h   )  ] I .   In the upper equation   g   h \u2032   = \u2212 2   \u03c8   h \u2032     h   h   , where   h   h   = 1 /   (   \u03c8   h   )   3   \u2212 cos    \u03c8   h   /   sin   3      \u03c8   h   .  Eq. (114) now turns into  (116)  \u0394   j   j   \u2032   =   \u2211   k = 1   N     f   jk   \u0394   \u03c6   k   +   \u2211   k = 1   N     R   jk   \u0394   r   k     with  (117)    f   jk   =      \u03b2   2     4      \u2211   p = 1   N   [   N   p   (   T   pk     M   pj   +   M   pk     M   pj   \u2032   +   V   jk   p \u2032   ) +   N   p   \u2032     V   jk   p   ] (   r   p   \u2212   r   I   )   and  (118)    R   jk   =    \u03b2   2    [  (   N   k     M   kj   ) \u2032 \u2212   \u03b4   Ik     \u2211   m = 1   N   (   N   m     M   mj   ) \u2032  ] .      Finally, the configuration-dependent part of the stiffness matrix block is given as  (119)    K   jk   CD   =   \u222b   0   L   [       0   2 x 2       Z   jk   T   n       n   T     R   jk     f     ]    dx   1     with f =   f   jk   T   n and n given in (111).  All numerical examples will be calculated using three different interpolations: the Lagrangian interpolation, linked interpolation introduced in [13] and the new configuration-dependent interpolation (CDI) proposed here. To summarise, between themselves, these interpolations differ in as much as they assume different approximation of the position field as follows:      Lagrangian :    r   h   =   \u2211   i = 1   N     P   i     r   i       Linked :    r   h   =   \u2211   i = 1   N     P   i   [   r   i   + ( 1 / N )   e   ^   (   R   h   \u2212   R   i   )   \u03c6   i   ]     CDI :    r   h   =   \u2211   i = 1   N   [   \u03b4   iI   ( I \u2212   \u2211   m = 1   N     N   m   ) +   N   i   ]   r   i   ,      with   R   h   =   \u2211   i = 1   N     P   i     R   i   ,   \u03c6   h   =   \u2211   i = 1   N     P   i     \u03c6   i   and   N   i   given in (61).  In the tables with results the number behind the name of the interpolation is the number of nodes per element. The stiffness matrix and the internal force vector will be calculated using the full integration as well as the reduced integration. The full integration uses N points, where N is the number of nodes per element, while reduced integration uses N \u2212 1 points. Note that the linked interpolation was originally conceived for application in linear analysis. Here, its application will be tested on examples in non-linear analysis.  When configuration-dependent interpolation is employed, examples will be calculated with both \u03b2 = 1 and \u03b2 = 2 / N . In the first case, the interpolation takes the form of the one introduced in [7], but here employed for interpolation of the position vector r , and gives results which are independent of the choice of the beam reference line. When \u03b2 = 2 / N the interpolation function takes the form which provides exact solution in the linear analysis.  This example was solved analytically by Jenkins et al. [16] using elliptic integrals. Mattiasson [17] performed the numerical evaluation of the elliptic integrals thus providing a valuable test for finite element formulations considering large deflections.  The problem is shown in Fig. 8 and has been solved using two elements only, one per each leg. The number of nodes per element is variable and the stiffness matrix and the internal force vector are calculated using both full and reduced integration. The Newton\u2013Raphson iterative solution procedure is considered to have converged when the displacement norm has become less than   10   \u2212 12   . Geometrical and material characteristics are given as follows: length of each leg is L = 1 , Young's modulus E = 1 , the shear modulus G = 10 E , the second moment of area I = 1 and the area of the cross section as well as the shear area is A = 1000 . The reason for such a large shear area lies in the reference solution [17] given for the case of Euler's elastica ( A \u2192 \u221e ,    A   s   \u2192 \u221e ) and the results obtained here can only model these properties approximately. As a result, the extension dominated displacement v does not converge towards the reference solution.  The results are compared to the exact ones given in [17] for the maximum ratio   PL   2   / EI = 10 with n load steps employed, as shown in Table 1 .  Mattiasson [17] gave results for the horizontal displacement of the middle node (node 2 in Fig. 8) and the vertical displacement and rotation of the loaded node (node 3 in Fig. 8). Table 1 shows the reference solution as well as our results. The reference node in the configuration-dependent interpolation has been set to I = 1 for CDI2, I = 2 for CDI3 and CDI4 and I = 3 for CDI5.  From Table 1 it can be seen that the results for Lagrangian and linked interpolation are identical when reduced integration is employed. This induces us to conclude that the value of the functions in integrals which define the stiffness matrix and the internal force vector in these Gaussian points is identical. An interesting property occurs with linear configuration-dependent element (CDI2) which shows no sensitivity to the number of the integration points, meaning that the reduced and the full integration give identical result which is a known result [10]. As expected, the accuracy increases as the number of nodes increases. Also, all elements, except Lagrangian 2 with full integration, show some degree of resistance to shear locking. Locking is also obvious in the Linked 2 element with full integration, but to a smaller extent. CDI elements show very little difference between full and reduced integration. The difference in cases when \u03b2 = 1 and \u03b2 = 2 / N reduces as the number of nodes per element increases.  Problem of buckling of a hinged right-angle frame was considered in [2,18]. The second moment of area, the area and the shear area of the cross section are I = 2 , A = 6 ,   A   s   = A / 1.2 , respectively, and the length of each leg is l = 120 . The value of Young's modulus is E = 7.2 \u00d7   10   6   and Poisson's ratio is 0.3. The frame will be modelled using 10 elements, five per leg, and the number of nodes per element is variable from two to five nodes. The horizontal leg of the frame is loaded with a point force P=15000 at l/5 applied in one load step only. Fig. 9 shows deformation lines for various values of loading force P = 8000 , 15  000 , 17  000 .  The reference solution for this example is obtained using 100 Lagrangian quadratic elements [15], 50 per leg with reduced Gaussian integration employed for evaluation of the stiffness matrix and the internal force vector. The displacements of the loaded node are given in Table 2 . The Newton\u2013Raphson solution procedure tolerance is set to   10   \u2212 12   for the displacement norm.  As expected, reduced integration shows good behaviour in case when Lagrangian and linked interpolation is applied on three-to-five-noded elements, while full integration shows quite poor behaviour for both these interpolations in case when the number of nodes on an element is two or three. Naturally, higher-order elements give better results.  When CDI2 is applied, full and reduced integration give identical results as shown in the previous example. Also, for higher-order elements the difference between these two integrations becomes smaller as the number of nodes increases.  When comparing the CDI results for a higher-order element with different \u03b2 between themselves, let us recall that \u03b2 = 1 gives a solution independent of the position of the beam reference axis, but fails to provide the exact field distribution in linear analysis, while \u03b2 = 2 / N has exactly the opposite properties. It turns out that for highly non-linear problems like the present one, the former option is preferable. For the problems approaching the linear case, say with P = 1000 instead of P = 15  000 , it is expected that the latter option ( \u03b2 = 2 / N ) is more accurate. Table 3 confirms that it really is so and that the results for \u03b2 = 2 / N approach those of the linked interpolation and are less affected by an application of the full integration. Only three-noded element has been reviewed since the higher order elements show less sensitivity to coefficient \u03b2 .  It can be stated that the effect of coefficient \u03b2 is also configuration dependent, meaning that as the calculation is getting closer to linear analysis, the use of \u03b2 = 2 / N is becoming increasingly justified. In contrast to the Lagrangian and linked interpolation, however, configuration-dependent interpolation shows very good behaviour when full integration is used, regardless of the choice of \u03b2 and the order of element.  On the basis of these results, it appears that an improvement in the definition of the configuration-dependent interpolation may be possible through redefinition of the coefficient \u03b2 such that it would be equal to 2 / N in the linear case and tend towards the unity as the deformation overall progresses.  The problem of a deep circular hinged-clamped arch shown in Fig. 10 has been considered by many authors [15,19,20] and the exact solution for the critical force, based on the Kirchhoff\u2013Love theory, is given by DaDeppo and Schmidt [19].  The problem will be approximated using 40 straight beam elements of different order with the following characteristics: the value of Young's modulus E = 1 \u00d7   10   8   , Poisson's ratio \u03bd = 0.5 , the second moment of area and the area of the cross section are respectively I = 0.01 and A = 1 , the radius of the arch is R = 100 and the subtending angle of the arch is \u03b1 = 215 \u00b0 . According to the Kirchhoff\u2013Love theory, the critical force that causes this arch to buckle matches the value of 897 [19]. Approximately 80% of the value of this critical force ( P = 700 ) will be used as a loading force at the apex of the arch and the displacements and rotation of the loaded point will be compared using different interpolation functions with the reference solution obtained using 100 Lagrangian linear elements, with reduced Gaussian integration employed for evaluation of the stiffness matrix and the internal force vector. Results are obtained in two load steps and are given in Table 4 . The Newton\u2013Raphson tolerance has been set to   10   \u2212 12   for the displacement norm.  The conclusions drawn from the previous two examples are confirmed by this example. The three-noded elements with different \u03b2 are now again tested for a smaller value of the force P = 150 . The results are shown in Table 5 .  The full integration with \u03b2 = 2 / N gives better results than when \u03b2 = 1 , while the reduced integration gives almost identical solutions for both coefficients.  In the present work two variants of the higher-order configuration-dependent interpolation have been derived in order to preserve an important underlying property of the mechanical problem:  (1) the configuration-dependent interpolation invariant to the beam reference axis,  the configuration-dependent interpolation providing exact field distribution in the limit of the analysis becoming linear.  These two properties cannot be preserved at the same time unless the element is of the lowest order, i.e. the original helicoidal element of [8]. A potential to do so, however, exists and will be investigated in our future work.  The additional numerical overhead in the configuration-dependent interpolation is fully contained within the element formulation, does not introduce additional degrees of freedom (the elements may only have additional internal nodes), and only requires computation of an additional part of the global element tangent stiffness matrix.  In general, the following conclusions may be drawn:  1. The configuration-dependent interpolation practically does not suffer from shear locking regardless of the order of element and the order of numerical quadrature.  In spite of that the results obtained using a reduced integration are better than those using the full integration.  The linked interpolation is more vulnerable to shear locking when using full integration than the configuration-dependent interpolation, but less vulnerable than the Lagrangian interpolation.  The linked interpolation with reduced integration gives the same nodal results as the Lagrangian interpolation with reduced integration.  Generally, the configuration-dependent interpolation gives only marginally better results for the nodal unknowns than the Lagrangian interpolation.  The variant of the configuration-dependent interpolation which gives the result independent of the position of the beam reference axis is generally more accurate than the variant which provides the exact field-distribution in linear analysis; the situation is reversed as the results become closer to the linear results, in particular with full integration.  As the configuration-dependent interpolation is virtually free of shear locking, it has a potential to be used in various problems in material non-linearity (including local effects) where higher-order quadrature may be needed.   ACKNOWLEDGEMENT   The results shown here were obtained within the scientific project no. 114-0000000-3025: \u201cImproved accuracy in non-linear beam elements with finite 3D rotations\u201d financially supported by the Ministry of Science, Education and Sports of the Republic of Croatia.  Function   N   i   is given by the expression     N   i   =   P   i        \u03c8   i    sin    \u03c8   h       \u03c8   h    sin    \u03c8   i      [  cos (   \u03c8   h   \u2212   \u03c8   i   ) I + sin (   \u03c8   h   \u2212   \u03c8   i   )   e   ^    ] =   P   i   k X ,   where   k =      \u03c8   i    sin    \u03c8   h       \u03c8   h    sin    \u03c8   i        and   X = cos (   \u03c8   h   \u2212   \u03c8   i   ) I + sin (   \u03c8   h   \u2212   \u03c8   i   )   e   ^   .   Now, the variation of function   N   i   is   \u03b4   N   i   =   P   i   \u03b4 k X +   P   i    k  \u03b4 X .      \u2022 Variation of coefficient k:   \u03b4 k = k (     \u03b4   \u03c8   i       \u03c8   i      \u2212    \u03b4   \u03c8   h       \u03c8   h      +    cos    \u03c8   h     sin    \u03c8   h      \u03b4   \u03c8   h   \u2212    cos    \u03c8   i     sin    \u03c8   i      \u03b4   \u03c8   i    )      Variation of matrix X :   \u03b4 X = ( \u03b4   \u03c8   h   \u2212 \u03b4   \u03c8   i   ) [ cos (   \u03c8   h   \u2212   \u03c8   i   )   e   ^   \u2212 sin (   \u03c8   h   \u2212   \u03c8   i   ) I ]      The identity matrix in this expression may be written as I =     e   ^     \u2212 1     e   ^   =     e   ^     T     e   ^   = \u2212     e   ^     2   and now the variation of matrix X can be written as   \u03b4 X = ( \u03b4   \u03c8   h   \u2212 \u03b4   \u03c8   i   ) X   e   ^     Returning these variations into the expression for \u03b4   N   i   gives   \u03b4   N   i   =   P   i   k X (     \u03b4   \u03c8   i       \u03c8   i      \u2212    \u03b4   \u03c8   h       \u03c8   h      +    cos    \u03c8   h     sin    \u03c8   h      \u03b4   \u03c8   h   \u2212    cos    \u03c8   i     sin    \u03c8   i      \u03b4   \u03c8   i    ) +   P   i   k ( \u03b4   \u03c8   h   \u2212 \u03b4   \u03c8   i   ) X   e   ^        In this expression the basic function   N   i   =   P   i    k  X can be recognised and the variation further written as   \u03b4   N   i   =   N   i   [  (     \u03b4   \u03c8   i       \u03c8   i      \u2212    \u03b4   \u03c8   h       \u03c8   h      +    cos    \u03c8   h     sin    \u03c8   h      \u03b4   \u03c8   h   \u2212    cos    \u03c8   i     sin    \u03c8   i      \u03b4   \u03c8   i    ) I + (  \u03b4   \u03c8   h   \u2212 \u03b4   \u03c8   i    )   e   ^    ] .      With \u03b4   \u03c8   i   = ( \u03b2 / 2 ) ( \u03b4   \u03c6   i   \u2212 \u03b4   \u03c6   r   ) , and \u03b4   \u03c8   h   = ( \u03b2 / 2 ) ( \u03b4   \u03c6   h   \u2212 \u03b4   \u03c6   r   ) the variation of \u03b4   N   i   follows as   \u03b4   N   i   =    \u03b2   2      N   i   { [ ( \u03b4   \u03c6   i   \u2212 \u03b4   \u03c6   r   )   f   i   \u2212 ( \u03b4   \u03c6   h   \u2212 \u03b4   \u03c6   r   )   f   h   ] I + ( \u03b4   \u03c6   h   \u2212 \u03b4   \u03c6   i   )   e   ^   } ,   with     f   i   =    1     \u03c8   i      \u2212    cos    \u03c8   i     sin    \u03c8   i       and    f   h   =    1     \u03c8   h      \u2212    cos    \u03c8   h     sin    \u03c8   h      .   Finally,   \u03b4   N   i   =    \u03b2   2      N   i     \u2211   k = 1   N     M   ik   \u03b4   \u03c6   k   ,   with     M   ik   =   P   k   ( \u2212   f   h   I +   e   ^   ) + (   f   i   I \u2212   e   ^   )   \u03b4   ik   \u2212   \u03b4   Ik   (   f   i   \u2212   f   h   ) I .      As stated in (106), the geometric stiffness matrix consists of two parts, i.e.     \u2211   k = 1   N     K   jk   G   {     \u0394   r   k       \u0394   \u03c6   k       } =   \u222b   0   L   \u0394   B   2 j   T   LS    dx   1   +   \u222b   0   L     B   j   T   \u0394 LS    dx   1   =   \u222b   0   L   [       0   2 x 2       0   2         P   j   \u0394   r   \u2032 T     e   ^     0     ] {     \u039b   F   N         F   M       }    dx   1   +   \u222b   0   L   [       J   j   \u2032 T       0   2         j   j   \u2032 T   +   P   j     r   \u2032 T     e   ^       P   j   \u2032       ] {     \u0394 \u039b   F   N       0     }    dx   1   =   \u222b   0   L   {       0   2       \u2212   P   j     F   N   T     \u039b   T     e   ^     \u2211   k = 1   N   (   J   k   \u0394   r   k   +   j   k   \u0394   \u03c6   k   ) \u2032     }    dx   1   +   \u222b   0   L   {       J   j   \u2032 T     e   ^   \u039b   F   N     \u2211   k = 1   N     P   k   \u0394   \u03c6   k       (   j   j   \u2032 T   +   P   j     r   \u2032 T     e   ^   )   e   ^   \u039b   F   N     \u2211   k = 1   N     P   k   \u0394   \u03c6   k       } =   \u2211   k = 1   N     \u222b   0   L   [       0   2 x 2       P   k     J   j   \u2032 T     e   ^   \u039b   F   N       \u2212   P   j     F   N   T     \u039b   T     e   ^     J   k   \u2032       (   P   j     j   k   \u2032   +   P   k     j   j   \u2032   )   T     e   ^   \u039b   F   N   \u2212   P   j     P   k     r   \u2032 T   \u039b   F   N       ]    dx   1   {     \u0394   r   k       \u0394   \u03c6   k       } ,   i.e.     K   jk   G   =   \u222b   0   L   [       0   2 x 2       P   k     J   j   \u2032 T     e   ^   \u039b   F   N       \u2212   P   j     F   N   T     \u039b   T     e   ^     J   k   \u2032       (   P   j     j   k   \u2032   +   P   k     j   j   \u2032   )   T     e   ^   \u039b   F   N   \u2212   P   j     P   k     r   \u2032 T   \u039b   F   N       ]    dx   1   .       REFERENCES", "highlights": "In this paper we discuss interpolation functions for the field variables and their variations in relation to geometrically non-linear planar beam finite elements of Reissner's type within the context of a non-standard, configuration-dependent interpolational setting. We derive the new configuration-dependent interpolation functions as an extension of the helicoidal interpolation to higher-order elements. In linear analysis, the new interpolation coincides with the higher-order linked interpolation, which is known to produce exact results for polynomial loading. The numerical analysis performed on representative examples illustrates the performance of the configuration-dependent interpolation compared to the Lagrangian interpolation."}