{"id": "S0168874X16300270", "article": "MAIN-TITLE A comparative numerical study of different finite element formulations for 2D model elliptic problems: Continuous and discontinuous Galerkin, mixed and hybrid methods   HIGHLIGHTS          Different finite element formulations for Poisson problems are implemented and compared.      The methods are applied to two model problems.      The first problem has smooth solution and the second one presents a square root singularity.      For the problem with a smooth solution, the results confirm convergence orders.      For the singular problem, hp adapted meshes tuned to the singularity are created.          KEYPHRASES   Finite elements  Discontinuous Galerkin          H     (     div     )     spaces  Hybrid method     hp refinements  Quarter-point elements  Elliptic singular problem   Many engineering problems are formulated as boundary value problems for second order elliptic differential equations. Elasticity, diffusion, heat conduction, Darcy\u05f3s flow are examples of phenomena modeled by second order elliptic problems. Its simplest form is the Poisson equation, which possesses the main characteristics of the actual engineering problems while remaining simple in terms of constitutive laws, input data, etc. Thus, the development of new numerical methods often refer to the Poisson problem, which are used for their verification. In this work, different finite element formulations for Poisson problems are implemented and compared, in terms of accuracy versus number of required degrees of freedom.  The finite element method (FEM) approximates the solution of partial differential equations based on the Galerkin method using a systematic way of generating subspaces. Different finite element formulations have been developed to solve second-order elliptic problems. In fact, the expression finite element refers to a broad family of methods such as continuous, discontinuous Galerkin, mixed methods, hybrid methods, among others. Thus, before solving an engineering problem, one needs to choose the formulation that is more suited to the kind of application at hand. That choice would be guided by different aspects concerning the quantity of interest. Depending on whether the application aims to compute the solution or the flux field, it would determine the choice of a primal or a mixed H(div)-conforming formulation. Another concern relates to local conservation property. One needs to ponder whether this property is required, convenient or mandatory.  In this work, different finite element formulations for elliptic problems are implemented and compared, in terms of accuracy versus number of required degrees of freedom (DoF). The implemented formulations are: (a) the classical H 1 weak formulation (continuous); (b) the non-symmetric discontinuous Galerkin formulation by Baumann, Oden and Babuska; (c) a mixed discontinuous Galerkin formulation, known as Local Discontinuous Galerkin (LDG); (d) a mixed H(div)-conforming formulation; (e) a primal hybrid formulation.  The classical H 1-conforming Galerkin FEM method for second order elliptic problems [19], developed in the early ages of the FEM method, and which is based on continuous finite element approximation spaces, still remains a good option for many applications. However, for situations, as in fluid flow applications, where accuracy of the flux is important, a direct approximation of the velocity by taking the gradient of H 1-approximate solutions leads to lower-order accuracy.  Alternative formulations have been employed to enhance the accuracy of the flux approximations. The dual mixed H(div)-conforming method [12,5] is based on simultaneous approximations of the primal variable and the flux. In its classical formulation, using consistent H(div)-conforming FEM approximations for the flux, the approximation spaces for primal and dual variable are required to be compatible to obtain a numerical scheme which is both consistent and stable (LBB conditions).  A variety of new FEM methods have being developed (or recovered) in more recent years, which are mainly based on discontinuous (and thus non-conforming) approximation spaces, both in the primal or dual settings. There are several advantages in using finite element spaces consisting of discontinuous piecewise polynomials, as the flexibility for implementing h and p-adaptive strategies, robustness and local conservation property. However, the practical use of primal (non-hybridizable) discontinuous Galerkin methods is limited by the fact that the formulations are more complex and that the number of DoF is much larger for a given mesh when compared with the classical conforming Galerkin methods.  For hybrid formulations, static condensation can be applied to the element matrices such that only globally coupled DoF are included in the global system of equations. This approach results in an approximation of the solution defined only on the boundaries of the elements [5,3,16]. Recently, the connection between hybridization techniques and discontinuous Galerkin methods have been successfully exploited to derive new finite element methods with improved stability and reduced computational cost [7].  In this paper, we consider the classical H 1-conforming and mixed H(div)-conforming Galerkin FEM methods, as well as the following discontinuous formulations: non-symmetric discontinuous Galerkin method by Oden, Baumann and Babuska [4]; Local Discontinuous Galerkin method [8]; and a primal hybrid stabilized method [13], consisting of locally discontinuous Galerkin approximation of the primal variable coupled to a global problem in a multiplier representing the trace of the primal variable on the element interfaces.  The methods are implemented and compared in terms of the quality of their solution and flux approximation errors in the L 2 norm versus the number of required DoF when applied to two model problems. The first problem has a smooth solution and the second one presents a square root singularity in a boundary node. The square root singularity is representative for modeling the state of tension around a fracture in elasticity formulations.  For the problem with a smooth solution, the tests are performed with h refinement with constant order of approximation p=2. The results confirm convergence orders predicted by theoretical a priori error estimates. Regarding continuous, hybrid and mixed formulations, the effect of using static condensation of the internal equations of the element is also analysed, illustrated by the reduction in the size of the global system of equations to be solved.  For the second problem, the methods with uniform mesh refinement have limited convergence rates due to the lack of regularity of the function being approximated. However, due to the type of the singularity (square root), the efficiency of continuous and discontinuous Galerkin formulations can be improved by including functions with the appropriate singular behavior in the approximation space. In this case the shape functions were modified by using quarter-point geometric maps [15,14]. Another comparison is made by computing the error of the computed flux between elements. The motivation for this study is to verify whether approximation spaces which allow to implement formulations with local conservation have smaller flux error. When a given sequence of hp-refined meshes is adopted, the performances of all tested methods improve considerably. It should be noted that the purpose is not to present a self-adaptive procedure, which would require an error indicator. Rather a documented sequence of h and p refinements is applied to all formulations to compare errors on similar hp adapted meshes. For a discussion on different existent a posteriori error estimation and self-adaptive strategies, we refer to [1,21,9].  All formulations have been implemented using the object-oriented scientific computational environment NeoPZ. 1   1  http://github.com/labmec/neopz  NeoPZ is a general finite element approximation software, which incorporates a variety of element geometries, variational formulations, and approximation spaces. The use of this environment has made the current comparisons between approximation spaces/formulations possible. It contains modules for a broad classes of technologies such as system resolution, finite element geometric approximation, finite element approximation spaces (e.g. continuous, discontinuous, H(div), and others). It allows to apply local mesh refinements and to choose the order of approximation. NeoPZ is integrated with pthreads and thread building blocks for efficient execution on multi core computers. Multiphysics simulations can be implemented by combining different approximation spaces into a coupled system of equations. The development of the present numerical study was made possible thanks to the wide range of resources provided by this software.  The paper is divided as follows. Section 2 describes the formulations that are implemented, and Section 3 gives the procedures for static condensation to be adopted. Section 5 defines the smooth model problem. Aspects of mesh and mesh refinement are addressed, and L 2 norm of the errors in the approximations of the solution and of its gradient (the flux) are presented, confirming convergence orders predicted by theoretical a priori error estimates. Static condensation is also explored for continuous, hybrid and mixed H(div)-conforming formulations. The singular problem, whose exact solution has a square root singularity, is treated in Section 5. For this problem, special quarter-point elements are employed near the singularity, and hp meshes are also used to improve the convergence history. Section 6 concludes the paper.  This section describes the finite element formulations to be compared in this paper for the Poisson problem, which can be stated as:   {     \u2212 \u0394 u = f  in  \u03a9 ,     u =   u   d    on    \u0393   d   ,     \u2207 u \u00b7 \u03b7 = g  on    \u0393   N   ,       where u is a scalar function, \u03a9 \u2282   R   2   is a bounded domain, with boundary \u2202 \u03a9 =   \u0393   d   \u222a   \u0393   N   ,   \u0393   d   \u2229   \u0393   N   = \u2205 . The forcing term f is a function in   L   2   ( \u03a9 ) , the space of square-integrable functions. On the boundary region \u0393  d , Dirichlet conditions are imposed and \u0393  N is the region where Neumann conditions are imposed. Throughout the text, \u03b7 refers to the outward unit normal to the boundary of a region.  Several formulations using different approximations spaces are applied to the Poisson problem and their results are compared. Section 2.1 brings the classical H 1 continuous formulation [19]. Section 2.2 describes the discontinuous Galerkin formulation of Oden, Baumann and Babuska [18,4], and the mixed H(div)-conforming formulation [5] is presented in Section 2.3. Section 2.4 describes the mixed discontinuous Galerkin formulation, also known as the Local Discontinuous Galerkin method [8], and the hybrid formulation [13] is presented in Section 2.5. Section 2.6 describes the special quarter-point element and its application in H 1-continuous and discontinuous formulations [14].  For the comparison studies, all the considered formulations make use of finite element spaces based on a partition \u03a0  h of the domain \u03a9,     \u03a0   h   = {   \u03a9   e   , e = 1 , \u2026 , nel } ,   where \u03a9  e are open quadrilateral subsets with \u03a9 =   \u222a   e = 1   nel       \u03a9   \u00af     e   , nel is the number of elements, and   \u03a9   e   \u2229   \u03a9   i   = \u2205 for e \u2260 i . Locally defined polynomial spaces   P   p   (   \u03a9   e   ) , of total degree p, or   Q   p   (   \u03a9   e   ) , of maximum degree p in each variable, are used.  For the construction of element matrices and load vectors, Gauss quadrature rules are used. The integration points are determined by the tensorization of one-dimensional rules with sufficient points to exactly integrate polynomials of degree 2 p , excepting in the case of mixed H(div)-conforming formulation (described in Section 2.3), which requires integration rules for polynomials of degree 2 ( p + 1 ) .  The classical H 1 formulation [19] is stated as: find u \u2208 U = { v \u2208   H   1   ( \u03a9 ) ; u   |     \u0393   d     =   u   d   } such that     \u222b   \u03a9   \u2207 u \u00b7 \u2207 v  d \u03a9 =   \u222b     \u0393   N     vg  ds +   \u222b   \u03a9   fv  d \u03a9 ,  \u2200 v \u2208   U   0   ,   where     H   1   ( \u03a9 ) = {  v \u2208   L   2   ( \u03a9 ) ;    \u2202 v   \u2202   x   i     \u2208   L   2   ( \u03a9 ) ,  i = 1 , 2  } ,   and   U   0   = { v \u2208   H   1   ( \u03a9 ) ; v = 0  on    \u0393   d   } . Here, this weak form is solved by searching approximate solutions u  h , and by using test functions v  h locally defined in terms of hierarchical polynomial functions in   Q   p   (   \u03a9   e   ) . As described in [10], the shape functions are associated with sides of \u03a9  e , namely, they are of vertex, edge or interior type.  The discrete version for the discontinuous Galerkin weak formulation is constructed over the broken polynomial spaces     V   p   (   \u03a0   h   ) = { v \u2208   L   2   ( \u03a9 ) ;  v   |     \u03a9   e     \u2208   P   p   (   \u03a9   e   ) ,  \u2200   \u03a9   e   \u2208   \u03a0   h   } .   We also adopt the notation   \u0393     \u03a0   h     = \u2202 \u03a9 \u222a   \u0393   int   , where \u0393  int is the union of all interelement boundaries. Thus, the discrete weak formulation, presented in [4,18], is given as: find u \u2208   V   p   (   \u03a0   h   ) such that     \u2211   e = 1   nel     \u222b     \u03a9   e     \u2207 u \u00b7 \u2207 v  d   \u03a9   e   +   \u222b     \u0393   d     ( u \u2207 v \u00b7 \u03b7 \u2212 v \u2207 u \u00b7 \u03b7 ) ds +   \u222b     \u0393   int     ( \u3008 \u2207 v \u00b7 \u03b7 \u3009 [ u ] \u2212 \u3008 \u2207 u \u00b7 \u03b7 \u3009 [ v ] ) ds =   \u222b     \u0393   d       u   d   \u2207 v \u00b7 \u03b7  ds +   \u222b     \u0393   N     vg  ds +   \u2211   e = 1   nel     \u222b     \u03a9   e     fv  d   \u03a9   e   ,   for any v \u2208   V   p   (   \u03a0   h   ) . The terms \u3008 \u2207 v \u00b7 \u03b7 \u3009 and [ v ] are the average and jump operators   \u3008 \u2207 v \u00b7 \u03b7 \u3009 =   \u2207   v   e   \u00b7   \u03b7   e   + \u2207   v   i   \u00b7   \u03b7   i     2   , [ v ] = ( v   |   \u2202   \u03a9   e   \u2229   \u0393   ei     \u2212 v   |   \u2202   \u03a9   i   \u2229   \u0393   ei     ) ,  e > i ,   which are defined between two elements \u03a9  e and \u03a9  i , with e > i , having a common boundary \u0393  ei , where   \u03b7   e   =   \u03b7   i   being the outward normal of the boundary \u2202\u03a9 e.  The basis functions for the local discontinuous elements   P   p   (   \u03a9   e   ) may be defined in terms of Cartesian coordinates x and y or in terms of parametric master element coordinates \u03be and \u03b6. For elements with linear mapping between reference and real elements, no difference is observed and both definitions result in a polynomial basis. However, for bilinear, quadratic or higher order geometry interpolation, the base functions may differ. In this work, the shape functions are defined in terms of \u03be and \u03b6, and are of the total order p    \u03c6 ( \u03be , \u03b6 ) \u2208 {   \u03be   k     \u03b6   \u2113   ; k = 0 , \u2026 , p , \u2113 = 0 , \u2026 , p , k + \u2113 \u2264 p } .      The classical mixed H(div)-conforming formulation starts by rewriting the model problem as a first order system   {     \u2207 \u00b7  \u03c3  = f  in  \u03a9 ,      \u03c3  = \u2212 \u2207 u  in  \u03a9 ,     u =   u   d    on    \u0393   d   ,     \u2212  \u03c3  \u00b7 \u03b7 = g  on    \u0393   N   ,       which requires an additional space for the gradient   H ( div , \u03a9 ) = { q \u2208   L   2   ( \u03a9 ) \u00d7   L   2   ( \u03a9 ) ; \u2207 \u00b7 q \u2208   L   2   ( \u03a9 ) } .      As studied in [12,5], the variational formulation for this problem is: find  \u03c3  \u2208 U = { q \u2208 H ( div , \u03a9 ) ;  \u03c3  \u00b7 \u03b7   |     \u0393   N     = \u2212 g } and u \u2208   L   2   ( \u03a9 ) , such that  (1)    \u222b   \u03a9    \u03c3  \u00b7 q  d \u03a9 \u2212   \u222b   \u03a9   u \u2207 \u00b7 q  d \u03a9 = \u2212   \u222b     \u0393   d       u   d   q \u00b7 \u03b7  ds ,      (2)  \u2212   \u222b   \u03a9   \u2207 \u00b7  \u03c3   v  d \u03a9 = \u2212   \u222b   \u03a9   fv  d \u03a9 ,   for all q \u2208   U   0   = { q \u2208 H ( div , \u03a9 ) ; q \u00b7 \u03b7   |     \u0393   N   = 0   } , and for v \u2208   L   2   ( \u03a9 ) .  In typical H(div)-conforming discretized versions of the mixed formulation, approximate solutions of  \u03c3  and u are searched in   U   p   (   \u03a0   h   ) \u2282 U and W (   \u03a0   h   ) \u2282   L   2   ( \u03a9 ) , and the system of variational Eqs. (1) and (2) is enforced by test functions q \u2208   U   0   p   (   \u03a0   h   ) \u2282   U   0   , and v \u2208 W (   \u03a0   h   ) . However, to obtain a discrete mixed H(div)-conforming model with stable and accurate solutions, the finite element approximating spaces must be compatible, demanding the compliance of the LBB conditions [5].  In matrix form, the discrete version of the saddle point system (1) and (2) can be written as  (3)  (     A     B   T       B   0     ) (        \u03c3    h         u   h       ) = (     \u2212   u   dh       \u2212   f   h       ) ,   where    \u03c3    h   and u  h denote the dual and primal degrees of freedom, u  dh refers to the discrete values of the duality term   \u222b     \u0393   d       u   d   q \u00b7 \u03b7  ds , and f  h is associated to the L 2 projection of the forcing term on W (   \u03a0   h   ) . The matrices A and B correspond to discrete versions of the bilinear forms a (  \u03c3  , q ) =   \u222b   \u03a9    \u03c3  \u00b7 q  d \u03a9 and b (  \u03c3  , v ) = \u2212   \u222b   \u03a9   \u2207 \u00b7  \u03c3   v  d \u03a9 .  Here, this saddle-point problem is solved by using a mesh of quadrilateral elements with compatible pair of conforming approximation spaces for (  \u03c3  , u ) , as described in [20]. For the variable u, discontinuous piecewise polynomials of maximum degree p is adopted. For the construction of H(div)-conforming subspaces for flux approximations, the principle is to choose appropriate constant vector fields, which are multiplied by scalar shape functions in   H   1   ( \u03a9 ) of total degree p, constructed in [10]. The resulting vectorial shape functions are said to be of internal type if their normal components vanish over all the edges of the element. Otherwise, they are classified as being of edge type. This kind of vectorial approximation space is classified as being of     Q   \u2192     p   type. For stability, extended spaces denoted by     Q   \u2192     p   \u204e   are used. They refer to H(div)-conforming approximation spaces formed by enriching     Q   \u2192     p   with internal functions from     Q   \u2192     p + 1   whose divergences are in   Q   p   . The resulting space configurations produce stable simulations of the mixed H(div)-conforming formulation with optimal rates of convergence p + 1 both for primal and dual variables.  Another method for approximating the second order partial differential equations is the nonconforming discontinuous versions for the mixed formulation, as discussed in [2]. For the model problem, we implement the Local Discontinuous Galerkin (LDG) method proposed by Cockburn and Shu [8], which also adopts u and its gradient  \u03c3  = \u2212 \u2207 u as state variables. The discrete version for the LDG method is formulated as: find   u   h   \u2208 V (   \u03a0   h   ) and    \u03c3    h   \u2208 V (   \u03a0   h   ) \u00d7 V (   \u03a0   h   ) such that     \u2211   e = 1   nel   (  \u2212   \u222b     \u03a9   e        \u03c3    h   \u00b7 \u2207 v  d   \u03a9   e    ) +   \u222b     \u0393   int     \u3008    \u03c3    h   \u00b7 \u03b7 \u3009 [ v ]  ds +   \u222b     \u0393   d        \u03c3    h   \u00b7 \u03b7 v  ds =   \u222b     \u0393   N     gv  ds +   \u2211   e = 1   nel     \u222b     \u03a9   e     fv  d   \u03a9   e   ,   \u2211   e = 1   nel   (    \u222b     \u03a9   e        \u03c3    h   \u00b7 q  d   \u03a9   e   \u2212   \u222b     \u03a9   e       u   h   \u2207 \u00b7 ( q )  d   \u03a9   e    ) +   \u222b     \u0393   int     \u3008   u   h   \u3009 [ q \u00b7 \u03b7 ]  ds +   \u222b     \u0393   d       u   d   q \u00b7 \u03b7  ds +   \u222b     \u0393   N       u   h   q \u00b7 \u03b7  ds = 0 ,   for any v \u2208 V (   \u03a0   h   ) and q \u2208 V (   \u03a0   h   ) \u00d7 V (   \u03a0   h   ) , where \u3008 \u2207 v \u00b7 \u03b7 \u3009 and [ v ] are the average and jump operators.  Hybrid formulations are also based on nonconforming spaces (see [5,13,3]). We present the primal stabilized hybrid formulation for the Poisson problem proposed in [13]. The presentation is restricted to a pure Dirichlet boundary condition ( \u2202 \u03a9 =   \u0393   d   ) . Consider discontinuous finite element spaces V (   \u03a0   h   ) and multiplier spaces  (4)    \u039b   h   = { \u03bc \u2208   L   2   (   \u0393     \u03a0   h     ) ; \u03bc   |   e   =   P   p   ( e ) , \u2200 e \u2208   \u0393   int   , \u03bc   |   \u2202 \u03a9   =   u   d   } ,   \u03a3   h   = { \u03bc \u2208   L   2   (   \u0393     \u03a0   h     ) ; \u03bc   |   e   =   P   p   ( e ) , \u2200 e \u2208   \u0393   int   , \u03bc   |   \u2202 \u03a9   = 0 } .      The stabilized hybrid discontinuous Galerkin method is formulated as: find (   u   h   ,   \u03bb   h   ) \u2208 ( V (   \u03a0   h   ) \u00d7   \u039b   h   ) such that     \u2211   e = 1   nel   {    \u222b     \u03a9   e     \u2207   u   h   \u00b7 \u2207 v  d   \u03a9   e   \u2212   \u222b   \u2202   \u03a9   e     \u2207   u   h   \u00b7 \u03b7 ( v \u2212 \u03bc )  ds \u2212   \u222b   \u2202   \u03a9   e     \u2207 v \u00b7 \u03b7 (   u   h   \u2212   \u03bb   h   )  ds + \u03b2   \u222b   \u2202   \u03a9   e     (   u   h   \u2212   \u03bb   h   ) ( v \u2212 \u03bc )  ds  } =   \u2211   e = 1   nel     \u222b     \u03a9   e     fv  d   \u03a9   e   ,   for any v \u2208 V (   \u03a0   h   ) and \u03bc \u2208   \u03a3   h   . The parameter \u03b2 =     p   2     h     \u03b2   0   is a penalty stabilization where p is the polynomial approximation order, h is the element size and \u03b2 0 is a given positive constant. By setting the penalization parameter \u03b2 = 0 , this method is locally conservative. However, for this choice the formulation becomes unstable. As in [3], in this work, the simulations adopt   \u03b2   0   = 6 , and the same order for the finite element spaces for u  h and multiplier \u03bb  h .  For further discussion on primal hybrid formulations, see Ref. [3], where a stabilized hybrid finite element method for elliptic problems is proposed consisting of locally discontinuous Galerkin problems in the primal variable coupled to a globally continuous problem in the multiplier. The connection between hybridization techniques and a large class of DG methods is discussed in [7].   SUMMARY   A summary of the main properties of these schemes is presented in Table 1 with respect to accuracy order in the L 2-norm (for u and \u2207 u ), and symmetry of the stiffness matrix. The accuracy order for the non-symmetric DG method is   p   \u204e   = p or   p   \u204e   = p + 1 for even or odd polynomial degree p, respectively. Another important aspect is local conservation property   \u2212   \u222b   \u2202   \u03a9   e     \u2207 u \u00b7 \u03b7  d   \u03a9   e   =   \u222b     \u03a9   e     f  d   \u03a9   e   ,   for all   \u03a9   e   \u2208   \u03a0   h   . In many applications, this property is important to ensure consistent results.  In linear algebra, static condensation is widely known as a general process for reducing the number of unknowns of the global system of equations. It is based on a choice of the DoF to be condensed (secondary DoF), and on a static relation between them and the remaining ones (primary DoF). Static condensation can be applied to hybridization techniques by expressing the internal variables of the problem in terms of the multipliers defined over the element interfaces. This is the case of the primal hybrid method presented in Section 2.5, which is discussed in the following subsection. Static condensation process is also described in this section for mixed H(div)-conforming and H 1-conforming formulations based on hierarchical shape functions.  Let the primary and secondary DoF be associated to \u03bb  h and u  h , which are organized in vectors \u039b and U . The system of Eq. (4) can be written in the matrix form   [       K   11       K   12         K   21       K   22       ] [     \u039b     U     ] = [     F     0     ] ,   where the block matrices   K   11   ,   K   21   ,   K   12   , and   K   22   are generated by the operators   \u222b   \u2202   \u03a9   e     \u03b2   \u03bb   h   \u03bc  ds ,   \u222b   \u2202   \u03a9   e     ( \u2207   u   h   \u00b7 \u03b7 \u03bc \u2212 \u03b2   u   h   v )  ds ,   \u222b   \u2202   \u03a9   e     ( \u2207 v \u00b7 \u03b7   \u03bb   h   \u2212 \u03b2   \u03bb   h   v )  ds and   \u222b     \u03a9   e     \u2207   u   h   \u00b7 \u2207 v  d   \u03a9   e   +   \u222b   \u2202   \u03a9   e     ( \u2212 \u2207   u   h   \u00b7 \u03b7 v \u2212 \u2207 v \u00b7 \u03b7    u   h   + \u03b2   u   h   v )  ds , and the vector F originates from   \u222b     \u03a9   e     fv  d   \u03a9   e   . Note that the subscripts ij refer to the connection between variables i and j (1 and 2 being associate to primary and secondary variables, respectively). Taking the (local) static condensed relation   U = \u2212   K   22   \u2212 1     K   21   \u039b ,   and substituting it in the first set of equations, the global matrix for the system of equations     K   \u02dc     11   \u039b = F becomes       K   \u02dc     11   =   K   11   \u2212   K   21     K   22   \u2212 1     K   12   .   The use of static condensation applied to hybrid formulations reduces the number of global equations significantly. For a square domain with N \u00d7 N quadrilateral elements of order p (tensorial shape function), the total number of equations before condensation is 2 ( N + 1 ) N ( p + 1 ) + N \u00d7 N ( p + 1 ) ( p + 1 ) . After condensation the number of equations becomes 2 ( N + 1 ) N ( p + 1 ) .  In the mixed H(div)-conforming formulation, the degrees of freedom of the flux may be partitioned by internal fluxes    \u03c3    ih   (internal fluxes) and external fluxes    \u03c3    eh   (edge fluxes). The scalar quantities u  h are also partitioned by a unique value   u   0 h   and the remainder u  ih . Using this partition, the matrix representation (3) can be expressed in the form   (       A   ii       B   ii   T       B   ie   T       A   ie         B   ii     0   0     B   ie         B   ie     0   0     B   ee         A   ei       B   ie   T       B   ee   T       A   ee       ) (        \u03c3    ih         u   ih         u   0 h          \u03c3    eh       ) = (     \u2212   f   dh       \u2212   f   ih       \u2212   f   0 h       0     ) ,   where,   f     u   dh     is the contribution to the right hand side of non-homogeneous Dirichlet boundary condition, f  i is the right hand side volume contribution associated to condensed scalar shape functions, f 0 being the remaining ones. Then, static condensation is applied computing the internal degrees of freedom    \u03c3    ih   and u  ih (secondary variables), to get a condensed system only in terms of    \u03c3    eh   and   u   0 h   (primary variables).  For H 1-conforming formulation, static condensation can also be applied by partitioning the degrees of freedom of u  h in terms of internal degrees of freedom u  ih (secondary variables), and edge and vertex degrees of freedom u  eh (primary variables). The equations associated with the internal degrees of freedom can be written as a function of (i.e. condensed) the degrees of freedom associated with the border of the element.  The purpose of the present section is to compare the different formulations described in Section 2. They differ in terms of order of convergence rate, and do not all have the same computational cost. We adopt a model problem with a sufficiently smooth exact solution, as shown in Fig. 1 (left). Written as a function of polar coordinates, the solution is u =   2   7 / 4     r   7 / 2    cos (   7   2   \u03b8 ) . The solution satisfies the differential equation \u0394 u = 0 . A base mesh for the computational region \u03a9 = [ \u2212 0.5 , 0.5 ] \u00d7 [ 0 , 0.5 ] is composed of 8 quadrilaterals, as shown in Fig. 1 (right). It is uniformly refined, and interpolation order p=2 is applied everywhere.   Table 2 summarizes the obtained results. Convergence rates of order p + 1 for the L 2-norm of the error in u, and p of the L 2-norm of the error in the flux are achieved. Exceptions are the non-symmetric discontinuous Galerkin by Oden, Baumann, and Babuska, with suboptimal convergence rate p in L 2 (which is expected for even p orders), and the mixed H(div)-conforming formulation, which presents p + 1 rate also in flux error.  We also address the number of degrees of freedom (DoF) of each method, without (Total) and after static condensation (SC). Since static condensation does not apply to DG and LDG methods, only total number of DoF are reported for these methods. The H 1 formulation is the method with less DoF, while the mixed H(div)-conforming formulation and the LDG method are, by far, the methods with greater total number of equations. However, the static condensation procedure drastically reduces the number of equations to be solved with these formulations. It can be observed that the effectiveness of the static condensation procedure in the reduction of degrees of freedom is more significant in the mixed H(div)-conforming method, specially for higher refinement levels. For instance, in the fifth level of refinement, about 73% of the total number of degrees of freedom are condensed in the mixed H(div)-conforming method, while this percentage is about 59% for the hybrid method and 24% for the formulation in H 1. Concerning the two discontinuous Galerkin methods, the primal DG and the LDG formulations, the latter produces more degrees of freedom per element, since it approximates the solution and the two flux components. Although it performs better than DG regarding the solution error, the DG method is more efficient for the flux error.  All cases were solved by direct decomposition (Cholesky for positive definite systems, LDLt for symmetric non definite systems and LU for nonsymmetric systems). No problems in the propagation of round off errors have been noted. Condition numbers of the different solved systems are also presented in Table 2 for the less refined meshes, which were computed with the software Mathematica. The condition number computed as the product of the \u221e -norm of the matrix times the \u221e -norm of the inverse of the matrix. All methods, except for the mixed H(div)-conforming method, have similar values. This is an indication that mixed H(div)-conforming methods may be more sensitive to round off error propagation during decomposition.  When solving large problems by direct solvers, the computational cost are always dominated by the size, and also by the structure, of the system of equations. In order to estimate a computational cost measure for the methods, we consider the size (n) of the system to be solved and its average bandwidth (b). In Table 2, the estimated time of decomposition (Cost) is measured as   nb   2   for symmetric matrices, and as 2   nb   2   otherwise. Using this measure, DG, mixed H(div)-conforming and hybrid formulations have comparable computational costs.  The L 2-errors of the primal variable u and the flux given in Table 2 are displayed in Fig. 2 in terms of the grid spacing h and of the estimated cost of the methods. The best compromises in terms of accuracy in u versus a given computational cost are given by H 1, hybrid and mixed H(div)-conforming formulations, the two later ones with quite similar performances. With respect to flux error, the mixed H(div)-conforming formulation is, by far, the most efficient method.  Here, a problem is approximated where the exact solution presents a square root singularity at the point where the boundary condition changes. The analytic solution is illustrated in Fig. 3 (left) and corresponds to (in polar coordinates) u =   2   1 / 4     r    cos (   \u03b8   2   ) . The analytic solution is singular at r = 0  or  ( x , y ) = ( 0 , 0 ) .  This type of singularity is representative of the singularity which occurs in elastic problems around cracks and the intend of this publication is to assess how the methods analyzed behave in such cases. The solution satisfies the differential equation \u0394 u = 0 . The adopted boundary conditions are indicated in Fig. 3 (right). Dirichlet and Neumann conditions are smooth functions. Except for the H 1 approximation, all approximations apply Dirichlet boundary conditions weakly. In this example, the Dirichlet boundary condition is homogeneous.  A special type of element widely used in the fracture mechanics community is the quarter-point element [14,15]. This element is defined by an 8-node quadratic (or higher order) geometry element with two side nodes moved to one quarter of the side. By moving two side nodes toward the node, the shape functions, obtained by standard finite element technology \u03c6 ( x ( \u03be ) ) =   \u03c6   ^   ( \u03be ) inherit the singular behavior of the geometric map and result in rational shape functions. These rational functions resulting from the quarter-point geometric map contain the monomials of the exact solution and better approximate the analytic solution. As indicates in Fig. 4 , the nodes 5 and 8 are moved toward the node 1.  In order to employ quarter-point elements near the singularity, we divided the base mesh into two regions, as indicated in Fig. 5 (left). It is important to observe that the quarter-point elements, when uniformly refined, produces a directional refinement pattern, as indicated in Fig. 5 (right). As a consequence, the mesh with quarter-point elements in the central region, near the singularity, differ from the regular mesh after refinement steps. All the elements in the central region have a quadratic geometric mapping, since they are conforming to the mapping defined by their father elements. Thus, the rational shape functions produced by the quarter-point geometric map are present in all the elements in the central region. However, only the elements neighboring the singular node at coordinates (0,0) have singular behavior. Fig. 6 compares two meshes with linear and quarter-point geometries after two refinement steps. In this work, the quarter-point element geometry is applied to the continuous and discontinuous Galerkin formulations. Another possibility to improve the accuracy of discontinuous methods would be to enrich the approximation spaces with special functions, as described in [16].  The same base mesh composed of 8 quadrilaterals, as in Fig. 1 (right), with subsequent uniform refinement is adopted.  The convergence rates of all methods are compared in Table 3 . Because of the limited regularity of the analytic solution, the theoretical convergence rate for finite element approximation is unitary in the L 2 norm of the error u \u2212   u   ex   and 0.5 in the flux \u2207 ( u \u2212   u   ex   ) , independently of the polynomial order of approximation (p=2 or p=3). The approximations using quarter-point elements incorporate the singularity of the analytic solution and therefore have better convergence rates. The hybrid method also has a higher convergence rate. One can observe that the quarter-point elements substantially improve the quality of the H 1 continuous and discontinuous Galerkin approximation, and present a convergence rate 2 in the L 2-norm of the error u \u2212   u   ex   and 1 in the flux. It is important to observe that the analytic solution favors the quarter-point element, since it contains square root function which represented by the elements using the quarter-point geometric map. The hybrid method presents a convergence rate of order 1.5 in the L 2-norm of the error u \u2212   u   ex   without the benefit of the quarter-point singular map.  We also compare the simulation results in terms of the flux over the curve \u0393 indicated in Fig. 7 . The error of the flux over \u0393 is defined as:   Flux  error =   (    \u222b   \u0393   | \u2207   u   ex   \u00b7 \u03b7 \u2212 \u2207   u   h   \u00b7 \u03b7   |   2    ds  )   1 / 2   ,   where u  ex is the analytic solution and u  h is its finite element approximation. The motivation for this test is that in some areas of engineering the quality of the flux between neighbor elements is very important. For instance, the simulation of flow in porous media the velocity field is used to transport the saturations, enthalpy, or any other component in the reservoir. Another example is the calculation of Stress Intensity Factor, which can be obtained by an integral of the stress over a curve \u0393. The expectation that locally conservative formulations (H(div) or LDG) would present smaller errors in an integrated flux quantity was not confirmed. The results of this test are presented in Fig. 8 . The convergence rates obtained for the flux error in \u0393 are the same that obtained in L 2-norm of the error in u in \u03a9, shown in Table 3. Again, the best solutions are obtained with the meshes using quarter-point elements and with the hybrid formulation.  An hp refinement pattern is proposed to generate optimized meshes for the singular problem. Firstly, split the domain into two regions: the central region, near the singularity and the smooth part, elsewhere. In the region where the solution is smooth, p refinement is adopted in order to produce exponential convergence rates there. In the central region, hp refinement is employed in order to generate approximation spaces which better capture the singularity behavior.   Fig. 9 illustrates the hp refinement process. The initial mesh is composed of 8 quadrilateral elements with p=2. The two quadrilaterals near the singularity are divided into 4 sub-elements and their approximation order are set to p=3. Then, the refinement process follows the steps:  1. All elements have their approximation order increased by 1.  The elements near the singularity are divided and their approximation order are increased by 1.  The results for H 1 continuous and discontinuous methods are compiled in Fig. 10 . One can observe that the hp refinement curves have exponential convergence rates, and substantially improve the quality of the solutions u and their fluxes, as compared with the uniform refinement procedure, using constant order of approximation p=3. The gain in accuracy is even more dramatic when using quarter-point geometric elements combined with an hp-refinement procedure.  It should be noted that, after six hp refinement steps, the discontinuous Galerkin method with quarter-point elements requires an additional term in order to improve its stabilization. As suggested in [4], the bilinear operator and the linear form are augmented by the following penalization term   \u03b2 [    \u222b     \u0393   d     u  v  ds +   \u222b     \u0393   int     [ u ] [ v ]  ds  ] ,  and  \u03b2   \u222b     \u0393   d       u   d    v  ds .   As in the hybrid method, the penalization parameter has the form \u03b2 =   \u03b2   0       p   2     h   . The constant   \u03b2   0   = 0 was chosen for the first six hp refinement steps. In the subsequent meshes the penalization term   \u03b2   0   = 10 was adopted. The discontinuous Galerkin method using elements with linear geometry did not require any stabilization treatment. However, the addition of stabilization terms voids the local conservation property of the method.  The hp convergence histories for LDG, mixed H(div)-conforming and hybrid formulations are shown in Fig. 11 , with similar exponential decay of the errors. In order to compare the performance of all formulations with respect to the same hp meshes, Fig. 12 presents all L 2-norm error curves for u and the flux. It should be observed that the hybrid method and the continuous H 1 formulation with quarter-point elements outperform all other methods, in terms of the accuracy in u versus number of DoF. Concerning the error of approximation of the flux, the formulations using quarter-point elements are the best ones.   CONCLUSIONS   This paper addresses the implementation and comparison of different finite element formulations and their application to model Poisson problems. The classical H 1 formulation, the non-symmetric discontinuous Galerkin formulation by Baumann, Oden and Babuska, the Local Discontinuous Galerkin method, the mixed H(div)-conforming formulation, and a primal hybrid formulation are compared using the same computational finite element environment. The performance of the methods are compared in terms of accuracy versus number of DoF, for h and hp refinement procedures.  The first problem used for comparing the different formulations has a smooth solution. When comparing the performance of the formulations in terms of the L 2-error norm, using uniform refinement and polynomial order p=2, one observes that the continuous H 1, the mixed H(div)-conforming and the hybrid formulations produce better approximations of the primal variable. When comparing the L 2 error between the different formulations, the H 1 approximation performs best as a function of element size and number of condensed degrees of freedom. As predicted by the approximation theory, the mixed H(div)-conforming formulation produces a higher order of convergence rate for the flux as a function of element size. It also performs better as a function of the estimated computational cost (which is measured by the product of the size and the square of the condensed matrix bandwidth).  The second problem used for comparison features has a singular solution. In this case, the methods based on uniform meshes have their accuracy limited by the regularity of the solution. Using the NeoPZ library, the geometric map is separated from the approximation space. When combining quarter-point geometric maps with regular and/or hp-adaptive spaces, an increased accuracy is obtained for continuous and discontinuous Galerkin methods. For uniform meshes the hybrid formulation converges at a rate 1/2 order higher than the other methods. The error in approximating the flux for a region around a singularity is also analysed. As expected, the singularity influences the convergence rates. Methods which have local conservation property did not have smaller errors.  For the singular problem, hp adapted meshes tuned to the singularity are created. As expected, hp refined meshes substantially improve the quality of the solution u and its gradient, when compared with the uniform refinement procedure. The hp-adaptive mesh sequences are also applied to geometric maps with quarter-point singularity. These meshes, combined with H 1-continuous Galerkin approximation produce the best results.  We plan to extend this study to 3D problems, where the effects of static condensation and hp refinement are expected to be more important to reduce the computational effort, specially for hybrid and mixed H(div)-conforming formulations. It should also be observed that the application of the methods to other kind of equations may lead to different comparison conclusions.   ACKNOWLEDGMENTS   The authors P. Devloo, A. M. Farias, and S. M Gomes thankfully acknowledge financial support from the Brazilian National Agency of Petroleum, Natural Gas and Biofuels (ANP \u2013 PETROBRAS). P. Devloo and S. M. Gomes also acknowledge the financial support from CNPq \u2013 the Brazilian Research Council. A. M. Farias thankfully acknowledge financial support, by a postdoctoral grant, by CAPES Foundation, within the Ministry of Education in Brazil.   REFERENCES", "highlights": "In this work, different finite element formulations for elliptic problems are implemented and compared, in terms of accuracy versus number of required degrees of freedom. The implemented formulations are: (a) the classical H 1 weak formulation (continuous); (b) the non-symmetric discontinuous Galerkin formulation by Baumann, Oden and Babuska; (c) a mixed discontinuous Galerkin formulation, known as Local Discontinuous Galerkin (LDG); (d) a mixed H ( div ) -conforming formulation; (e) a primal hybrid formulation. In order to compare the methods, two 2-dimensional test problems are approximated, one having a smooth solution and the second one presenting a square root singularity in a boundary node. The different formulations are compared in terms of the L 2 norm of the approximation errors in the solution and in its gradient (the flux). The tests are performed with h refinement with constant order of approximation p, as well as for a given hp refinement procedure. For the problem with a smooth solution, the results confirm convergence orders predicted by theoretical a priori error estimates. As expected, the application of hp refinement to the singular problem improves considerably the performance of all methods. Furthermore, due to the type of the singularity (square root), the efficiency of continuous and discontinuous Galerkin formulations is further improved by using enriched spaces with quarter-point elements. Regarding continuous, hybrid and mixed formulations, the effect of using static condensation of element equations is also analysed, in order to illustrate the reduction in the global system of equations in each case. A third comparison is given in terms of the conservation of the flux over a curve around a singularity."}