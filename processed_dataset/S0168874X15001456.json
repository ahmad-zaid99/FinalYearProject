{"id": "S0168874X15001456", "article": "MAIN-TITLE Least-squares finite strain hexahedral element/constitutive coupling based on parametrized configurations and the L\u00f6wdin frame   HIGHLIGHTS          (First time) Use of least-square based strains in an 8 node (assumed-strain) hexahedron. Full finite strain formulation.      (First time in a Hexahedron) Use of L\u00f6wdin frames and rotation based on these frames in a semi-implicit form.      Analysis of null-space under satisfaction of constraints (Kirchhoff\u2013Love and incompressibility).      Semi-implicit constitutive integration.      Basic linear problems as well as 5 finite-strain examples are inspected for correctness and competitive accuracy.          KEYPHRASES   L\u00f6wdin frame  Assumed-strain hexahedron  Finite strains  Constitutive integration   Heterogeneous element technologies for finite strains introduce, at the constitutive integration level, difficult compatibility requirements. Assumed-strain and enhanced strain elements can be either formulated in terms of the deformation gradient [35] or the Green\u2013Lagrange strain [1,11], many of the high-performance shell formulations are corotational (cf. [5]) and constitutive constraints (such as incompressibility, plane stress and zero normal stress in shells) are also dependent on specific element formulations, see [7,3,6]. In addition, assumed-stress elements are difficult to accommodate in a strain-driven constitutive framework. Finite strain constitutive algorithms must be compatible with available high-performance finite element formulations. This ensures a purely orthogonal many-to-many relation between elements and constitutive laws. In terms of diverseness of constitutive formulations amenable for finite strain applications, rate formulations (for metal plasticity), total formulations (using Lee\u05f3s [23]    F   e     F   p   decomposition) and hyperelasticity require different quantities from the element subroutines. Note that some element formulations may not have the deformation gradient which is compatible with the assumed strains. Unless a unified approach is developed, calculations become very intricate without approximations. Besides the inevitable duplication of effort, these incompatibilities are error-prone and produce code maintenance difficulties. To satisfy the requirements for corotational elements, anisotropic materials and finite plasticity laws making use of polar decomposition (e.g. [27]) we use L\u00f6wdin [25] frames. These provide a moving orthogonal local frame-of-reference. By multiplication of two frames (with a transpose), a rotation tensor (in essence a good estimate of the polar-decomposition rotation) is obtained. Elements based on the Green\u2013Lagrange strain that do not provide the deformation gradient (see [9] for this long standing issue) make, in the present work, use of the rotation tensor obtained from the frame multiplication and the Green\u2013Lagrange strain. Therefore, continuum and structural finite-strain elements are accounted with our algorithm. We use a semi-implicit approach: rotation tensors are integrated explicitly and quadratic strains are integrated implicitly. This allows (at the cost of some accuracy) the use of a comparatively small number of steps for intricate nonlinear problems (e.g. 10 load steps for the finite strain elasto-plastic pinched cylinder). We combine the constitutive integration algorithm with a hexahedral element with least-squares based assumed strains. This new element avoids the enhanced strain additional degrees-of-freedom and the corresponding static condensation.  It is favorable to use local frame based on the singular value decomposition (SVD) of the Jacobian matrix, i.e. L\u00f6wdin frames, for anisotropic materials. Since principal anisotropic directions are usually globally defined, part of the information is contained in the undeformed mesh. For 3D cases two additional angles (which can be seen as element properties) are sufficient to define the specific orientation within each element. Since, during a finite strain solution, the Jacobian changes, these two angles remain fixed and anisotropic directions follow the deformation by means of the SVD of the deformed Jacobian. This greatly simplifies the definition of orientations in 3D and avoids the duplication of calculations (such as the use of frames and polar-decomposition). This work is organized as follows: Section 2 discusses the use of L\u00f6wdin frames and the calculation of the rotation tensor, Section 3 presents the complete algorithm based on parametrized configurations. Section 4 introduces a least-squares assumed-strain element with the Pian\u2013Tong [30] modes and an assessment of locking based on null-space analysis. Section 5 presents both linear (seven examples) and nonlinear examples (five) for evaluating both the proposed algorithm and the least-squares element. Finally, Section 6 presents conclusions concerning both subjects.  In the context of structural finite element analysis, the polar-decomposition of the deformation gradient does not provide, by itself, a local frame at each integration point. Polar decomposition partitions the deformation gradient into a stretch and a rotation (in this order or a different one, providing a left or a right stretch, respectively). However, it does not provide a local frame-of-reference. In essence, a change in frame-of-reference can be defined by the rotation part of the decomposition, but not the frame itself. Therefore, classically, an initial local frame must be defined when using the rotation. This is an additional task required in structural elements with finite strains and also with anisotropic materials where principal anisotropic directions change with deformation.  Consider two configurations 1   1 We use standard notation in continuum mechanics [39].  \u03a9  a and \u03a9  b identified by time instances t  a and t  b such that   t   a   \u2265   t   b   . The initial configuration (t=0) is denoted \u03a9 0. Let the positions of a given point X in configurations \u03a9  a and \u03a9  b be   x   a   ( \u03be ,   t   a   ) \u2208   \u03a9   a   and   x   b   ( \u03be ,   t   b   ) \u2208   \u03a9   b   , respectively. Considering only one element, parent-domain coordinates \u03be are used. Derivatives with respect to parent-domain coordinates \u03be are denominated Jacobians ( J ) of the corresponding coordinate transformations:  (1)    J   a   =   \u2202   x   a     \u2202 \u03be        (2)    J   b   =   \u2202   x   b     \u2202 \u03be        Using definitions (1) and (2), the relative deformation gradient is given by  (3)    F   ab   \u2261   \u2202   x   a     \u2202   x   b     =   J   a     J   b   \u2212 1     which includes the classical deformation gradient when   \u03a9   b   \u2261   \u03a9   0   :   F   a 0   =   \u2202   x   a     \u2202   x   0     . Independently of the configuration, Jacobians of non-degenerated geometries are composed of three linearly independent columns. From these columns an orthogonal and normed frame is obtained. With the purpose of uniquely defining a frame compatible with the concept of polar decomposition, use is made of the symmetric orthogonalization formula by Per-Olov L\u00f6wdin (cf. [25]). We resort to the singular value decomposition (SVD, cf. [18]) of J there exists a decomposition with the following form (configuration indices a and b are omitted):  (4)  J = G \u03a3   H   T     where G is a 3\u00d73 unit matrix,   G   T   G = I , \u03a3 is a 3\u00d73 diagonal matrix and H is a 3\u00d73 unit matrix satisfying   H   T   H = I . Columns of G are normalized  2   2 In the Euclidean sense. eigenvectors of   JJ   T   and columns of H are normalized eigenvectors of   J   T   J . The diagonal matrix \u03a3 contains the singular values of J in its principal diagonal. Singular values are nonnegative reals. Columns of G are the left singular vectors and columns of H are the right singular vectors. The non-zero singular values of J are the square roots of the non-zero eigenvalues of   J   T   J . In the present case, we have a square J matrix, whose columns contain independent vectors (therefore forming a basis). L\u00f6wdin\u05f3s formula provides the following orthogonal frame:  (5)  R =   GH   T        It was proved by Carlson and Keller [12] that R obtained by this formula (5) is the proper orthogonal matrix whose columns have the minimum Euclidean distance to the corresponding columns of J . A formula for R depending solely on H is  (6)  R = JH   \u03a3   \u2212 1     H   T     and, since \u03a3 is a diagonal matrix, we have the following index notation:  (7)    R   ij   =   1       \u03bb   l         J   ik     H   kl     H   jl     where \u03bb  l , l=1,\u2026,n, are the eigenvalues of   J   T   J and columns of H are the corresponding eigenvectors. In our case we have the following specialization:  (8)    R   0 a   =   J   a     H   a     \u03a3   a   \u2212 1     H   a   T     where   J   a   is the element Jacobian for configuration \u03a9  a ,   H   a   are the eigenvectors of   J   a   T     J   a   . For the configuration \u03a9  b , we have  (9)    R   0 b   =   J   b     H   b     \u03a3   b   \u2212 1     H   b   T        Relative rotation is determined by the following formula:  (10)    R   ab   =   R   0 a     R   0 b   T        At this point, the reader can observe that (10) appears as an addition to the two classical continuum mechanics rotations, 3   3 Others can be consulted in [24]. which are:  1. Rotation tensor obtained from polar decomposition,   R   ab   PD   =   F   ab     (    F   ab   T     F   ab    )   \u2212 1 / 2   .  Rotation tensor obtained from the vorticity W time-integration, W =     R   \u0307     ab   W     (    R   ab   W    )   T   .  For anisotropic materials, principal anisotropic directions must be defined at each element level. This can be time-consuming and error-prone for intricate geometries. We therefore use a local transformation matrix, T ( \u03b8 , \u03d5 ) which converts the local frame obtained by the singular value decomposition to an anisotropic frame (see Fig. 2 ):  (12)  T ( \u03b8 , \u03d5 ) = [     cos ( \u03d5 ) cos ( \u03b8 )   \u2212 sin ( \u03b8 )   sin ( \u03d5 ) cos ( \u03b8 )     cos ( \u03d5 ) sin ( \u03b8 )   cos ( \u03b8 )   sin ( \u03d5 ) sin ( \u03b8 )     \u2212 sin ( \u03d5 )   0   cos ( \u03d5 )     ]   where \u03b8 is the angle between   e   II b   and   e   II b   \u22c6   and \u03d5 is the angle between   e   III b   and   e   III b   \u22c6   (see Fig. 2). We define the anisotropy frame   R   0 b   \u22c6   from   R   0 b   and T ( \u03b8 , \u03d5 ) as  (13)    R   0 b   \u22c6   =   R   0 b   T ( \u03b8 , \u03d5 )   in which the reduced constitutive model is written. In Fig. 2, directions   e   I b   ,   e   II b   and   e   III b   are columns of   R   0 b   :  (14)    R   0 b   = [    e   I b   \u2223    e   II b   \u2223    e   III b    ]      We use the following convention for writing tensors: the bold symbol indicates the matrix of tensor components. Therefore, the frame where the tensor components are defined is identified as a superscript. If global coordinates (here identified by the superscript 0) are used then we define   R   0 a   in frame 0:  (15)    R   0 a   0   \u2261   R   0 a        As an example, the second-order tensor   S   ab   with equilibrium configuration \u03a9  a and reference configuration \u03a9  b has the following components in frame c:   S   ab   c   . If global frame 0 is adopted, component transformation between frame 0 and frame c follows:  (16)    S   ab   c   =   R   c 0   0     S   ab   0     R   c 0   0 T        We can of course apply (16) to   R   0 a   0   using \u03a9  a as a frame:  (17)    R   0 a   a   =   R   a 0   0     R   0 a   0     R   a 0   0 T   =   R   a 0   0 T   =   R   0 a   0     which is a known result in element technology literature: rotations are invariant with respect to change of frame. Therefore, the frame index can be omitted for rotations. Generalizing (16), change of frame from d to c results in the following transformation:  (18)     S   ab   c   =   R   cd     S   ab   d     R   cd   T         Simo (cf. [37, p. 281 Eq. (8.1.13)]) derived a one-step scheme for integrating the strain rate in frame 0 (which is not standard). If the explicit version is used ( \u03b1 = 0 in [37]), it produces the following relative strain from integration of the strain rate:  (19)    e   ab   =    1   2    (    F   ab   T     F   ab   \u2212 I  )   This is specially convenient: it is a quadratic function of the position at configuration \u03a9  a , greatly simplifying the linearization and the extension to the full total Lagrangian formulation. In addition, the time-derivative of   e   ab   approximates the strain rate:  (20)      e   \u0307     ab   =    1   2    (      F   \u0307     ab   T     F   ab   +   F   ab   T       F   \u0307     ab    ) \u21d4      (21)      e   \u0307     ab   =    1   2      F   0 b   T   (      F   \u0307     a 0   T     F   a 0   +   F   a 0   T       F   \u0307     a 0    )   F   0 b   \u21d4      (22)      e   \u0307     ab   =    1   2      R   ab   T     V   ab   (    F   0 a   T       F   \u0307     a 0   T   +     F   \u0307     a 0     F   0 a    )   V   ab     R   ab     where use of the polar decomposition of   F   ab   =   V   ab     R   ab   using the left stretch tensor   V   ab   (see, e.g. [10]). By pre- and post-multiplying both sides of (22) by the relative rotation, we obtain the rotationally neutralized     e   \u0307     ab   which differs from the classical strain rate   D   a 0   by the relative stretch   V   ab   :  (23)    R   ab       e   \u0307     ab     R   ab   T   =   V   ab           1   2    (    F   0 a   T       F   \u0307     a 0   T   +     F   \u0307     a 0     F   0 a    )   \ufe38       D   a 0        V   ab     which corresponds to an approximate strain rate. Result (23) is, to the Authors\u05f3 knowledge, new and of practical importance. The value of the relative left stretch tensor for moderate incremental strains is   V   ab   \u2245 I . We can now use (19) to determine the classical Green\u2013Lagrange strain   e   a 0   :  (24)    e   a 0   =    1   2    (    F   a 0   T     F   a 0   \u2212 I  ) \u21d4      (25)    e   a 0   =   e   b 0   +   F   b 0   T     e   ab     F   b 0        We still need to determine the conjugate stresses to the relative strain. We recall that, using a classical result of continuum mechanics, the second Piola\u2013Kirchhoff stress is power-conjugate to the time-derivative of the Green\u2013Lagrange strain. The traditional power argument is employed with the determination of   S   ab   :  (26)      W   \u0307     int   =   \u222b     \u03a9   b     tr [   S   ab   T       e   \u0307     ab   ]  d   \u03a9   b   =   \u222b     \u03a9   0     tr [   S   a 0   T       e   \u0307     a 0   ]  d   \u03a9   0     where the trace operator ( tr [ \u2022 ] = \u2022 : I ) as well as the second Piola\u2013Kirchhoff stress   S   a 0   were used. It is simple, but intricate, to prove the following relation between the second Piola\u2013Kirchhoff stress   S   a 0   and the relative stress   S   ab   :  (27)    S   ab   =   1     J   b 0       F   b 0     S   a 0     F   b 0   T     where J  b0 is the determinant of   F   b 0   corresponding to the Jacobian of transformation 0 \u2192 b ,  (28)    J   b 0   = det    F   b 0   =   d   \u03a9   b     d   \u03a9   0          Eq. (27) is generalized as follows:  (29)     S   ac   =   1     J   cb       F   cb     S   ab     F   cb   T      where   J   cb   = det    F   cb   . With the exception of hyperelastic laws, most constitutive laws use the Cauchy stress. Yield functions should be based on the Cauchy stress. It is straightforward to identify the Cauchy stress with   S   aa   :  (30)    S   aa   =   1     J   a 0       F   a 0     S   a 0     F   a 0   T   \u21d4   S   aa   =   1     J   ab       F   ab     S   ab     F   ab   T        Using an hypoelastic relation, stress updating is performed additively:  (31)     S   ab   =   S   bb   + \u0394     S   \u02c7     a   (   e   ab   )    where \u0394     S   \u02c7     a   , the constitutive part of the stress, is a function of the relative strain   e   ab   . Relevant equations for the constitutive updating algorithm combine frame updating with configuration updating. The three aforementioned operations are depicted in Fig. 3 .  For symmetric tensors, such as   S   ab   and   e   ab   , it is advantageous to use Voigt notation. Upright bold symbols denote Voigt form of symmetric tensors:  (32)    S   ab   = Voigt [   S   ab   ] =   1     J   b 0       V   S   (    F   b 0    )   S   a 0     where   S   a 0   = Voigt [   S   a 0   ] . We note that, omitting indices a, b, and 0,   V   S   ( F ) can be written as  (33)    V   S   ( F ) = [       F   11   2       F   12   2       F   13   2     2   F   12     F   11     2   F   13     F   11     2   F   13     F   21         F   21   2       F   22   2       F   23   2     2   F   22     F   21     2   F   23     F   21     2   F   23     F   22         F   31   2       F   32   2       F   33   2     2   F   32     F   31     2   F   33     F   31     2   F   33     F   32         F   11     F   21       F   12     F   22       F   13     F   23       F   12     F   21   +   F   11     F   22       F   13     F   21   +   F   11     F   23       F   13     F   22   +   F   12     F   23         F   11     F   31       F   12     F   32       F   13     F   33       F   12     F   31   +   F   11     F   32       F   13     F   31   +   F   11     F   33       F   13     F   32   +   F   12     F   33         F   21     F   31       F   22     F   32       F   23     F   33       F   22     F   31   +   F   21     F   32       F   23     F   31   +   F   21     F   33       F   32     F   23   +   F   22     F   33       ]   and, for the strain quantities,   V   E   ( F ) =   V   S   T   ( F ) . The complete set of operations is presented in Algorithm 1. Algorithm\u00a01 Relative Lagrangian formulation (Voigt notation adopted). Frame b, reference configuration \u03a9  b and equilibrium configuration \u03a9  a . UL indicates the Updated Lagrangian and TL indicates Total Lagrangian.       Given   F   ab   b   ,   e   ab   b   (both in frame b),   R   0 b   \u22c6   and   R   0 a   \u22c6   (both in frame 0 and defined according to (13)) and T  b and T  a     Recover from storage   F   b 0   b   ,   S   bb   b   ,   e   b 0   b            Determinants     J   b 0   = det    F   b 0   b            J   ab   = det    F   ab   b       Relative rotation and total deformation gradient update     R   ab   =   R   0 a   \u22c6 T     R   0 b   \u22c6            F   a 0   b   =   F   ab   b     F   b 0   b       Thermal effect in the relative strain     e   ab   b \u25cb   =   e   ab   b   + \u03b1 (    T   a   \u2212   T   b    ) I     Total strain update     e   a 0   b   =   e   b 0   b   +   V   E   (    F   b 0   bT    )   e   ab   b \u25cb            (UL) Determine    S   ab   b   =   S   bb   b   + \u0394     S   \u02c7     a   (    e   ab   b \u25cb    ) and Q  ab along with sensitivity quantities   C   ab   =    \u2202 \u0394     S   \u02c7     a     \u2202   e   ab   b \u25cb      ,    \u2202 \u0394     S   \u02c7     a     \u2202   T   a      ,    \u2202   Q   ab     \u2202   e   ab   b \u25cb      and    \u2202   Q   ab     \u2202   T   a          (TL) Determine    S   a 0   b   (    e   a 0   b    ) and Q  ab , along with sensitivity quantities   C   a 0   =    \u2202   S   a 0   b     \u2202   e   a 0   b      ,    \u2202   S   a 0   b     \u2202   T   a      ,    \u2202   Q   ab     \u2202   e   a 0   b      and    \u2202   Q   ab     \u2202   T   a          (TL) Determine relative stresses     S   ab   b   =    1     J   b 0        V   S   (    F   b 0   b    )   S   a 0   b       (TL) Determine relative sensitivities     C   ab   =    1     J   b 0        V   S   (    F   b 0   b    )   C   a 0     V   E   (   F   b 0   bT   )           \u2202   S   ab   b     \u2202   T   a      =    1     J   b 0        V   S   (    F   b 0   b    )    \u2202   S   a 0   b     \u2202   T   a                \u2202   Q   ab     \u2202   e   ab   b      =    \u2202   Q   ab     \u2202   e   a 0   b        V   E   (    F   b 0   bT    )          Update temperature sensitivity      \u2202   S   ab     \u2202   T   a      \u2190    \u2202   S   ab     \u2202   T   a      + \u03b1   C   ab   I     Determine strain in frame a      e   a 0   a   =   V   E   (    R   ab    )   e   a 0   b       Determine deformation gradient in frame a      F   a 0   a   =   R   ab     F   a 0   b     R   ab   T       Determine Cauchy stress in frame a (change of frame and reference configuration)     S   aa   a   =    1     J   ab        V   S   (    R   ab     F   ab   b    )   S   ab   b            Store   F   a 0   a   ,   S   aa   a   ,   e   a 0   a       Return to the element Q  ab ,   S   ab   b   ,   C   ab   ,    \u2202   S   ab   b     \u2202   T   a      ,    \u2202   Q   ab     \u2202   e   ab   b      and    \u2202   Q   ab     \u2202   T   a               We now describe the element technology for hexahedra which uses the constitutive algorithm described in the previous section. Our approach to assumed-strains consists of using a weighted least-squares derivation. We use the following quadratic function that will be subsequently minimized in closed-form:  (34)  L =   1   2     \u222b     \u03a9   b     [    (   E   \u02dc   \u2212 E )   T   W (   E   \u02dc   \u2212 E )  ]  d   \u03a9   b     where E is the displacement-based relative strain,   E   \u02dc   is the assumed relative strain, still unknown at this point, and W is the symmetric, positive-definite weight matrix. To produce a purposeful   E   \u02dc   , the weight matrix W must possess the following properties:  1.   W must be independent of \u03be . This will be necessary for the satisfaction of the Patch-test.    W must be positive-definite to ensure that stationarity of L implies minimization.  Under small-strain, linear elastic conditions, L should represent the strain energy corresponding to an imposed strain equating the difference   E   \u02dc   \u2212 E .   L must have energy units.    W must be independent of any quantities defined on \u03a9  a . This substantially simplifies the linearization calculations.  In matrix T ( \u03be ) two effects are included:  \u2022 The dependence on the parent-domain coordinates \u03be (interpolation matrix Q ( \u03be ) defined below).  A coordinate transformation from parent-domain to global coordinates is performed by matrix   R   J   :  (37)    R   J   = [       J   11   2       J   12   2       J   13   2     2   J   12     J   11     2   J   13     J   11     2   J   13     J   21         J   21   2       J   22   2       J   23   2     2   J   22     J   21     2   J   23     J   21     2   J   23     J   22         J   31   2       J   32   2       J   33   2     2   J   32     J   31     2   J   33     J   31     2   J   33     J   32         J   11     J   21       J   12     J   22       J   13     J   23       J   12     J   21   +   J   11     J   22       J   13     J   21   +   J   11     J   23       J   13     J   22   +   J   12     J   23         J   11     J   31       J   12     J   32       J   13     J   33       J   12     J   31   +   J   11     J   32       J   13     J   31   +   J   11     J   33       J   13     J   32   +   J   12     J   33         J   21     J   31       J   22     J   32       J   23     J   33       J   22     J   31   +   J   21     J   32       J   23     J   31   +   J   21     J   33       J   32     J   23   +   J   22     J   33       ]      The only remaining point of discussion is the choice of W . If we select W as the tangent modulus, i.e. W = C , then condition (3) for the small-strain elastic case is satisfied. Conditions (2) and (4) are also satisfied in all stable cases, however conditions (1) and (5) must be explicitly enforced in general. With that goal, a modified C is used, here denoted as   C   \u22c6   . It is established as  (41)    C   \u22c6   =   1     \u03a9   b       \u222b     \u03a9   b     C   |   b    d   \u03a9   b        In that case, we obtain  (42)    E   \u02dc   =   C   \u22c6   \u2212 1     T   \u00af   ( \u03be )   [    \u222b   \u03a9       T   \u00af     T     C   \u22c6   \u2212 1     T   \u00af    d \u03a9  ]   \u2212 1     \u222b   \u03a9       T   \u00af     T   E  d \u03a9   where  (43)    T   \u00af   = T   |   J   =   J   \u00af     with   J   \u00af   being the centroid Jacobian. We use (43) to ensure satisfaction of the Patch test, as previously mentioned in Simo and Armero [35]. Of course, we obtain the first and second variations of   E   \u02dc   as  (44)  \u03b4   E   \u02dc   =   C   \u22c6   \u2212 1     T   \u00af   ( \u03be )   [    \u222b   \u03a9       T   \u00af     T     C   \u22c6   \u2212 1     T   \u00af    d \u03a9  ]   \u2212 1     \u222b   \u03a9       T   \u00af     T   \u03b4 E  d \u03a9      (45)  d \u03b4   E   \u02dc   =   C   \u22c6   \u2212 1     T   \u00af   ( \u03be )   [    \u222b   \u03a9       T   \u00af     T     C   \u22c6   \u2212 1     T   \u00af    d \u03a9  ]   \u2212 1     \u222b   \u03a9       T   \u00af     T    d \u03b4 E  d \u03a9   where (44) is used in the weak form of equilibrium and (45) is used in the Newton iteration. Results (42)\u2013(45) are implemented symbolically with Mathematica and AceGen [21]. Even with these tools, calculations are rather complex. The strain\u2013displacement matrix corresponding to relation (44) is denoted   B   \u02dc   . For node K,  (46)      B   \u02dc     K   =   C   \u22c6   \u2212 1     T   \u00af   ( \u03be )   [    \u222b   \u03a9       T   \u00af     T     C   \u22c6   \u2212 1     T   \u00af    d \u03a9  ]   \u2212 1     \u222b   \u03a9       T   \u00af     T        [       N   1 K     0   0     0     N   2 K     0     0   0     N   3 K         N   2 K       N   1 K     0       N   3 K     0     N   1 K       0     N   3 K       N   2 K       ]   \ufe38       B   K       d \u03a9   where i is the direction index ( i = 1 , 2 , 3 ) and K is the node index ( K = 1 , \u2026 , 4 ). In addition, in (46)   (47)    N   iK   =   \u2202   N   K     \u2202   \u03be   i       and   N   K   =   1   8   (  1 +   \u03be   1 K     \u03be   1    ) (  1 +   \u03be   2 K     \u03be   2    ) (  1 +   \u03be   3 K     \u03be   3    ) are the standard tri-linear shape functions (e.g. [19]).  Eq. (44) can be written as  (48)  \u03b4   E   \u02dc   =   B   \u02dc   \u03b4   u   N     where   B   \u02dc   is the classical strain\u2013displacement matrix (here 6\u00d724) and \u03b4   u   N   are the nodal displacement variations. Since   B   \u02dc   represents a linear transformation, we can apply the (linear) constraints by pre-multiplying   B   \u02dc   with the appropriate constraint matrix. Since 8 quadrature points are adopted, the number of discrete constraints equals the number of quadrature points.  \u2022 Incompressibility   {    I   3     B   \u02dc   \u03b4   u   N    }   j   = 0 where   I   3   = { 1 , 1 , 1 , 0 , 0 , 0 } , j = 1 , \u2026 , 8 .  Kirchhoff\u2013Love constraints   {    K   13     B   \u02dc   \u03b4   u   N    }   j   = 0 and   {    K   23     B   \u02dc   \u03b4   u   N    }   j   = 0 where   K   13   = { 0 , 0 , 0 , 0 , 1 , 0 } and   K   23   = { 0 , 0 , 0 , 0 , 0 , 1 } , j = 1 , \u2026 , 8 .  Eq. (49) states that a given constraint is enforced in each of the 8 quadrature points simultaneously. This will in turn generate a subspace of   R   24   which contains all constraint-satisfying nodal displacements. To perform a comparison with our proposal, we make use of the B-bar element by Hughes (cf. [19,38]) and the displacement-based element. Locking (shear, incompressibility) is identified by studying rank[C]. Table 1 shows the results (obtained with Mathematica) for three elements. Note that B-bar formulation, although potentially better for incompressibility than our present formulation, presents the exact same rank as the displacement-based element for Kirchhoff\u2013Love constraints.  The classical Patch-test of MacNeal and Harder [26] is here reproduced (cf. Fig. 4 ). We impose displacements at the boundary nodes (shown in blue in Fig. 4) according to  (50)    u   1   = 5 \u00d7   10   \u2212 4   (  2   x   1   +   x   2   +   x   3    )   u   2   = 5 \u00d7   10   \u2212 4   (    x   1   + 2   x   2   +   x   3    )   u   3   = 5 \u00d7   10   \u2212 4   (   x   1   +   x   2   + 2   x   3   )      Inner node displacements must also obey Eq. (50). Inserting coordinates shown in Fig. 4, we obtain the displacements shown in Table 2 . The proposed least-square element satisfies exactly the Patch-test.  The goal of this section is to ensure the correctness and effectiveness of the proposed formulation, as well as accuracy in the following contexts:  \u2022 Linear analyses (with distorted meshes) including problems typically solved with shell elements.  Geometrically nonlinear problems.  Finite strain plasticity with step-size assessment.  With the role of linear verification and based on our prior experience with element technology, we select 2 classical beam problems, 2 plate problems, 2 shell problems and 1 nearly incompressible block, see Fig. 5 for the complete description. Similar tests have been used by Areias [4]. Beam I is a parametrized distortion test which is essential in identifying suboptimal elements (cf. [17]) and is repeated here in 3D. We note that (see Fig. 6 ) our formulation produces close-to-best performance. Beam II is a fixed-mesh distorted problem with two load cases (Case A with shear and Case B in pure bending) when compared with Korelc and Wriggers [22] our formulation produces slightly better results (cf. Table 3 ). Our HIS [4] element behaves better for Case B. Plate I is the classical circular plate with irregular quadrilaterals (see, e.g. [8]), in which we found that our HIS element was slightly better and both solid elements are competitive with MITC4 by Bathe [8] in this simple test. Plate II is the skewed simply supported plate widely used in benchmarking. We show in Table 3 the comparison with two well-known formulations. Our present element is competitive to HIS and superior to both Bathe and Dvorkin [8] and Andelfinger and Ramm [1]. Two more demanding tests are the pinched cylinder and the twisted beam (in the thinner version). In the latter, we found that our element outperforms Areias and Belytschko QBM [7] dedicated shell element. Finally, we use the quasi-incompressible block by Andelfinger and Ramm [1] to inspect the convergence behavior (both energy and displacement) with the present element and B-bar. The convergence rate is the same, however the present formulation shows higher accuracy for coarse meshes, as shown in Fig. 10. Note that the results in [1] are clearly not converged.  See   Figs. 7\u22129 for a comparison with results from the literature.   We consider a simply supported composite plate with an incrementally linear Hookean orthotropic (cf. [32]) law:  (51)  \u0394     S   \u02c7     a   = C   e   ab     where C is the orthotropic elasticity Voigt matrix (see [32, p. 28] for its inverse). For the properties, we use Glass/Epoxy GE-2 material from Table 2.2.1 of Reddy [32]. Fig. 11 shows the relevant data and orthotropic properties for the depicted frame, as well as mesh deformations with the corresponding principal anisotropic directions that follow the deformation. We assess the step-size influence in the results in Fig. 12 to conclude that, for finite strains, a distinct but reasonable (50 or 100) quantity of steps produces very similar results. Note that we purposively employed an incremental orthotropic law to force the use of relative strains. However, this has no visible effect in the results.  We use a three-dimensional variant of Crisfield\u05f3s block indentation [15] problem who pointed out instabilities in the Simo\u2013Armero [35] formulation. Relevant data and results are shown in Fig. 13 . We note the following:  \u2022 Our present formulation is completely stable in this problem. Hourglass patterns are absent. In addition, results are more compliant than with the B-bar element. Hourglassing with B-bar and u \u2212 p formulations is well documented (see, e.g. [19]).  The B-bar element results in severe hourglassing and fails to successfully complete the analysis.  We perform a test of a nearly cylindrical specimen originally made of ASTM A-533 steel. It is subject to an imposed displacement in its base. This specific geometry is used to force necking and was adopted by Simo [34] (see also Reference [36] where the test is explored in further detail) in the context of plasticity in principal components, where radial return was still applicable. Test data was obtained by Norris et al. [28] who performed an experimental test and used a 2D finite-difference simulation with grid rezoning in the specimen core. We use the properties of their specimen 2499R and a piece-wise linear law adapted from the one by Simo [34]. Finite element simulations based on a finite-strain version of the radial-return algorithm result in convergence problems after the limit point is reached (cf. [42, pp. 358\u2013359]). The geometry, boundary conditions and material properties are summarized in Fig. 14 and Table 4 .  Step-size dependence for the von-Mises (Fig. 15 ), Hill (Fig. 16 ) and Barlat 91 (Fig. 17 ) yield functions shows that drift occurs with a small number of time-steps and gradually disappears when more than 80 steps are employed. Deformed meshes and effective plastic strain for 160 steps are shown in Fig. 18 . If a finer mesh is adopted, some differences occur in the necking region, which are reported in Fig. 19 .  The channel beam problem was proposed by Chr\u00f3\u015bcielewski\u05f3s group [13], with a longer beam version being introduced by Wagner and Gruttmann [40]. More recently, Chr\u00f3\u015bcielewski and Witkowski [14] compared results for both versions. We use these references for comparison with our results, in addition to the TUBA element implementation by Vladimirov (cf. [20]). Relevant data is shown in Fig. 20 for the two cases. In case A, comparison with results of Chr\u00f3\u015bcielewski and Witkowski (EAS14m1), cf. Fig. 21 , shows that the present element achieves a total displacement of 6 consistent units, when compared with 2.5 in other references. Results for case B are shown in Fig. 22 , where we can observe that Wagner and Gruttmann results are slightly stiffer, a fact also reported by Chr\u00f3\u015bcielewski and Witkowski [14].  For the elasto-plastic pinched cylinder (cf. Fig. 23 ), excellent results were obtained with a very small number of steps (10), and these agree with Wagner, Klinkel and Gruttmann [41]. Note that a full elasto-plastic algorithm is used instead of radial return, since further constraints such as plane stress could be applied. Fig. 24 shows the comparison. Robustness is very high and is related to the small elastic strains involved.   CONCLUSIONS   We introduced the following novelties in the general 3D element formulations:  \u2022 A semi-implicit constitutive integration algorithm with quadratic relative Green\u2013Lagrange strains and explicit rotations.  Finite strain evolution of anisotropic axes is obtained as a rotation of the L\u00f6wdin frame. A comparison with rotation matrix resulting from the polar-decomposition was shown.  Linearization is much simplified, as rotation terms are explicitly integrated.  A hexahedral element with assumed-strains, avoiding the use of enhanced strains (cf. [4]). The element was found to be locking-free for both quasi-incompressibility and shear. No hourglassing was found and overall accuracy was found to be similar to the HIS element (cf. [4]). However, HIS must be stabilized to avoid hourglassing and contains 18 additional degrees-of-freedom.  Absence of internal degrees-of-freedom.  Absence of discernible hourglass modes.  Direct application to anisotropic materials.  B-bar style implementation (with the   B   \u02dc   matrix given by Eq. (46)).  Straightforward linearization when compared with other formulations.   ACKNOWLEDGMENTS   The authors gratefully acknowledge financing from the \"Funda\u00e7\u00e3o para a Ci\u00eancia e a Tecnologia\" under the Project PTDC/EME-PME/108751 and the Program COMPETE FCOMP-01-0124-FEDER-010267.   REFERENCES", "highlights": "Two novelties are introduced: (i) a finite-strain semi-implicit integration algorithm compatible with current element technologies and (ii) the application to assumed-strain hexahedra. The L\u00f6wdin algorithm is adopted to obtain evolving frames applicable to finite strain anisotropy and a weighted least-squares algorithm is used to determine the mixed strain. L\u00f6wdin frames are very convenient to model anisotropic materials. Weighted least-squares circumvent the use of internal degrees-of-freedom. Heterogeneity of element technologies introduce apparently incompatible constitutive requirements. Assumed-strain and enhanced strain elements can be either formulated in terms of the deformation gradient or the Green\u2013Lagrange strain, many of the high-performance shell formulations are corotational and constitutive constraints (such as incompressibility, plane stress and zero normal stress in shells) also depend on specific element formulations. We propose a unified integration algorithm compatible with possibly all element technologies. To assess its validity, a least-squares based hexahedral element is implemented and tested in depth. Basic linear problems as well as 5 finite-strain examples are inspected for correctness and competitive accuracy."}