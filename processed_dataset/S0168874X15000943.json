{"id": "S0168874X15000943", "article": "MAIN-TITLE Legendre spectral finite elements for Reissner\u2013Mindlin composite plates   HIGHLIGHTS          First static and dynamic study of LSFEs for RM composite plates on unstructured grids.      First comparison of RM LSFEs with SHELL281 elements in terms of model size, CPU time.      Demonstration that LSFEs can provide orders of magnitude more accuracy than SHELL281.          KEYPHRASES   Composite  Finite element  High order  Numerical methods  Reissner\u2013Mindlin   In this paper we examine the performance of Legendre spectral finite elements (LSFEs) for calculating the static and dynamic response of composite Reissner\u2013Mindlin (RM) plates. RM plate and shell models are commonly used in commercial finite element (FE) codes. Examples include the SHELL181 and SHELL281 elements in ANSYS\u00ae [1] and the S4R element in Abaqus\u00ae [2]. LSFEs are pth-order Lagrangian-interpolant FEs whose nodes are located at the p + 1 Gauss\u2013Lobatto\u2013Legendre (GLL) points. LSFEs can provide exponential (i.e., spectral) convergence rates through p-refinement while maintaining the geometric-modeling capabilities of low-order FE methods. The motivation for using LSFEs over low-order FEs can be stated from two perspectives. For a given computational effort (either in terms of model size or computing time), LSFEs can provide dramatically more accurate solutions than low-order elements. Alternatively, if one requires a certain accuracy level, LSFEs can require dramatically less computational effort.  Spectral finite elements were first introduced by Patera [3] for computational fluid dynamics, where the nodes of the Lagrangian-interpolant basis functions were located at the Gauss\u2013Lobatto\u2013Chebyshev (GLC) points. Ronquist and Patera [4] introduced LSFEs with nodes located at the GLL points for fluid dynamics. Since their inception, LSFEs have seen continued development and application in many disciplines (e.g., fluids, acoustics, geophysics). However, their application to structural dynamics has been comparatively limited (see, e.g., Brito and Sprague [5] for more discussion).  LSFEs were first applied to isotropic RM plates by Zrahia and Bar-Yoseph [6], where all FE inner products were evaluated with GLL nodal quadrature. While nodal quadrature is a reduced quadrature scheme for RM-plate mass and stiffness matrices, it is appealing because it is sufficiently accurate to maintain the order of convergence of the method [7], it provides consistent diagonal mass matrices [8], and GLL quadrature requires less computational effort than Gauss\u2013Legendre quadrature for evaluation of stiffness-matrix inner products. Zrahia and Bar-Yoseph [6] showed, on a rectangle-domain mesh composed of a single square element, exponential convergence rates for static-deformation and natural-frequency problems. They also found, for their test case, that the LSFEs were shear-locking free. Kudela et al. [9] applied LSFEs in space and time to wave propagation in RM composite plates, where square elements were used along with nodal quadrature. Moleiro et al. [10,11] applied LSFEs in a least-squares formulation for RM plates where static deformation and natural frequencies were calculated on a structured grid for a rectangular plate. Unlike Zrahia and Bar-Yoseph [6], who employed nodal quadrature, Moleiro et al. [10,11] employed full Gauss\u2013Legendre quadrature for mass and stiffness inner products. Again, solutions were found to be insensitive to shear locking. Liu et al. [12] examined Mindlin spectral elements for isotropic plates where the nodes were located at the Chebyshev\u2013Gauss\u2013Lobatto points, and both nodal and Guass-Legendre quadrature were examined for stiffness matrix calculations but only nodal quadrature was used for mass matrices, which were in turn diagonal. As with Zrahia and Bar-Yoseph, shear-locking studies were limited to square elements, and both quadrature schemes produced solutions insensitive to shear locking. The elements described by Liu et al. [12] were used by Hu et al. [13] to characterize damage size in metallic plates.  Brito and Sprague [5] examined LSFEs applied to the static and dynamic response of isotropic RM plates on an unstructured grid for a circular plate. They demonstrated that LSFEs on an unstructured grid, and whose inner products were calculated with nodal quadrature, were prone to shear locking in the limit of vanishing plate thickness. This was attributed to the non-constant Jacobian of the element mapping. Brito and Sprague [5] introduced a mixed reduced quadrature scheme for which the shear-stiffness inner products were evaluated with reduced Gauss\u2013Legendre quadrature, and bending-stiffness inner products were evaluated with nodal quadrature. This mixed scheme was shown to be locking free and maintained the desired exponential convergence rates. Also examined was the computational cost of LSFEs compared to standard first- and second-order elements for static- and dynamic-deformation problems. LSFEs offered dramatic savings over low-order elements. For the static problems, linear systems were solved with a Jacobi-preconditioned conjugate gradient solver, and for which LSFE matrix\u2013vector products were evaluated in a tensor-product-factorized form. For the dynamic problems, central finite differences were employed.  In this paper, we compare LSFEs against the serendipity-type quadratic SHELL281 elements in the commercial code ANSYS for a composite Reissner\u2013Mindlin plate discretized with an unstructured grid. For static deformation, accuracy is examined in terms of model size (number of nodes), required memory storage, and computation wall-clock time for solution of linear systems where the LSFE and SHELL281 systems were solved with the same sparse-system direct solver. For dynamic deformation, the LSFE and SHELL281 models were discretized with a standard implicit trapezoidal rule, and accuracy is compared in terms of model size and computation time.  The Reissner\u2013Mindlin plate LSFEs are formulated with a Bubnov\u2013Galerkin approach. The formulation, where trial and weight functions are the same Lagrangian-interpolant functions, is well established (see, e.g., Hughes [14]). We provide here a brief overview. The fundamental assumptions grounding Reissner\u2013Mindlin plate deformation are that (i) in-plane displacements vary linearly through the plate thickness, (ii) stress in the normal direction is negligible, and (iii) transverse displacement is constant through the thickness.  We are interested in calculating the static and dynamic responses of a plate with constant thickness h, whose midplane spans a domain \u03a9 in the (x, y) plane. For our analyses, external forcing is restricted to a transverse distributed force f ( x , y ) and boundary conditions are assumed to be clamped unless otherwise noted. The formulation is readily extended to accommodate more general forcing and/or boundary conditions. The generalized displacement vector of the plate midplane is denoted U =   [  u  v  w    \u03b8   y      \u03b8   x    ]   T   , where u ( x , y ) , v ( x , y ) , and w ( x , y ) are the midplane displacements in the x, y, and z directions, respectively.   \u03b8   y   ( x , y ) and   \u03b8   x   ( x , y ) are the plate rotations about the y and x axes, respectively.  In our finite-element discretization, \u03a9 is represented as n  el non-overlapping quadrilateral elements with straight or curved edges, each with domain \u03a9  e , such that  (1)  \u03a9 \u2248   \u03a9   h   =   \u22c3   e = 1     n   el       \u03a9   e   .   The element domain is given by x \u2208   \u03a9   e   , where  (2)  x =   \u2211     i   ^   = 1     ( p + 1 )   2       x     i   ^       \u03a6     i   ^     ,   where   x     i   ^     =   [       x     i   ^         y     i   ^         ]   T   is the location of node   i   ^   , and   \u03a6     i   ^     ( x , y ) is the   i   ^   th Lagrangian interpolant based on a tensor product of two one-dimensional pth-order-polynomial Lagrangian interpolants,   i   ^   \u2208 { 1 , \u2026 ,   ( p + 1 )   2   } . As described in Appendix A, the subscript index with a \u201chat\u201d denotes a lexicographical numbering. In a LSFE formulation, nodes are located at the ( p + 1 ) \u00d7 ( p + 1 ) GLL quadrature points (in element natural coordinates). This node positioning provides optimal polynomial interpolation (with respect to the L 2 norm) [15] and is the fundamental difference between LSFEs and traditional high-order FEs that have nodes evenly spaced throughout the element domain. For the dependent variables, we employ an isoparametric formulation and the generalized-displacement approximation   U   h   \u2248 U is represented (over element domain \u03a9  e ) as  (3)    U   h   =   \u2211     i   ^   = 1     ( p + 1 )   2       U     i   ^       \u03a6     i   ^     ,   where   U     i   ^     =   [       u     i   ^     e       v     i   ^     e       w     i   ^     e       \u03b8     i   ^     y , e       \u03b8     i   ^     x , e       ]   T   is the generalized displacement at node   i   ^   .  The element-level semi-discrete equations governing motion may be written as  (4)  M     U   \u00a8     h   +   KU   h   = F ,   where an overdot denotes a time derivative, M is the mass matrix, K is the stiffness matrix, and F is the force vector. For the stiffness-matrix inner products, unless noted otherwise, the mixed-reduced quadrature introduced in Brito and Sprague [5] was employed, where bending- and extensional-stiffness terms were evaluated with ( p + 1 ) \u00d7 ( p + 1 ) nodal quadrature and shear-stiffness terms were evaluated with p \u00d7 p Gauss\u2013Legendre quadrature. Mass-matrix inner products were evaluated with nodal quadrature, which resulted in diagonal mass matrices. For comparison studies with low-order elements, stiffness matrices were stored in a compressed-storage-column (CSC) format and only the diagonals of LSFE mass matrices were stored.  One of our numerical studies compares, for static-deformation LSFE systems, the computational cost of sparse-system solution with a preconditioned conjugate-gradient iterative solver. For iterative linear-system solution, the primary computational cost resides in the evaluation of matrix\u2013vector products. Matrix\u2013vector products can be efficiently evaluated in two ways. In the first approach, the sparse global stiffness matrix is calculated and stored and a sparse matrix\u2013vector-product algorithm can be applied. The LSFE element-stiffness matrix is, in general, full and is 5   ( p + 1 )   2   \u00d7 5   ( p + 1 )   2   . Hence, the global matrix\u2013vector product requires O (   p   4   ) operations and O (   p   4   ) storage per element. The second approach is \u201cmatrix free\u201d, where the matrix\u2013vector product is calculated over each element incorporating quadrature and stiffness matrices are never explicitly calculated. In a naive implementation, this requires O (   p   6   ) operations and negligible storage [5]. However, the tensor-product form can be effectively factorized [16] reducing the matrix\u2013vector calculation cost to O (   p   3   ) operations with O (   p   2   ) storage per element [5]. Details regarding the LSFE matrices and their matrix\u2013vector tensor-product factorization are included in Appendix B.  We are interested in comparing the performance of LSFEs for composite RM plates with that of state-of-the-art low-order elements for static and dynamic linear deformations. To that end we compare against the SHELL281 quadrilateral elements of the commercial FE package ANSYS. SHELL281 elements are serendipity type with eight nodes, and are based on the formulation of Bathe and Dvorkin [17,1]. The elements have six degrees-of-freedom at each node (including a drilling degree-of-freedom). 2 \u00d7 2 quadrature is employed in-plane and three quadrature points per layer are employed through the thickness. The material shear stiffness is calculated through an ANSYS-proprietary approach. In order to ensure that the SHELL281-element model was solving the same governing RM equations as the LSFE model, two modifications were required. First, the drilling degrees of freedom were eliminated and the drilling stiffness was set to zero. Second, the material shear stiffness was calculated directly from the standard RM equations with a shear correction factor of 5/6 (see, e.g., [18], also described in Appendix A). For dynamic simulations, SHELL281 mass matrices were both calculated in consistent and lumped configurations. The global stiffness and mass matrices were exported from ANSYS in Harwell\u2013Boeing (HB) sparse-matrix format [19], which is the CSC format plus additional file-header meta data. Force vectors were also exported from ANSYS.  Dynamic analyses were performed with a standard trapezoidal-rule implicit algorithm (see, e.g., Cook et al. [20]).  Linear systems that arose for the static and dynamic FE equations, for both LSFE and ANSYS SHELL281 models, were solved with packages from the HSL Mathematical Software Library [21] coupled with the METIS graph-partitioning libraries. In particular, sparse-system direct solves were accomplished with the HSL_MA97 package, which is based on a multi-frontal method and sparse Cholesky factorization. Indirect sparse-linear-system solves were accomplished with the MI28 package, which is a conjugate-gradient (CG) solver with preconditioning.  LSFE mass and stiffness matrices were calculated with an in-house Fortran 90 code. SHELL281-element mass and stiffness matrices were calculated with ANSYS version 15.0. As described above, LSFE mass matrices were diagonal, whereas SHELL281 mass matrices calculated in either lumped or consistent configurations. For static and dynamic simulation, a Fortran 90 code was created for each that imported mass and stiffness matrices stored in CSC format. This enabled simulations with mass and stiffness matrices created from either the LSFEs or the ANSYS SHELL281 elements. As described above, these codes were equipped with the HSL_MA97 sparse linear-system solver. Having the same code and the same linear-system solvers enabled \u201capples-to-apples\u201d comparisons between the underlying formulations. A separate Fortran code was used to examine LSFE-model computation time with the HSL MI28 conjugate-gradient solver with default tolerance settings.  For our computational-simulation timing tests, the codes were compiled with the Intel\u00ae Fortran compiler version 13.1.3 with optimization enabled. Simulations were run in serial on a single computational core CPU (core Intel Xeon CPU, E5-2670) free of other application burdens. For a static simulation, the total computation time was calculated as the elapsed wall-clock time required for matrix factorization (in direct solves) and linear-system solution. For a dynamic simulation, total computation time was calculated as that required for matrix factorization and all subsequent solves at each time step. Total computation time in each configuration was taken as the average of at least five simulations.  We consider composite plates composed of layers of orthotropic material with properties  (5)    E   2   =   E   1   / 25 ,      (6)    G   23   = 0.2   E   2   ,    G   13   =   G   12   = 0.5   E   2   ,      (7)    \u03bd   12   = 0.25 ,    \u03bd   21   =   \u03bd   12       E   2       E   1     ,   where E  i is the Young\u05f3s modulus in the i th direction (1 being the fiber direction), G  ij is the shear modulus in the i\u2013j plane, and \u03bd  ij is the Poisson\u05f3s ratio for transverse strain in j direction when stressed in the i direction [22]. In our comparison studies, we examine two-layered plates with a 0 \u00b0 / 90 \u00b0 material layup, where the angles are the lamination angles indicating the fiber orientation (in the (x, y) plane) with respect to the positive x axis.  The majority of our numerical studies are for a circular plate with thickness h, radius R, midplane domain \u03a9, midplane boundary \u2202 \u03a9 , and clamped boundary conditions:  (8)  u = v = w =   \u03b8   y   =   \u03b8   x   = 0 ,  on  \u2202 \u03a9 .   For verification of our code, we examine below solutions for a square plate with side length a and with boundary conditions described below. We also examine a square plate with clamped-edges and four circular holes of radius R  h symmetrically located in the four quadrants of the square domain.  For all simulations full plates were discretized. Fig. 1 (a) shows the upper right quadrant of our 12-element base LSFE mesh for the circular plate with p=2 refinement. LSFE refinement is accomplished by increasing p on the base mesh. Fig. 1(b) shows a refined LSFE mesh with p=6. As described above, the LSFE nodes are located at the ( p + 1 ) \u00d7 ( p + 1 ) GLL points, which has nodes clustered near element boundaries as shown in Fig. 1(b). The base SHELL281-element mesh was identical to the base LSFE mesh (but without the element-center nodes). Refinement of the SHELL281-element model was accomplished by dividing the base-mesh into additional elements. Fig. 2 shows the upper right quadrant of our 32-element base LSFE mesh for the perforated square plate with p=2 refinement and a /   R   h   = 5 . Refinement of the perforated-square-plate mesh was accomplished in the same manner as for the circle-plate mesh for both LSFE and SHELL281-element models.   RESULTS   We consider first verification of our implementation of the LSFEs for composite RM plates as well as our ANSYS SHELL281 implementation. To that end, we examine the static deformation of a simply supported two-layer-composite square plate with side length a and thickness h = a / 10 under a uniform distributed load q 0 as described by Reddy [22]. The materials are the same as those described above. Table 1 shows grid-independent nondimensional center transverse-displacement solutions, (      w   c     h   3     E   2       q   0     a   4      ) \u00d7   10   3   , where w  c is center displacement. Converged results were obtained with increasing p in the LSFE model and increasing the number of elements in the SHELL281 model. The ANSYS and LSFE results agree with those of Reddy [22].  We consider here the static deformation of a clamped circular plate under uniform load with magnitude q 0. Fig. 3 shows the benchmark nondimensional in-plane and transverse midplane displacements  (9)  {      u   \u00af     b   ,     v   \u00af     b   ,     w   \u00af     b    } =     h   3     E   2       q   0     R   4     {    u   b   ,   v   b   ,   w   b    } ,   along y=0 and x=0 for plates with h / R = 10 and h / R = 100 . These benchmark displacements were calculated with a highly refined LSFE model (p=20). In-plane displacements are activated due to orthotropic nature of the composite materials, and the in-plane displacements are much larger in the thicker-plate configuration.   Fig. 4 shows the normalized error of the center transverse displacement w  c (compared with the benchmark center transverse displacement w  c   b ) as a function of the total number of model nodes n. Errors are shown for ANSYS SHELL281-element models and LSFE models. For the LSFE solutions, exponential convergence (with increasing model size via increasing element order) to machine precision is observed. Similar accuracy is observed for both plate thicknesses. The FE results (ANSYS SHELL281) show algebraic convergence with model refinement. For the three coarsest FE models, the ANSYS solutions for the thinner plate ( h / R = 100 ) are significantly less accurate than those for h / R = 10 . For the h / R = 10 plate, LSFEs offer comparable accuracy with the FEs for the two coarsest meshes, but otherwise provide orders of magnitude better accuracy for a given model size. For the thinner plate, LSFEs provide orders of magnitude more accuracy for all model sizes examined.   Fig. 5 (a) shows the normalized center-displacement errors of Fig. 4 plotted against the computation time taken by the HSL_MA97 sparse linear solver. As described above, computation time was taken as the sum of matrix factorization and solve time. Fig. 5(b) shows the same data plotted against the memory required. Memory required was calculated based on the number non-zero sparse storage entries and indexing data and the number of entries in the solution and right-hand-side vectors. The superior performance of LSFEs compared to the SHELL281 elements follows a similar trend as that shown in Fig. 4. For the thicker plate, LSFEs show comparable performance with the FEs for the two least-refined meshes, but otherwise provide orders of magnitude better accuracy for a given computation time or for a given memory-storage size. For the thinner plate, LSFEs dramatically outperform the SHELL281 elements at all refinement levels.  The SHELL281-element data shown in Figs. 4 and 5 imply a degradation in model performance for h / R \u2192 0 for a fixed model size (at the lower end of refinement). Fig. 6 shows the normalized error of the center displacement for four h / R values. The LSFE model had 209 nodes (p=4) and the SHELL281-element model had 609 nodes. These refinement levels were chosen because they yielded nominally equivalent center-displacement accuracy for the thickest-plate configuration ( h / R = 10 ). For each of these h / R configurations, the benchmark solution was calculated with a highly refined (p=20) LSFE model. The center displacements calculated with SHELL281 elements show significant accuracy degradation with decreasing h / R . LSFE results are shown where the stiffness matrices were calculated with either mixed-reduced quadrature (as described above) or full ( p + 1 ) \u00d7 ( p + 1 ) Gauss\u2013Legendre quadrature. In all cases, the LSFE results are dramatically more accurate than those of the SHELL281 elements. The LSFE results calculated with mixed-reduced quadrature are insensitive to changes in thickness, whereas the LSFEs calculated with full quadrature show a degradation in performance with decreasing plate thickness.  The results shown above were calculated with a sparse direct linear solver, which is appropriate considering the small sizes of the models at hand. However, we expect that for a large enough model, direct solution will be expensive, and one would resort to an iterative solver. Iterative solution methods are also of interest due to their ease of parallelization for simulation on multiple computer cores. Hence, we consider performance of several iterative-solve configurations for LSFE models.   Fig. 7 shows computation times as a function of LSFE model size (number of nodes) when calculated under three solver configurations and for two plate thicknesses ( h / R = 10 and 100). LSFE models were calculated with p = 2 , 3 , \u2026 , 10 , 12 , 14 . First shown are the computation times for sparse direct solves. Second shown are computation times for Jacobi-preconditioned CG (JPCG) solves where matrix\u2013vector products were calculated with a matrix-free algorithm that exploits a tensor-product factorization for the matrix\u2013vector product. The third are computation times for JPCG for which the global stiffness matrices were stored sparsely, and matrix\u2013vector products exploited sparsity. For all but the smallest two models, sparse direct solution is the most expedient. For the smallest models, it is likely that the computation overhead associated with factorization and linear-system solution in the direct solver is dominating computation time, whereas there is no such overhead in the JPCG solution. While the computation times for the two plate thicknesses are essentially the same for direct solution, the thinner plate requires more JPCG computation time than the thicker plate, which implies a larger condition number. As described above, matrix-free evaluation of matrix\u2013vector products is accomplished in a factorized form, which requires O (   p   3   ) operations, whereas sparse matrix\u2013vector products require O (   p   4   ) operations. These two different operation requirements are reflected by the different JPCG slopes shown in Fig. 7. While JPCG solution with matrix-free evaluation of matrix\u2013vector products will be more efficient than sparse matrix\u2013vector products for sufficiently large p, we see that the cross-over is at p=8 for the systems at hand.  We consider the deformation of a composite corner-supported square plate with a / h = 10 under a uniform load. This is a common test case for spurious zero energy modes (see, e.g., [23]). A benchmark solution was calculated with an extremely refined ANSYS SHELL281-element model on a structured grid with about 1.3 \u00d7   10   7   nodes. The LSFE model was composed of 4 square elements and stiffness matrices were calculated with full quadrature. As perhaps expected, the stiffness matrix was singular when calculated with mixed-reduced quadrature. Fig. 8 shows the normalized error of center displacement as a function of the total number of nodes. respectively. For this configuration, both the SHELL281 and LSFE models show poor convergence rates. However, the LSFE results are significantly more accurate for a given model size.  As a final static study, we consider the deformation of a clamped-edge perforated square plate with a / h = 20 under a uniform pressure load. The benchmark solution was calculated with a refined ANSYS SHELL281 model with 1.6 \u00d7   10   6   nodes. Fig. 9 shows normalized center-displacement errors as a function of the total number of nodes and as a function of computation time. LSFE results were calculated with both mixed-reduced and full quadrature. Here, LSFE results show little dependence on quadrature choice. While LSFE results show better convergence with model size when compared with the SHELL281 results, we see that both LSFE and SHELL281 elements exhibit similar performance in terms of computation time.  We consider here the performance of LSFEs and ANSYS SHELL281 elements under implicit direct time integration with fixed nondimensional-time increment \u0394   t  \u00af  . For the SHELL281 elements, we examine solution accuracy for both consistent and lumped mass matrices. LSFE mass matrices are lumped through nodal quadrature. Time integration is accomplished with a standard Trapezoidal rule algorithm. The linear-system solve required at each step was accomplished with the HSL_MA97 sparse direct solver. As in the static-deformation studies, ANSYS and LSFE stiffness and mass matrices were imported into our time-integration software.  We consider the circular plate described above for h / R = 10 and 100 under a uniform transverse pressure load given by  (10)  p (   t   \u00af   ) = {          q   0     2    [  1 \u2212 cos (  10   t   \u00af   \u03c0  )  ] ,   0 \u2264   t   \u00af   \u2264 0.1 ,       q   0   ,     t   \u00af   > 0.1 ,       where   t   \u00af   is nondimensional time given by  (11)    t   \u00af   =   th     R   2           E   2     \u03c1     ,   and where t is the dimensional time and \u03c1 is the density. Fig. 10 shows the benchmark nondimensional center-displacement histories     w   \u00af     c   b   as a function of nondimensional time. Benchmark solutions were calculated with a highly refined LSFE model with p=20 and a nondimensional time increment \u0394   t   \u00af   = 5 \u00d7   10   \u2212 6   .   Fig. 11 shows the normalized maximum error of center displacement   \u03f5   max   as a function of nondimensional time increment, where  (12)    \u03f5   max   =     \u2016    w   c   \u2212   w   c   b    \u2016   max       \u2016    w   c   b    \u2016   max     ,   and where   \u2016  \u00b7  \u2016   max   denotes the maximum norm calculated over 0 \u2264   t   \u00af   \u2264 5 . Results for SHELL281 models are shown for n=162 and 609 nodes where the mass matrices were consistently calculated. Also shown are SHELL281 results for a lumped matrix and n=609. Results for LSFE models are shown for n=209 and 617 nodes. We make several observations regarding these results. First, we see that as \u0394   t   \u00af   \u2192 0 errors approach a constant, where the error is dominated by spatial-discretization errors. This plateau error level decreases with increasing spatial refinement. Second, these results show that, for approximately the same model size, an LSFE model provides access to significantly more accurate solutions than the SHELL281 elements as \u0394   t   \u00af   \u2192 0 . For example, for n \u2248 600 and \u0394   t   \u00af   =   10   \u2212 3   , the LSFE results provided 20 times and 34 times less error for h / R = 10 and 100, respectively. The SHELL281 results for n=609 and a lumped mass matrix are significantly worse than those calculated with a consistent mass matrix.   Fig. 12 shows the normalized maximum center-displacement errors of of Fig. 11 plotted as a function of computation time. For a given \u0394   t   \u00af   and nominally equivalent model size, we see that an LSFE model takes slightly longer to calculate, which can be attributed to the fuller matrices in the LSFE systems. For example, for \u0394   t   \u00af   =   10   \u2212 2   the SHELL281 n=609 model and the LSFE n=617 model require 6.7s and 7.7s, respectively. LSFEs, at their worst, require approximately the same computation time as the SHELL 281 elements for a given accuracy level. However, at their best, LSFEs provide more than an order of magnitude increase in accuracy for a given computation time over their SHELL281-element counterparts.  We examined the performance of Legendre spectral finite elements with respect to that of ANSYS SHELL281 serendipity-type elements for several two-layer composite plates. In our comparisons, both model types were solved with the same static- or dynamic-solver algorithms and software. LSFE solutions were examined where the stiffness matrix was calculated with either a mixed reduced quadrature, which was shown to be locking free for isotropic RM plates by Brito and Sprague [5], or full quadrature. For the dynamic simulations, LSFE mass matrices were lumped through the use of nodal quadrature. Solutions for SHELL281 elements were examined with lumped and consistent mass matrices.  For the static-deformation studies of a clamped-edge circular plate, the LSFEs greatly outperformed the SHELL281 elements in all aspects examined. In particular, compared to SHELL281-element models, LSFEs can provide dramatically more accuracy for a given number of model nodes, for a given computation time, and for a given computer memory storage. Further, for this case, the LSFEs were shown to be much more robust for thin plates when calculated with mixed reduced quadrature. However, LSFEs calculated with full Gauss\u2013Legendre quadrature showed a marginal degradation in accuracy with decreasing plate thickness. The degradation was also shown for the SHELL281-element model. We also examined static response of a corner-supported composite square plate. For this case, the LSFE stiffness matrices calculated with mixed-reduced quadrature were rank deficient. However, stiffness matrices calculated with full- quadrature yielded solutions more accurate than those produced with SHELL281 elements. In our final static study, we examined a clamped-edge square perforated plate where LSFE elements were highly deformed. Here, SHELL281 and LSFE solutions had accuracy that was commensurate in terms of model size and computation time.  While sparse direct solution of the relatively small linear systems examined here was most efficient, we examined the performance of Jacobi-preconditioned CG iterative solution of LSFE systems, where matrix\u2013vector products were evaluated with a sparsely stored stiffness matrix or a matrix-free tensor-product-factorized form. For these systems, LSFEs with p < 8 were most efficiently solved with sparse storage of the stiffness matrix, while LSFEs with p > 8 were most efficiently solved with the matrix-free form. However, the matrix-free form is appealing at all refinement levels because matrix\u2013vector-product evaluation requires minimal memory storage and is readily parallelized.  We have shown that LSFEs can offer orders of magnitude more accuracy, for a given model size or computation time, over the ANSYS SHELL281 elements for static and dynamic deformation of Reissner\u2013Mindlin composite plates. LSFE solutions, with stiffness matrices calculated with mixed reduced quadrature, were insensitive to shear locking, but can be susceptible to spurious zero-energy modes. Finally, while we focused here on implicit time integration, the diagonal mass matrices produced through nodal quadrature make LSFEs well suited to explicit time integration. Looking forward, we hope to extend this work in the creation of shell elements for linear and geometrically nonlinear deformation. We will build upon our success in applying the Legendre spectral element method to geometrically exact beam theory [24,25] for large elastic deformations.   ACKNOWLEDGEMENTS   This work was supported by the U.S. Department of Energy under Contract No. DE-AC36-08-GO28308 with the National Renewable Energy Laboratory. The U.S. Government retains and the publisher, by accepting the article for publication, acknowledges that the U.S. Government retains a nonexclusive, paid-up, irrevocable, worldwide license to publish or reproduce the published form of this work, or allow others to do so, for U.S. Government purposes. Funding was provided by the NREL Laboratory Directed Research and Development (LDRD) program through the grant \u201cHigh-Fidelity Computational Modeling of Wind-Turbine Structural Dynamics.\u201d The research was performed using computational resources sponsored by the Department of Energy\u2019s Office of Energy Efficiency and Renewable Energy and located at the National Renewable Energy Laboratory. We acknowledge insightful comments from the reviewers that led to an improved paper.  We describe here the LSFE basis functions, and the resulting mass and stiffness matrices used in our calculations for composite Reissner\u2013Mindlin plates. Mass and stiffness matrices described here follow the standard form described in Ochoa and Reddy [18]. As described in Section 2.1, LSFE two-dimensional basis functions are a tensor product of pth-order one-dimensional Lagrangian interpolant functions with nodes located at the ( p + 1 ) GLL points. The basis functions introduced in Eq. (3) may be written for the reference element domain   \u03a9   \u25a1   = {  (  \u03be , \u03b7  ) | \u2212 1 \u2264 \u03be \u2264 1 , \u2212 1 \u2264 \u03b7 \u2264 1  } as  (A.1)    \u03a6     i   ^     (  \u03be , \u03b7  ) =   \u03d5   i   ( \u03be )   \u03d5   j   ( \u03b7 ) ,      (A.2)    \u03a6     \u2113   ^     (  \u03be , \u03b7  ) =   \u03d5   \u2113   ( \u03be )   \u03d5   m   ( \u03b7 ) ,   where   i   ^   ,   \u2113   ^   \u2208 { 1 , \u2026 ,   ( p + 1 )   2   } are defined in lexicographical order as  (A.3)    i   ^   = i + ( p + 1 ) ( j \u2212 1 ) ,      (A.4)    \u2113   ^   = \u2113 + ( p + 1 ) ( m \u2212 1 ) ,   for i , j , \u2113 , m \u2208 {  1 , \u2026 , p + 1  } . The one-dimensional Lagrangian interpolants are defined for \u2212 1 \u2264 \u03b6 \u2264 1 as (see, e.g., Deville et al. [26])     \u03d5   i   ( \u03b6 ) = {     1    for  \u03b6 =   \u03b6   i   ,     \u2212    ( 1 \u2212   \u03b6   2   )   p ( p + 1 )   L   p   (   \u03b6   i   ) ( \u03b6 \u2212   \u03b6   i   )       d   L   p     d \u03b6       for  \u03b6 \u2260   \u03b6   i   ,       where   L   p   ( \u03b6 ) is the Legendre polynomial of degree p and \u03b6  i is the location of the ith GLL point. The p + 1 GLL points are the zeros of (  1 \u2212   \u03b6   2    )   d   L   p   ( \u03b6 )   d \u03b6   in \u2212 1 \u2264 \u03b6 \u2264 1 .  The element-level mass matrix is given by  (A.5)  M = [       M   1 , 1   d     \u22ef     M   1 ,   ( p + 1 )   2     d        \u22f1   \u22ee     sym .      M     ( p + 1 )   2   ,   ( p + 1 )   2     d   ,     ] ,   where  (A.6)    M     i   ^   ,   \u2113   ^     d   = diag [       M     i   ^   ,   \u2113   ^     uu       M     i   ^   ,   \u2113   ^     vv       M     i   ^   ,   \u2113   ^     ww       M     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   y         M     i   ^   ,   \u2113   ^       \u03b8   x     \u03b8   x         ] ,   and  (A.7)    M     i   ^   ,   \u2113   ^     uu   =   M     i   ^   ,   \u2113   ^     vv   =   M     i   ^   ,   \u2113   ^     ww   =   \u222b     \u03a9   \u25a1     \u03c1 h   \u03d5   i   ( \u03be )   \u03d5   j   ( \u03b7 )   \u03d5   \u2113   ( \u03be )   \u03d5   m   ( \u03b7 ) J  d \u03be  d \u03b7      (A.8)    M     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   y     =   M     i   ^   ,   \u2113   ^       \u03b8   x     \u03b8   x     =   1   12     \u222b     \u03a9   \u25a1     \u03c1   h   3     \u03d5   i   ( \u03be )   \u03d5   j   ( \u03b7 )   \u03d5   \u2113   ( \u03be )   \u03d5   m   ( \u03b7 ) J  d \u03be  d \u03b7   for   i   ^   ,   \u2113   ^   \u2208 { 1 , \u2026 ,   ( p + 1 )   2   } , and where J is the determinant of the mapping Jacobian. When ( p + 1 ) \u00d7 ( p + 1 ) GLL quadrature is employed, M is diagonal.  The element-level stiffness matrix is given by  (A.9)  K = [       K   1 , 1     \u22ef     K   1 ,   ( p + 1 )   2          \u22f1   \u22ee     sym .      K     ( p + 1 )   2   ,   ( p + 1 )   2         ] ,   where  (A.10)    K     i   ^   ,   \u2113   ^     = [       K     i   ^   ,   \u2113   ^     uu       K     i   ^   ,   \u2113   ^     uv     0     K     i   ^   ,   \u2113   ^     u   \u03b8   y         K     i   ^   ,   \u2113   ^     u   \u03b8   x            K     i   ^   ,   \u2113   ^     vv     0     K     i   ^   ,   \u2113   ^     v   \u03b8   y         K     i   ^   ,   \u2113   ^     v   \u03b8   x             K     i   ^   ,   \u2113   ^     ww       K     i   ^   ,   \u2113   ^     w   \u03b8   y         K     i   ^   ,   \u2113   ^     w   \u03b8   x          sym .      K     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   y         K     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   x               K     i   ^   ,   \u2113   ^       \u03b8   x     \u03b8   x         ] ,   for   i   ^   ,   \u2113   ^   \u2208 { 1 , \u2026 ,   ( p + 1 )   2   } . Each component of Eq. (A.10) may be written as a combination of three different stiffness inner-product forms:  (A.11)    K     i   ^   ,   \u2113   ^     uu   =   K     i   ^   ,   \u2113   ^     1   (    A   11   ,   A   16   ,   A   16   ,   A   66    ) ,      (A.12)    K     i   ^   ,   \u2113   ^     uv   =   K     i   ^   ,   \u2113   ^     1   (    A   16   ,   A   12   ,   A   66   ,   A   26    ) ,      (A.13)    K     i   ^   ,   \u2113   ^     u   \u03b8   y     =   K     i   ^   ,   \u2113   ^     1   (    B   11   ,   B   16   ,   B   16   ,   B   66    ) ,      (A.14)    K     i   ^   ,   \u2113   ^     u   \u03b8   x     =   K     i   ^   ,   \u2113   ^     1   (    B   16   ,   B   12   ,   B   66   ,   B   26    ) ,      (A.15)    K     i   ^   ,   \u2113   ^     vv   =   K     i   ^   ,   \u2113   ^     1   (    A   66   ,   A   26   ,   A   26   ,   A   22    ) ,      (A.16)     K     i   ^   ,   \u2113   ^     v   \u03b8   y     =   K     i   ^   ,   \u2113   ^     1   (    B   16   ,   B   66   ,   B   12   ,   B   26    ) ,      (A.17)    K     i   ^   ,   \u2113   ^     v   \u03b8   x     =   K     i   ^   ,   \u2113   ^     1   (    B   66   ,   B   26   ,   B   26   ,   B   22    ) ,      (A.18)    K     i   ^   ,   \u2113   ^     ww   =   K     i   ^   ,   \u2113   ^     1   (    A   55   ,   A   45   ,   A   45   ,   A   44    ) ,      (A.19)    K     i   ^   ,   \u2113   ^     w   \u03b8   y     =   K     i   ^   ,   \u2113   ^     2   (    A   55   ,   A   45    ) ,      (A.20)    K     i   ^   ,   \u2113   ^     w   \u03b8   x     =   K     i   ^   ,   \u2113   ^     2   (    A   45   ,   A   44    ) ,      (A.21)    K     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   y     =   K     i   ^   ,   \u2113   ^     1   (    D   11   ,   D   16   ,   D   16   ,   D   66    ) +   K     i   ^   ,   \u2113   ^     3   (    A   55    ) ,      (A.22)    K     i   ^   ,   \u2113   ^       \u03b8   y     \u03b8   x     =   K     i   ^   ,   \u2113   ^     1   (    D   16   ,   D   12   ,   D   66   ,   D   26    ) +   K     i   ^   ,   \u2113   ^     3   (    A   45    ) ,      (A.23)    K     i   ^   ,   \u2113   ^       \u03b8   x     \u03b8   x     =   K     i   ^   ,   \u2113   ^     1   (    D   66   ,   D   26   ,   D   26   ,   D   22    ) +   K     i   ^   ,   \u2113   ^     3   (    A   44    ) ,   where A  ij , B  ij , and D  ij (for (  ij  ) \u2208 { 11 , 12 , 22 , 16 , 26 , 66 } ) are extensional stiffnesses, bending\u2013extensional-coupling stiffnesses, and bending stiffnesses, respectively, which may be found in any number of textbooks (see, e.g., [18]), and  (A.24)    K     i   ^   ,   \u2113   ^     1   (  a , b , c , d  ) =   \u222b     \u03a9   \u25a1     {  (    \u2202   \u03a6   i     \u2202 \u03b6     \u2202 \u03b6   \u2202 x   +   \u03a6   i     \u2202   \u03a6   j     \u2202 \u03b7     \u2202 \u03b7   \u2202 x    ) \u00d7 [  a (    \u2202   \u03a6   \u2113     \u2202 \u03b6     \u03d5   m     \u2202 \u03b6   \u2202 x   +   \u03d5   \u2113     \u2202   \u03a6   m     \u2202 \u03b7     \u2202   \u03a6   n     \u2202 x    )    + b (    \u2202   \u03a6   \u2113     \u2202 \u03b6     \u03d5   m     \u2202 \u03b6   \u2202 y   +   \u03d5   \u2113     \u2202   \u03a6   m     \u2202 \u03b7     \u2202 \u03b7   \u2202 y    )  ] + (    \u2202   \u03a6   i     \u2202 \u03b6   +   \u03d5   j     \u2202 \u03b6   \u2202 y   +   \u03d5   i     \u2202   \u03a6   j     \u2202 \u03b7     \u2202 \u03b7   \u2202 y    ) + [  c (    \u2202   \u03a6   \u2113     \u2202 \u03b7   +   \u03d5   m     \u2202 \u03b6   \u2202 x   +   \u03d5   \u2113     \u2202   \u03a6   m     \u2202 \u03b7     \u2202 \u03b7   \u2202 x    )    + d (    \u2202   \u03a6   \u2113     \u2202 \u03b6     \u03d5   m     \u2202 \u03b6   \u2202 x   +   \u03d5   \u2113     \u2202   \u03a6   m     \u2202 \u03b7     \u2202 \u03b7   \u2202 x    )  ]  } J  d \u03b6    d   \u03b7        (A.25)    K     i   ^   ,   \u2113   ^     2   (  a , b  ) =   \u222b     \u03a9   \u25a1     [  a (    \u2202   \u03a6   i     \u2202 \u03b6     \u03d5   j     \u2202   \u03a6   \u03b6     \u2202 x   +   \u03d5   i     \u2202   \u03a6   j     \u2202 \u03b7     \u2202 \u03b7   \u2202 x    )  + b  (    \u2202   \u03a6   i     \u2202 \u03b6     \u03d5   j     \u2202 \u03b6   \u2202 y   +   \u03d5   i     \u2202   \u03a6   j     \u2202 \u03b7     \u2202 \u03b7   \u2202 y    )  ]   \u03d5   \u2113     \u03d5   m   J  d \u03b6  d \u03b7 ,      (A.26)    K     i   ^   ,   \u2113   ^     3   (  a  ) =   \u222b     \u03a9   \u25a1     a   \u03d5   i     \u03d5   j     \u03d5   \u2113     \u03d5   m   J  d \u03be  d \u03b7 ,.      We consider here matrix\u2013vector products involving the element-level generalized displacement vector and stiffness matrix, i.e.,  (B.1)  B = KU ,   where B =   [       B   1     \u2026     B     ( p + 1 )   2         ]   T   and   B     i   ^     =   [       B     i   ^     u       B     i   ^     v       B     i   ^     w       B     i   ^       \u03b8   y         B     i   ^       \u03b8   x         ]   T   . With K calculated, this product requires on the order of 5   ( p + 1 )   2   \u00d7   ( p + 1 )   2   , i.e., O (   p   4   ) , operations and O (   p   4   ) storage. Alternatively, one can write the matrix\u2013vector product in a matrix-free form, where stiffness-matrix inner products are evaluated via quadrature on-the-fly, which requires O (   p   6   ) operations and negligible storage. Matrix-free matrix\u2013vector products can, however, exploit a tensor-product factorization, which requires only O (   p   3   ) operations and O (   p   2   ) storage (for two-dimensional elements like plates and shells). The factorization is described in detail for isotropic plate elements in Brito and Sprague [5]. We describe here the final factorized form for composite plates, where, as in [5], we employed ( p + 1 ) \u00d7 ( p + 1 ) nodal (GLL) quadrature for bending- and extensional-stiffness terms, and p \u00d7 p Gauss\u2013Legendre quadrature for shear-stiffness terms. In the factorization process, nodal quadrature provides significant savings through tensor contractions enabled by the orthogonality of Lagrangian interpolants in the nodal-quadrature discrete inner product.  We describe first the final expressions for terms associated with bending and extensional stiffness. The matrix\u2013vector products for   B     i   ^     u   ,   B     i   ^     v   ,   B     i   ^       \u03b8   y     , and   B     i   ^       \u03b8   x     are as follows:  (B.2)    B   ij   u   =   \u2211   p = 1   p + 1   {    D   ip   [    \u03b3   11 pj   (    \u03c8   pj   u , 1   +   \u03c8   pj   u , 2    ) +   \u03b3   21 pj   (    \u03c8   pj   u , 3   +   \u03c8   pj   u , 4    )  ]   J   pj     W   p     W   j    +    D   jp   [    \u03b3   12 ip   (    \u03c8   ip   u , 1   +   \u03c8   ip   u , 2    ) +   \u03b3   22 ip   (    \u03c8   ip   u , 3   +   \u03c8   ip   u , 4    )  ]   J   ip     W   i     W   p    } ,      (B.3)    B   ij   v   =   \u2211   p = 1   p + 1   {    D   ip   [    \u03b3   11 pj   (    \u03c8   pj   v , 1   +   \u03c8   pj   v , 2    ) +   \u03b3   21 pj   (    \u03c8   pj   v , 3   +   \u03c8   pj   v , 4    )  ]   J   pj     W   p     W   j     +   D   jp   [    \u03b3   12 ip   (    \u03c8   ip   v , 1   +   \u03c8   ip   v , 2    ) +   \u03b3   22 ip   (    \u03c8   ip   v , 3   +   \u03c8   ip   v , 4    )  ]   J   ip     W   i     W   p    } ,      (B.4)      b   \u02dc     ij     \u03b8   y     =   \u2211   p = 1   p + 1   {    D   ip   [    \u03b3   11 pj   (    \u03c8   pj     \u03b8   y   , 1   +   \u03c8   pj     \u03b8   y   , 2    ) +   \u03b3   21 pj   (    \u03c8   pj     \u03b8   y   , 3   +   \u03c8   pj     \u03b8   y   , 4    )  ]   J   pj     W   p     W   j     +   D   jp   [    \u03b3   12 ip   (    \u03c8   ip     \u03b8   y   , 1   +   \u03c8   ip     \u03b8   y   , 2    ) +   \u03b3   22 ip   (    \u03c8   ip     \u03b8   y   , 3   +   \u03c8   ip     \u03b8   y   , 4    )  ]   J   ip     W   i     W   p    } +   b   ij     \u03b8   y   , S   ,      (B.5)      b   \u02dc     ij     \u03b8   x     =   \u2211   p = 1   p + 1   {    D   ip   [    \u03b3   11 pj   (    \u03c8   pj     \u03b8   x   , 1   +   \u03c8   pj     \u03b8   x   , 2    ) +   \u03b3   21 pj   (    \u03c8   pj     \u03b8   x   , 3   +   \u03c8   pj     \u03b8   x   , 4    )  ]   J   pj     W   p     W   j     +   D   jp   [    \u03b3   12 ip   (    \u03c8   ip     \u03b8   x   , 1   +   \u03c8   ip     \u03b8   x   , 2    ) +   \u03b3   22 ip   (    \u03c8   ip     \u03b8   x   , 3   +   \u03c8   ip     \u03b8   x   , 4    )  ]   J   ip     W   i     W   p    } +   b   ij     \u03b8   x   , S   ,   for all i , j \u2208 { 1 , \u2026 , p + 1 } , where J  ij is the determinant of the mapping Jacobian evaluated at the ij node (and GLL quadrature point), W  i is the ith GLL quadrature weight,   \u03b3   ij \u2113 m   is the ij entry of the inverse of the 2\u00d72 Jacobian mapping matrix evaluated at the \u2113 m node, and  (B.6)    D   ij   =      d   \u03d5   i     d \u03b6    |   \u03b6 =   \u03b6   j     ,   is the derivative of the ith Lagrangian interpolant evaluated at the jth GLL quadrature point. The \u03c8  ij terms are intermediate tensors associated with bending and extensional stiffness (identified by superscripts) which are evaluated with ( p + 1 ) \u00d7 ( p + 1 ) GLL (nodal) quadrature, which are listed below. The terms   b   ij     \u03b8   y   , S   and   b   ij     \u03b8   x   , S   are associated with shear stiffness, which are evaluated with p \u00d7 p Gauss\u2013Legendre quadrature and are described below.  The intermediate tensors in Eqs. (B.2) and (B.5) are evaluated in one of two forms dependent on material properties:  (B.7)    \u03c8   op   u , 1   =   \u03c8   op   1   (    A   11   ,   A   16   ,   A   12   ,   B   11   ,   B   16   ,   B   12    ) ,      (B.8)    \u03c8   op   u , 2   =   \u03c8   op   2   (    A   11   ,   A   16   ,   A   12   ,   B   11   ,   B   16   ,   B   12    ) ,      (B.9)    \u03c8   op   u , 3   =   \u03c8   op   1   (    A   16   ,   A   66   ,   A   26   ,   B   16   ,   B   66   ,   B   26    ) ,      (B.10)    \u03c8   op   u , 4   =   \u03c8   op   2   (    A   16   ,   A   66   ,   A   26   ,   B   16   ,   B   66   ,   B   26    ) ,      (B.11)    \u03c8   op   v , 1   =   \u03c8   op   1   (    A   16   ,   A   66   ,   A   26   ,   B   16   ,   B   66   ,   B   26    ) ,      (B.12)    \u03c8   op   v , 2   =   \u03c8   op   2   (    A   16   ,   A   66   ,   A   26   ,   B   16   ,   B   66   ,   B   26    ) ,      (B.13)    \u03c8   op   v , 3   =   \u03c8   op   1   (    A   12   ,   A   26   ,   A   22   ,   B   12   ,   B   26   ,   B   22    ) ,      (B.14)    \u03c8   op   v , 4   =   \u03c8   op   2   (    A   12   ,   A   26   ,   A   22   ,   B   12   ,   B   26   ,   B   22    ) ,      (B.15)    \u03c8   op     \u03b8   y   , 1   =   \u03c8   op   1   (    B   11   ,   B   16   ,   B   22   ,   D   12   ,   D   16   ,   D   22    ) ,      (B.16)    \u03c8   op     \u03b8   y   , 2   =   \u03c8   op   2   (    B   11   ,   B   16   ,   B   22   ,   D   12   ,   D   16   ,   D   22    ) ,      (B.17)    \u03c8   op     \u03b8   y   , 3   =   \u03c8   op   1   (    B   16   ,   B   66   ,   B   26   ,   D   16   ,   D   66   ,   D   26    ) ,      (B.18)    \u03c8   op     \u03b8   y   , 4   =   \u03c8   op   2   (    B   16   ,   B   66   ,   B   26   ,   D   16   ,   D   66   ,   D   26    ) ,      (B.19)    \u03c8   op     \u03b8   x   , 1   =   \u03c8   op   1   (    B   16   ,   B   66   ,   B   26   ,   D   16   ,   D   66   ,   D   26    ) ,      (B.20)    \u03c8   op     \u03b8   x   , 2   =   \u03c8   op   2   (    B   16   ,   B   66   ,   B   26   ,   D   16   ,   D   66   ,   D   26    ) ,      (B.21)    \u03c8   op     \u03b8   x   , 3   =   \u03c8   op   1   (    B   12   ,   B   26   ,   B   22   ,   D   12   ,   D   26   ,   D   22    ) ,      (B.22)    \u03c8   op     \u03b8   x   , 4   =   \u03c8   op   2   (    B   12   ,   B   26   ,   B   22   ,   D   12   ,   D   26   ,   D   22    ) ,   for all o , p \u2208 { 1 , \u2026 , p + 1 } , where  (B.23)    \u03c8   op   1   ( a , b , c , d , e , f ) =   \u2211   m = 1   p + 1     D   mo   {  (    a   op     \u03b3   11 op   +   b   op     \u03b3   21 op    )   u   mp    + (    b   op     \u03b3   11 op   +   c   op     \u03b3   21 op    )   v   mp   + (    d   op     \u03b3   11 op   +   e   op     \u03b3   21 op    )   \u03b8   mp   y    + (    e   op     \u03b3   11 op   +   f   op     \u03b3   21 op    )   \u03b8   mp   x    } ,      (B.24)    \u03c8   op   2   ( a , b , c , d , e , f ) =   \u2211   m = 1   p + 1     D   mp   {  (    a   op     \u03b3   12 op   +   b   op     \u03b3   22 op    )   u   om    + (    b   op     \u03b3   12 op   +   c   op     \u03b3   22 op    )   v   om   + (    d   op     \u03b3   12 op   +   e   op     \u03b3   22 op    )   \u03b8   om   y    + (    e   op     \u03b3   12 op   +   f   op     \u03b3   22 op    )   \u03b8   om   x    } ,   and where the op subscripts denote evaluation at the associated node.  The transverse-displacement terms, for which all inner products are evaluated with p \u00d7 p Gauss\u2013Legendre quadrature, may be written  (B.25)    b   ij   w   =   \u2211     o   \u02dc   = 1   p   [  +   D   i   o   \u02dc     (    \u039e   j   o   \u02dc     w , 1   +   \u039e   j   o   \u02dc     w , 2    ) +   D   j   o   \u02dc     (    \u039e   i   o   \u02dc     w , 3   +   \u039e   i   o   \u02dc     w , 4    )  ] ,   for all i , j \u2208 { 1 , \u2026 , p + 1 } , where the first set of intermediate tensors are  (B.26)    \u039e   i   o   \u02dc     w , 1   =   \u2211     p   \u02dc   = 1   p     L   i   p   \u02dc       \u03b3   11   o   \u02dc     p   \u02dc     [  (    A   55   o   \u02dc     p   \u02dc       \u03b3   11   o   \u02dc     p   \u02dc     +   A   45   o   \u02dc     p   \u02dc       \u03b3   21   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 1    + (    A   55   o   \u02dc     p   \u02dc       \u03b3   12   o   \u02dc     p   \u02dc     +   A   45   o   \u02dc     p   \u02dc       \u03b3   22   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 2   +   A   55   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 3    +   A   45   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 4    ]   W     o   \u02dc       W     p   \u02dc       J     o   \u02dc     p   \u02dc     ,      (B.27)    \u039e   i   o   \u02dc     w , 2   =   \u2211     p   \u02dc   = 1   p     L   i   p   \u02dc       \u03b3   21   o   \u02dc     p   \u02dc     [  (    A   45   o   \u02dc     p   \u02dc       \u03b3   11   o   \u02dc     p   \u02dc     +   A   44   o   \u02dc     p   \u02dc       \u03b3   21   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 1    + (    A   45   o   \u02dc     p   \u02dc       \u03b3   12   o   \u02dc     p   \u02dc     +   A   44   o   \u02dc     p   \u02dc       \u03b3   22   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 2   +   A   45   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 3    +   A   44   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 4    ]   W     o   \u02dc       W     p   \u02dc       J     o   \u02dc     p   \u02dc     ,      (B.28)    \u039e   i   o   \u02dc     w , 3   =   \u2211     p   \u02dc   = 1   p     L   i   p   \u02dc       \u03b3   12   p   \u02dc     o   \u02dc     [  (    A   55   p   \u02dc     o   \u02dc       \u03b3   11   p   \u02dc     o   \u02dc     +   A   45   p   \u02dc     o   \u02dc       \u03b3   21   p   \u02dc     o   \u02dc      )   \u03c7     p   \u02dc     o   \u02dc     w , 1    + (    A   55   p   \u02dc     o   \u02dc       \u03b3   12   p   \u02dc     o   \u02dc     +   A   45   p   \u02dc     o   \u02dc       \u03b3   22   p   \u02dc     o   \u02dc      )   \u03c7     p   \u02dc     o   \u02dc     w , 2   +   A   55   p   \u02dc     o   \u02dc       \u03c7     p   \u02dc     o   \u02dc     w , 3    +   A   45   p   \u02dc     o   \u02dc       \u03c7     p   \u02dc     o   \u02dc     w , 4    ]   W     p   \u02dc       W     o   \u02dc       J     p   \u02dc     o   \u02dc     ,      (B.29)    \u039e   i   o   \u02dc     w , 4   =   \u2211     p   \u02dc   = 1   p     L   i   p   \u02dc       \u03b3   22   p   \u02dc     o   \u02dc     [  (    A   45   p   \u02dc     o   \u02dc       \u03b3   11   p   \u02dc     o   \u02dc     +   A   44   p   \u02dc     o   \u02dc       \u03b3   21   p   \u02dc     o   \u02dc      )   \u03c7     p   \u02dc     o   \u02dc     w , 1    + (    A   45   p   \u02dc     o   \u02dc       \u03b3   12   p   \u02dc     o   \u02dc     +   A   44   p   \u02dc     o   \u02dc       \u03b3   22   p   \u02dc     o   \u02dc      )   \u03c7     p   \u02dc     o   \u02dc     w , 2   +   A   45   p   \u02dc     o   \u02dc       \u03c7     p   \u02dc     o   \u02dc     w , 3    +   A   44   p   \u02dc     o   \u02dc       \u03c7     p   \u02dc     o   \u02dc     w , 4    ]   W     p   \u02dc       W     o   \u02dc       J     p   \u02dc     o   \u02dc     ,   for all i \u2208 { 1 , \u2026 , p + 1 } ,   o   \u02dc   \u2208 { 1 , \u2026 , p } , where a tilde over a subscript denotes evaluation of the quantity at the associated Gauss\u2013Legendre quadrature point, and   L   i   o   \u02dc     =   \u03d5   i   (    \u03b6     o   \u02dc      ) . The intermediate tensors introduced in Eqs. (B.26)\u2013(B.29) are given by  (B.30)    \u03c7     o   \u02dc     p   \u02dc     w , 1   =   \u2211   \u2113 = 1   p + 1     D   \u2113   o   \u02dc       \u03c8   \u2113   p   \u02dc     w , 1   ,    \u03c7     o   \u02dc     p   \u02dc     w , 2   =   \u2211   \u2113 = 1   p + 1     D   \u2113   p   \u02dc       \u03c8   \u2113   o   \u02dc     w , 2   ,   \u03c7     o   \u02dc     p   \u02dc     w , 3   =   \u2211   \u2113 = 1   p + 1     L   \u2113   o   \u02dc       \u03c8   \u2113   p   \u02dc     w , 3    ,    \u03c7     o   \u02dc     p   \u02dc     w , 4   =   \u2211   \u2113 = 1   p + 1     L   \u2113   o   \u02dc       \u03c8   \u2113   p   \u02dc     w , 4   ,   for all   o   \u02dc   ,   p   \u02dc   \u2208 { 1 , \u2026 , p } , and where the final set of intermediate tensors are given by  (B.31)    \u03c8   \u2113   o   \u02dc     w , 1   =   \u2211   m = 1   p + 1     L   m   o   \u02dc       w   \u2113 m   ,    \u03c8   \u2113   o   \u02dc     w , 2   =   \u2211   m = 1   p + 1     L   m   o   \u02dc       w   m \u2113   ,   \u03c8   \u2113   o   \u02dc     w , 3   =   \u2211   m = 1   p + 1     L   m   o   \u02dc       \u03b8   \u2113 m   y   ,    \u03c8   \u2113   o   \u02dc     w , 4   =   \u2211   m = 1   p + 1     L   m   o   \u02dc       \u03b8   \u2113 m   x   ,   for all \u2113 \u2208 { 1 , \u2026 , p + 1 } ,   o   \u02dc   \u2208 { 1 , 2 , \u2026 , p } .  The remaining undefined terms in Eqs. (B.4) and (B.5) are given by  (B.32)    b   ij     \u03b8   y   , S   =   \u2211     o   \u02dc   = 1   p     L   i   o   \u02dc       \u039e   j   o   \u02dc       \u03b8   y     ,      (B.33)    b   ij     \u03b8   x   , S   =   \u2211     o   \u02dc   = 1   p     L   i   o   \u02dc       \u039e   j   o   \u02dc       \u03b8   x     ,   respectively, for all i , j \u2208 { 1 , \u2026 , p + 1 } , and the associated intermediate tensors are  (B.34)    \u039e   j   o   \u02dc       \u03b8   y     =   \u2211     p   \u02dc   = 1   p     L   j   p   \u02dc       J     o   \u02dc     p   \u02dc       W     o   \u02dc       W     p   \u02dc     {  + (    A   55   o   \u02dc     p   \u02dc       \u03b3   11   o   \u02dc     p   \u02dc     +   A   45   o   \u02dc     p   \u02dc       \u03b3   21   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 1     + (    A   55   o   \u02dc     p   \u02dc       \u03b3   12   o   \u02dc     p   \u02dc     +   A   45   o   \u02dc     p   \u02dc       \u03b3   22   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 2   + (    A   55   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 3   +   A   45   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 4    )  }      (B.35)    \u039e   j   o   \u02dc       \u03b8   x     =   \u2211     p   \u02dc   = 1   p     L   j   p   \u02dc       J     o   \u02dc     p   \u02dc       W     o   \u02dc       W     p   \u02dc     {  + (    A   45   o   \u02dc     p   \u02dc       \u03b3   11   o   \u02dc     p   \u02dc     +   A   44   o   \u02dc     p   \u02dc       \u03b3   21   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 1     + (    A   45   o   \u02dc     p   \u02dc       \u03b3   12   o   \u02dc     p   \u02dc     +   A   44   o   \u02dc     p   \u02dc       \u03b3   22   o   \u02dc     p   \u02dc      )   \u03c7     o   \u02dc     p   \u02dc     w , 2   + (    A   45   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 3   +   A   44   o   \u02dc     p   \u02dc       \u03c7     o   \u02dc     p   \u02dc     w , 4    )  }   for all j \u2208 { 1 , \u2026 , p + 1 } ,   o   \u02dc   \u2208 { 1 , \u2026 , p } .  Through the tensor-product factorization, we have taken the naive matrix-product form, which requires O (    p   6    ) operations per element and negligible storage, and reduced it to O (    p   3    ) operations for each of the terms described above, and O (    p   2    ) storage for each of the intermediate tensors.   REFERENCES", "highlights": "Legendre spectral finite elements (LSFEs) are examined in their application to Reissner\u2013Mindlin composite plates for static and dynamic deformation on unstructured grids. LSFEs are high-order Lagrangian-interpolant finite elements whose nodes are located at the Gauss\u2013Lobatto\u2013Legendre quadrature points. Nodal quadrature is employed for mass-matrix calculations, which yields diagonal mass matrices. Full quadrature or mixed-reduced quadrature is used for stiffness-matrix calculations. Solution accuracy is examined in terms of model size, computation time, and memory storage for LSFEs and for quadratic serendipity elements calculated in a commercial finite-element code. Linear systems for both model types were solved with the same sparse-system direct solver. At their best, LSFEs provide many orders of magnitude more accuracy than the quadratic elements for a fixed measure (e.g., computation time). At their worst, LSFEs provide the same accuracy as the quadratic elements for a given measure. The LSFEs were insensitive to shear locking and were shown to be more robust in the thin-plate limit than their low-order counterparts."}