{"id": "S001044851300184X", "article": "MAIN-TITLE Linear algebraic representation for topological structures   HIGHLIGHTS          A proper mathematical model for all topological structures is a (co)chain complex.      We propose a linear algebraic representation (LAR) scheme for representing such complexes.      The LAR scheme is fully implemented using sparse matrices.      The LAR scheme provides efficient support for topological queries and constructions.          KEYPHRASES   Solid modeling  Representation scheme  Sparse matrix  Chain complex   Present-day computational problems in science and technology must deal with increasingly complex geometric information and applications. The complexity of geometric information stems from a dramatic increase in size, diversity, and complexity of geometric data: point clouds, boundary meshes, NURBs representations, finite element meshes, CT scans, and so on. The complexity of applications is apparent in increasingly complicated semantics, usually expressed in terms of incidences and relations involving geometric data: large-scale assemblies, topology of microstructure, image segmentation, multi-physics simulation, to name a few. Emerging applications require the convergence of shape synthesis and analysis from computer graphics, computer imaging, and computer-aided geometric design, with discrete meshing of domains used for physical simulations. The goals of unification, scalability, and massively parallel distributed computing call for rethinking of the foundations of geometric and topological computing.  The evolution of 3D geometric representations can be generally understood in terms of graph-based data structures representing one of several possible cell complexes partitioning either the boundary or the interior of the represented model. A variety of assumptions about cell complexes and graph representations make standardization difficult, complicate the issues of data exchange and transfer, and lead to the proliferation of incompatible algorithms. Graph-based structures are difficult to parallelize: e.g.\u00a0boundary representation algorithms are dominated by graph searching algorithms (boundary traversals) that tend to force serial processing. In short, the specialized data structures based on cell complexes, that have driven the evolutionary development of the field, are no longer adequate for dealing with the emerging challenges and opportunities in geometric computing.  We observe that all types of cell complexes and functions over cell complexes are properly represented by a (co)chain complex, that captures all combinatorial relationships of interest in solid and physical modeling formally and unambiguously. Based on classical results from algebraic topology techniques, we show that a (co)chain complex and all associated combinatorial operations are readily represented using standard techniques from linear algebra, giving rise to a Linear Algebraic Representation (LAR) scheme. In this paper, we focus specifically on mod 2 (co)chain complexes because they are sufficient for many solid modeling applications\u00a0 [1]. In particular, we describe a fully implemented LAR data structure and algorithms using compressed sparse row (CSR) matrices that introduce no computational overhead and are asymptotically as efficient as (and usually better than) many other popular topological data structures. Our presentation will focus on chain complexes and operations. The extension to cochain complexes is straightforward because the two are isomorphic. For example, it is well known that boundary and coboundary matrices are transposes of each other.  The literature on representation schemes in solid modeling started with the foundational paper\u00a0 [1], where a mathematical framework for the important aspects of computer representations of solids was introduced. The ground-breaking paper\u00a0 [2] had previously supplied the first but already efficient boundary representation scheme. It also introduced Euler operators, elementary operations for step-wise building well-formed polyhedra, using atomic software actions satisfying the Euler\u2013Poincar\u00e9 formula at each stage.  The Quad-Edge data structure, providing efficient primitives for planar subdivisions and Voronoi diagrams, was proposed in\u00a0 [3], and is still largely used in computational geometry algorithms and in geometric libraries. Variations of the radial-edge non-manifold representation by\u00a0 [4] have been embodied in almost every commercial CAD system that uses a non-manifold boundary representation. The Cell\u2013Tuple structure\u00a0 [5] was introduced as a simple, uniform representation of finite and regular CW-complexes over subdivided d -manifolds.  More general set-theoretic and topological operators were provided by\u00a0 [6] to represent inhomogeneous objects, building upon the Selective Geometric Complex (SGC), a superset of CW-complexes allowing for cells non homeomorphic to open balls, proposed to handle dimension-independent models of point sets with internal structures and incomplete boundaries. A dimension-independent generalization of simplicial schemes, and various operators and algorithms were discussed by\u00a0 [7]. The foundational ideas underlying these and other representations are reviewed in\u00a0 [8], pointing out that solid modeling was conceived as a universal technology for developing engineering languages and systems with guaranteed geometric validity.  Despite the tremendous amount of research done and the progress made, most modern industrial systems still follow the basic approach established twenty years ago, centered on boundary representations, graphs, and non-manifold data structures represented using complex and inefficient (usually redundant) pointer structures. Computations in such systems, without preprocessing, usually rely on sequential \u201ctraversal\u201d (graph or boundary) algorithms that depend on specific pointer structures, and do not readily scale. For example, handling large 3D unstructured meshes becomes problematic, but the situation is much more challenging for other higher-dimensional topological structures.  More recently, the geometric and physical modeling fields started moving towards computing with functions defined over more general cellular decompositions\u00a0 [9,10] and direct integration between geometry and physics\u00a0 [11\u201314]. These latest developments provided the motivation for the present paper; in particular, we will draw heavily on the ideas, concepts, and definitions in\u00a0 [12] and\u00a0 [13] to propose a new linear-algebraic approach to representing and computing with topological structures.   SUMMARY   In this section we introduce the Linear Algebraic Representation (LAR) scheme. The aim is to provide a representation that supports all topological constructions and queries that arise in typical cellular decomposition of space (mesh, image, boundary, etc.). Formally, LAR relies on standard definitions\u00a0 [15,16]: in the mod 2 cellular complexes used here, d -chains are sets of d -cells; the standard basis of the   Z   2   -linear space   C   d   of d -chains is provided by singletons of d -cells; each d -cell is represented by a map   C   d   \u2192   Z   2      C   0   , i.e.\u00a0by a row of a binary characteristic matrix   M   d   . Of course, every d -chain in   C   d   may be generated by a (   Z   2   )-linear combination of   M   d   rows. The formulation may be extended to d -cochains that represent any possible field over the chains, and boundary and coboundary operators provide the computational tools needed by the discrete version of the generalized Stokes theorem for integration of fields over d -dimensional domains\u00a0 [13]. Due to space limitations, in this paper we will focus on chain complexes only, but the extension to cochains is straightforward\u00a0 [13].  Below, we show that the characteristic matrices of a chain complex, i.e.\u00a0the binary matrices that encode the incidence of d -cells with 0-cells, provide a convenient tool for computing boundary (and coboundary) operators and answering queries concerning the topological relations between cells. Characteristic matrices are very sparse for actual chain complexes used in applications, and can be represented in a standard CSR (Compressed Sparse Row) format. The product and transposition of such CSR matrices, needed to compute the boundary, adjacency and incidence operators between such linear spaces, are intrinsically efficient, since the sparse matrix\u2013vector (SpMV) multiplication is linear in the size of the output.  Let a finite cellular complex \u039b  ( X )  be given, such that X =   \u039b   0   \u222a \u22ef \u222a   \u039b   d   . Let also   M   p   \u2208   Z   2   m \u00d7 n   ( 0 \u2264 p \u2264 d ) be binary characteristic matrices, with number of rows equal to the number of p -cells, and number of columns equal to the number of 0-cells:   m =   k   p   = \u266f   \u039b   p   ,  n =   k   0   = \u266f   \u039b   0   .   Each   m   i j   \u2208   M   p   tells us whether (the vertex)   \u03bd   j   \u2208   \u039b   0   is contained on the boundary of the cell   \u03bb   i   \u2208   \u039b   p   or not.  The LAR scheme is a map from mathematical models of solids to their computer representations:   LAR : C h  ( \u039b  ( X )  )  \u2192    (   M   p   )    p = 1   d   .   In other words, LAR represents chain complexes  C h, supported by a finite cellular complex \u039b  ( X )  , by d -tuples of binary compressed sparse row (CSR) 1   1 Compressed Sparse Row (CSR) format, for which efficient implementations on high-performance hardware exist. See\u00a0 [17,18]. matrices, where d is the dimension of the space X . By definition, a LAR representation    (   M   p   )    p = 1   d   is valid if and only if it represents a valid chain complex, i.e.\u00a0its boundary operators form an exact short sequence  (1)   [   \u2202   p \u2212 1   ]   [   \u2202   p   ]     1      k   p     =    0      k   p \u2212 2       ( mod 2 )  ,  1 \u2264 p \u2264 d   where   k   h   = \u266f   \u039b   h   , and the matrices  [   \u2202   h   ]  ( h = p , p \u2212 1 ) are boundary operators. We give a detailed algorithm for constructing boundary operators in Section\u00a0 3.3.  Observe that, for a given cellular d -complex \u039b  ( X )  , all the   M   p   matrices  ( 1 \u2264 p \u2264 d )  have the same number of columns, and can be operated by standard matrix transposition and multiplication. This fact provides a convenient tool for computing boundary and coboundary operators and topological relations between cells. In particular, in Section\u00a0 3.3, we show that a boundary operator may be constructed by filtering the matrices   M   h \u2212 1      M   h   t   .   Reduced LAR. We now consider a special but common situation where a topological structure is regular  d -complex, where every cell is contained in some d -cell. In this case, a LAR representation can be simplified further under mild assumptions:  \u2013 LAR contains both the d -cells of a regular decomposition of a d -space and of its complement;  any two cells intersect on a connected cell.   Compressed LAR. If regular d -complexes are additionally characterized from d -cells with the same number of vertices, a specially compressed version of the CSR representation may be used, since every row of   M   d   contains the same number of non-zero elements, and therefore it is not necessary to store the index to the beginning of the storage of the column indices of each row. It is worth noting that the above holds for the important and common case of simplicial and cuboidal d -complexes, where the number of ones per row of the characteristic matrix is equal to d + 1 and to   2   d   , respectively. Of course, we do not need to store the values of non-zero elements in   M   d   , since it is binary.   Compactness of representation. Notice that a reduced and compressed LAR is highly compact. For example, the boundary rep of a triangulated 3-manifold using LAR needs only space  | F V |  = 2  | E |  (compare\u00a0 [19]), where  | E |  is the number of boundary edges. Recall that the minimal complete (in the sense of Requicha\u00a0 [1]) BRep of 3-manifolds needs space  | E F |  +  | E V |  = 4  | E |  . Notice also that the reduced LAR exactly coincides with the bulk of common representations in Computer Graphics\u2014for instance, the OBJ and PLY file formats.  In this section, we show that common topological operations and queries on CSR represented LAR structures, including incidence, boundary, star, and product of spaces, reduce to a sequence of SpMV operations that are asymptotically linear and, with a few exceptions, output sensitive.  For simplicity and concreteness, we first consider the incidence queries that typically arise in a cellular decomposition \u039b  ( X )  of a 2D space, such as 2D triangulation or the boundary of a solid 3-shape. There are 9 incidence relations between pairs of cells in such a V , E , F decomposition, and traditional graph-based representations are chosen by optimizing the trade-off between the space requirements and efficiency of queries\u00a0 [19]. With LAR, all such queries are sparse matrix\u2013vector multiplications without any additional space requirements. The chain operators corresponding to the incidence relations VV \u2282 V \u00d7 V , VE \u2282 V \u00d7 E , and VF \u2282 V \u00d7 F are given below:   V V :   C   0   \u2192   C   0   ,  EV :   C   0   \u2192   C   1   ,  FV :   C   0   \u2192   C   2   ; V E :   C   1   \u2192   C   0   ,  EE :   C   1   \u2192   C   1   ,  FE :   C   1   \u2192   C   2   ; V F :   C   2   \u2192   C   0   ,  EF :   C   2   \u2192   C   1   ,  FF :   C   2   \u2192   C   2   .   The corresponding CSR matrices are readily computed:    V V = V E \u2218 EV =   EV   \u22a4     \u2218 EV \u21d2  [ V V ]  =   M   1   t     M   1       V E =   EV   \u22a4   \u21d2  [ V E ]  =   M   1   t       V F =   FV   \u22a4   \u21d2  [ V F ]  =   M   2   t       EV   [ EV ]  =   M   1       EE = EV \u2218 V E = EV \u2218   EV   \u22a4   \u21d2  [ EE ]  =   M   1     M   1   t       EF = EV \u2218 V F = EV \u2218   FV   \u22a4   \u21d2  [ EF ]  =   M   1     M   2   t       FV   [ FV ]  =   M   2       FE = FV \u2218 V E = FV \u2218   EV   \u22a4   \u21d2  [ FE ]  =   M   2     M   1   t       FF = FV \u2218 V F = FV \u2218   FV   \u22a4   \u21d2  [ FF ]  =   M   2     M   2   t   .       It should be apparent that the above formulation and computation of incidence relations generalizes to all valid chain complexes. In this section, we rely on the incidence queries to show how to compute the matrix   M   d \u2212 1   starting from   M   d   in a valid reduced LAR of a space. In other words, we give a map \u03d5 :   M   d   \u21a6   M   d \u2212 1   . Recall that reduced LAR starts with a cell partition of the whole space, i.e.   \u039b   d   =   \u039b   d    ( X )  \u222a   \u039b   d    ( Y \u2216 X )  where Y is the embedding space of X .  The adjacency relation between d -cells is the subset of cell pairs that share some vertex (0-cell). The adjacency matrix   A   d   can be computed by matrix multiplication between the characteristic matrix   M   d    (   \u039b   d   )  and its transpose:     A   d   =   M   d      M   d   t         A   d   =  (   a   i , j   )  is integer-valued and symmetric. Each   a   i , j   gives the number of 0-cells shared between the cells   \u03bb   i   ,   \u03bb   j   \u2208   \u039b   d   . When the set intersection of two cells   \u03bb   i   ,   \u03bb   j   \u2208   \u039b   d   contains a number of vertices greater than or equal to the dimension d of cells, they share a common facet \u03bc \u2208   \u039b   d \u2212 1   , that can be computed as a component-wise integer product (or binary intersection) of rows i and j of   M   d   . The generated characteristic vector gives a row of the matrix   M   d \u2212 1   . In symbols:      a   i , j   = \u266f  (   \u03bb   d   i   \u2229   \u03bb   d   j   )        a   i , j   \u2265 d   ( i \u2260 j )  \u21d2 \u2203    M   d    ( i )  \u2227   M   d    ( j )  = \u03bc \u2208   \u039b   d \u2212 1   .    Computations with CSR matrices are efficient because zeros are not stored, and each row of CSR  (   A   d   )  actually stores only the numbers of vertices shared by a d -cell with the incident ones. The component-wise product of two binary CSR rows i and j of   M   d   takes at most O  ( \u266f   \u03bb   i   + \u266f   \u03bb   j   )  time.   Examples. A detailed example of computation of the   M   1   characteristic matrix starting from   M   2   is given in Section\u00a0 4.2 for the regular polytopal complex shown in Fig.\u00a01 (b). For instance, the edge   e   2   =  (   v   0   ,   v   6   )  is generated from the term   a   0 , 1   = 2 of the cell adjacency matrix   A   2   =   M   2     M   2   t   given in Eq. (3). The edge   e   2   is computed by the entrywise product (intersection) of rows   M   2    ( 0 )  and   M   2    ( 1 )  , related to the 2-cells   f   0   and   f   1   of Fig.\u00a01(b):    (    1   1   0   0   0   0   1   1    )  \u22c5  (    1   0   1   0   1   0   1   0    )  =  (    1   0   0   0   0   0   1   0    )  .      Consider the incidence map    I   p \u2212 1   p   :   C   p   \u2192   C   p \u2212 1   and its matrix    [   I   p \u2212 1   p   ]  \u2254   M   p \u2212 1   p   =   M   p \u2212 1      M   p   t   .   The entry   M   p \u2212 1   p    ( i , j )  stores the number k of common vertices (the cardinality of the intersection) between the cells   \u03bc   p \u2212 1   i   and   \u03bb   p   j   . In fact, we get     M   p \u2212 1   p    ( i , j )  =   \u2211   h = 0     k   0   \u2212 1     M   p \u2212 1    ( i , h )  \u22c5   M   p    ( j , h )  = \u266f  (   \u03bc   p \u2212 1   i   \u2229   \u03bb   p   j   )  = k ,   thus computing the number k of vertices of the intersection, i.e.\u00a0of the common face, between   \u03bc   p \u2212 1   i   \u2282   \u039b   0   and   \u03bb   p   j   \u2282   \u039b   0   . This common face coincides with   \u03bc   p \u2212 1   i   if and only if   \u266f  (   \u03bc   p \u2212 1   i   \u2229   \u03bb   p   j   )  = \u266f   \u03bc   p \u2212 1   i   .   In this case, we have     \u03bc   p \u2212 1   i   \u2227   \u03bb   p   j   =   \u03bc   p \u2212 1   i   \u2208 \u2202   \u03bb   p   j    and    \u03bb   p   j   \u2208 \u03b4   \u03bc   p \u2212 1   i   ,   with  [   \u03b4   p \u2212 1   ]  =    [   \u2202   p   ]    t   the  ( p \u2212 1 )  -coboundary map. Therefore, as a computational procedure to calculate the matrix of the unoriented boundary operator, we have the algorithm:  (i) Compute CSR  (   M   p \u2212 1   p   )  \u2254 CSR  (   M   p \u2212 1   )   CSR    (   M   p   )    t   as the product of sparse matrices.  Filtering procedure: for each 0 \u2264 i \u2264   k   p \u2212 1   \u2212 1 ,  (a) compute the number k \u2254 \u266f   \u03bc   p \u2212 1   i   of non-zero elements stored in row i of CSR(   M   p \u2212 1   );  for each 0 \u2264 j \u2264   k   p   \u2212 1 :  By duality, the same procedure may be used to compute the  ( p \u2212 1 )  -coboundary operator   \u03b4   p \u2212 1   as the transpose of the boundary   \u2202   p   .    Example Here we compute the  [   \u2202   2   ]  boundary matrix for the regular polytopal complex shown in Fig.\u00a01(b), from characteristic matrices   M   2   and   M   1   given in Section\u00a0 4.2. According to step (i) of the algorithm above, we get     M   1   2   =   M   1      M   2   t   .   Then, we filter the matrix   M   1   2   according to the criterion given in step (ii), producing the matrix of   \u2202   2   :   C   2   \u2192   C   1   .  (2)     [   \u2202   2   ]    t   =  (    1   0   1   0   1   0   0   0   0   0   0   1     0   1   1   0   0   0   1   0   0   1   0   0     0   0   0   0   0   0   0   0   1   1   1   1     0   0   0   1   1   0   0   1   0   0   1   0     0   0   0   0   0   1   1   1   1   0   0   0     1   1   0   1   0   1   0   0   0   0   0   0    )  .   The rows of  [   \u2202   2   ]  are the (characteristic vectors of) generators of the   C   1   linear space, i.e.\u00a0the edges of the complex, indexed by faces; the columns give the (characteristic vectors of) generators of the   C   2   linear space, i.e.\u00a0the faces indexed by edges, as it can be verified in Fig.\u00a01(b).  The knowledge of a d -boundary matrix is very useful, since it encodes the boundaries of all possible chains, i.e.\u00a0of all possible subsets of d -cells. It is also computationally efficient, since the calculation of  [ \u03bc ]  =  [   \u2202   d   ]   [ \u03bb ]  , where  [ \u03bc ]  ,  [ \u03bb ]  are the characteristic vectors of chains \u03bc \u2208   C   d \u2212 1   and \u03bb \u2208   C   d   , is actually performed using only the non-zero terms stored in their CSR matrices. In particular, the boundary of the partition   \u039b   d    ( X )  \u222a   \u039b   d    ( \u2201 X )  , of a space and its complement, is performed by setting the characteristic vector  [   \u039b   d   ]  with \u266f   \u039b   d    ( X )  ones and \u266f   \u039b   d    ( \u2201 X )  zeros.    Example Boundary of the Total Chain   The regular complex of Fig.\u00a01(b) is represented as a 2-chain over the shown cellular decomposition:    [   \u039b   2   ]  =    [ 1 , 1 , 1 , 1 , 1 , 0 ]    t     and therefore we get for the boundary 1-chain:    [   \u2202   2   ]   [   \u039b   2   ]  =    [ 1 , 1 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ]    t     ( mod  2 )    which corresponds to the boundary 1-chain shown in Fig.\u00a01(b) as a set of 1-cells (edges),  {   e   0   ,   e   1   ,   e   3   ,   e   5   }  .    Example Boundary of Subset Chain   If we remove from   \u039b   2    ( X )  the central cell   f   4   , and insert it in the exterior space partition   \u039b   2    ( \u2201 X )  , we set     [   \u039b   2   ]  =  [   \u039b   2    ( X )  \u222a   \u039b   2    ( \u2201 X )  ]  =    [ 1 , 1 , 1 , 1 , 0 , 0 ]    t   , and\u00a0get      [   \u2202   2   ]   [   \u039b   2   ]  =    [ 1 , 1 , 0 , 1 , 0 , 1 , 0 , 0 , 1 , 1 , 1 , 1 ]    t     ( mod  2 )     giving the boundary chain  {   e   0   ,   e   1   ,   e   3   ,   e   5   ,   e   8   ,   e   9   ,   e   10   ,   e   11   }  .  Let A = \u039b  ( X )  and B = \u039b  ( Y )  be cell complexes of dimension m and n , respectively. Then, C = A \u00d7 B = \u039b  ( X \u00d7 Y )  is a cell complex of dimension m + n , with the product   \u03bb   h   \u00d7   \u03bb   k   as cells, with   \u03bb   h   \u2208   \u039b   m    ( X )  and   \u03bb   k   \u2208   \u039b   n    ( Y )  . Assuming X \u2282   E   c   and Y \u2282   E   d   , it is X \u00d7 Y \u2282   E   c + d   . Common examples of products in geometric and physical modeling are extrusions, sweeps, and time stepping (e.g.\u00a0in morphing or animation). If V  ( X )  and V  ( Y )  are position vectors,   V  ( X \u00d7 Y )  = V  ( X )  \u2297 V    ( Y )    t   .   The LAR implementation of product operation is trivial, amounting to a double loop on cells and vertices.  The star of a cell \u03bb in a cellular complex \u039b  ( X )  , denoted St  \u03bb , is the set of all cells in \u039b that have at least a face in \u03bb . Informally, the star represents a combinatorial neighborhood of \u03bb . In algebraic terms, it is a linear endomorphism of C =   \u2295   p     C   p   such that St : C \u2192 C . Computation of a star is straightforward in the LAR scheme, by treating \u03bb as an elementary chain  { \u03bb }  \u2208   C   p   . We simply pre-multiply all matrices   M   p , q   \u2254   M   p      M   q   t   by the CSR of characteristic vector    [ \u03bb ]    t   , and take the union of the resulting sets of cells.  An application of the star operator arises in allocation of large models across a distributed environment. To execute any distributed simulation, the (image of the) star of each submodel (as a chain) must be allocated on each pair of processes sharing a portion of the submodel boundary. Stars are also used for enforcing continuity of mappings between the complexes, as well as in physics and in mesh processing (e.g.,\u00a0Laplace operators operate on open neighborhoods, and can be easily generated by this operator).  Some elementary examples aim to show the simple computations in the LAR scheme. A non-trivial extraction of complex topological models from 3D image data follows. FV and EV give a CSR rep of the binary matrices   M   2   and   M   1   .  Consider the \u039b  ( X )  decomposition in Fig.\u00a01(a), given by the simplicial complex \u039b =   \u039b   0   \u222a   \u039b   1   \u222a   \u039b   2   , with   k   0   ,   k   1   ,   k   2   = 9 , 16 , 6 , that is locally non-manifold.         FV  = CSR(   M   2   ) encodes the linear space   C   2    ( \u039b )  of 2-chains through a standard basis (isomorphic to 2-cells). These are combinations of the standard basis of 0-chains (isomorphic to 0-cells). The linear space   C   1    ( \u039b )  of 1-chains is encoded by EV  = CSR(   M   1   ). Note that FV is the only input for a simplicial complex: EV may be computed in time linear with the output size, by using either a well-known combinatorial formula\u00a0 [7], or the method given in Section\u00a0 3.2.  The cellular complex shown in Fig.\u00a01(b) is composed of five quads, described symbolically by quadruples of vertex indices (FV), and is embedded in   E   2   by assigning a pair of coordinates to position vectors of vertices (V).        To construct a reduced LAR representation, we must append to FV the description of one or more external 2-cells, in this case denoted by the quadruple  [ 0 , 1 , 2 , 3 ]  . The resulting representation FV  \u2254 CSR(   M   2   ) becomes:        Using the technique introduced in Section\u00a0 3.2, we first convert the input FV into the (binary) characteristic matrix   M   2   such that  CSR   (   M   2   )  =  FV  , and into the adjacency matrix   A   2   :  (3)     M   2   =  (    1   1   0   0   0   0   1   1     1   0   1   0   1   0   1   0     0   0   0   0   1   1   1   1     0   1   0   1   0   1   0   1     0   0   1   1   1   1   0   0     1   1   1   1   0   0   0   0    )  ,        A   2   =   M   2      M   2   t   =  (    4   2   2   2   0   2     2   4   2   0   2   2     2   2   4   2   2   0     2   0   2   4   2   2     0   2   2   2   4   2     2   2   0   2   2   4    )     and for each item   a   i j   \u2208   A   2   ( i < j ) such that   a   i j   \u2265 d = 2 , compute the binary intersection between the rows i and j of   M   2   , and put the binary result as a row of the characteristic matrix of the 1-cells, named   M   1   . Therefore we get:     M   1   t   =  (    1   1   1   0   0   0   0   0   0   0   0   0     1   0   0   1   1   0   0   0   0   0   0   0     0   1   0   0   0   1   1   0   0   0   0   0     0   0   0   1   0   1   0   1   0   0   0   0     0   0   0   0   0   0   1   0   1   1   0   0     0   0   0   0   0   0   0   1   1   0   1   0     0   0   1   0   0   0   0   0   0   1   0   1     0   0   0   0   1   0   0   0   0   0   1   1    )  ,   and    EV  = CSR  (   M   1   )  .            In addition to the existing implementation in python, LAR is being developed as a web service in a web-based computational environment, using some Khronos\u2019s APIs (OpenCL server-side and WebCL client-side) for industry standard heterogeneous computing. In particular, LAR is now being used in biomedical applications which require fast performances with big geometric data for topological tasks such as model extraction from 3D images. 2   2 This work is carried out within the framework of the IEEE-SA Project P3333.2\u2014Standard for \u201cThree-Dimensional Model Creation Using Unprocessed 3D Medical Data\u201d. For instance, density values in medical images represent scalar fields (cochains) over cubical cellular complexes, and LAR is used to guarantee topologically correct 3D image segmentation as well as to extract a/an (enumerative) solid model from the image, which is subsequently smoothed out (see Fig.\u00a02 ).   CONCLUSIONS   In this paper we introduced LAR, a simple linear algebraic representation for cellular complexes, using a CSR (Compressed Sparse Row) form for characteristic matrices of linear spaces of (co)chains. LAR allows us to efficiently compute and query any model topology through sparse matrix algebra, and supports all topological incidence structures, including enumerative (images), decompositive (meshes) and boundary (CAD) representations. LAR is dimension-independent, not restricted to regular complexes, and allows for internal/external structures, including cracks and fibers of lower dimensions. Also, LAR enjoys a neat mathematical format\u2014being based on chains, the domains of discrete integration, and cochains, the discrete prototype of differential forms, so naturally integrating the geometric shape with the supported physical properties. Therefore, LAR appeared to offer a sound basis for a standardization of topological structures and computations.    2   Other promising research directions point towards LAR-based multicore/heterogeneous computing and web computations with distributed models and parallel algorithms.   ACKNOWLEDGMENTS   The research of Vadim Shapiro was supported by the National Science Foundation grants CMMI-0856778 and CMMI-1029553. The research of Alberto Paoluzzi and Antonio DiCarlo was supported by a POC grant 2012/13 by SOGEI, the ICT company of the Italian Ministry of Economy and Finance.   REFERENCES", "highlights": "Graphical abstract"}