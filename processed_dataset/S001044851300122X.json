{"id": "S001044851300122X", "article": "MAIN-TITLE An IGA-based design support system for realistic and practical fashion designs   HIGHLIGHTS          A sketch design system is proposed for customers to create/customise fashion designs.      A representation model classifies various designs as three-level design elements.      A knowledge model governs the generation of designs and avoids impractical designs.      Interactive genetic algorithms govern design creation based on users\u2019 preferences.          KEYPHRASES   Sketch design  Interactive genetic algorithms  Fashion design  Mass customisation   To react to today\u2019s volatile and unpredictable market situation, companies realise the importance of customer-centric strategies to improve responsiveness to rapidly changing demands. Mass customisation was often put forward by research and academia as an effective strategy for firms to enhance their competitiveness. Mass customisation uses flexible computer-aided manufacturing technologies to produce customised products at near mass production efficiency.  Lampel and Mintzberg\u00a0 [1] classified different levels of mass customisation with reference to the processes that customers can influence, from design, fabrication and assembly to distribution. For high-level customisation, customers can be involved in the conception of the product and its design, working with designers to best satisfy their unique needs\u00a0 [2]. Customers are therefore regarded as \u2018co-designers\u2019. Co-designing allows customers to express their product requirements and carry out the product realisation processes\u00a0 [3]. It aids in identifying those features that are important to customers and thus allowing better product designs to be produced. Through the co-designing process of mass customisation, customers receive various benefits. One of the possible benefits is that customers gain from a product that fits their specific needs better than the best standard product attainable\u00a0 [4]. Due to a better fit between user preferences and the product, customers feel more satisfied and as a result, this increases the customer\u2019s willingness to pay\u00a0 [5,6].  Computer-aided design (CAD) is a primary tool to support a customisation process\u00a0 [7]. In the fashion industry, CAD packages are mainly developed to support typical manufacturing operations, like pattern making, grading and marker planning. CAD helps improve the accuracy and efficiency in pattern storage and modification, making the manufacturing operation faster and less labour intensive and thus, reducing costs, such as sampling costs. Recent research in clothing CAD has focused on simulating 2D patterns around 3D mannequins for checking the garment\u2019s appearance and fit. However, such an approach did not support the fashion design process but focused on reducing the cycles of sampling and trial fitting. Other clothing CAD research focused on creating garments in 3D and flattening them into 2D patterns\u00a0 [8\u201310]. It is technically challenging to model and flatten 3D garments of complex shape (with folds and gathers). A key obstacle for adopting these new CAD solutions is the large amount of investment needed for equipment and employee training. In summary, most 2D and 3D-based CAD applications are designed for professional users like pattern makers or computer specialists who have in-depth knowledge about 3D modelling; they are not solutions supporting the co-design process, by which general consumers can create their own designs.  In this paper, a design support system is proposed for non-professional users (customers) to create or customise their fashion designs in a user-friendly way. The proposed system aims to serve end users (customers) and thus must fulfil a number of requirements. Firstly, customers may not be familiar with pattern making; sometimes people can draw a nice sketch but find it impossible to produce such a shape with fabrics. To avoid this, the proposed system should have intelligence to create feasible and practical designs. Secondly, general customers, unlike designers, may not be good at design drawing and therefore, the system must be easy to operate without complex parameters and measurement input. Thirdly, the system should have the ability to design, i.e.\u00a0generating new styles not just retrieving previous designs from a database. Lastly, the system outputs (i.e.\u00a0the generated designs) must be easy to understand. The best way to present designs is by visualising as design sketches.  In this paper, interactive evolutionary techniques are used to develop a fashion design support system, which customers can use to create their preferred designs in the form of proportioned sketches. The proposed system can be integrated with a patternmaking system\u00a0 [11] that automatically generates clothing patterns, based on the output design sketches. The system can also be integrated with 3D visualisation tool to simulate the 3D try-on effects and allow interactive style editing\u00a0 [12]. It realises a truly customised fashion design, because customers can design their own clothes.  Evolutionary computational techniques, with members such as genetic algorithms, evolution strategies and evolutionary programming, are powerful stochastic search algorithms and have been widely used in various optimisation applications. Evolutionary computational techniques mimic Darwin\u2019s evolution theory of the natural selection process and are capable of finding near optimal solutions to many long-standing complex industrial optimisation problems.  In recent years, evolutionary computational algorithms have been applied in creative industries, such as architecture, art, music and design\u00a0 [13\u201315]. One obvious limitation of evolutionary art and design applications is the difficulty of defining fitness functions (goodness of designs) in art and design. To solve the problem, interactive genetic algorithms (IGA) were proposed\u00a0 [16]. IGA differs from traditional evolutionary algorithms in the fitness evaluation method. Unlike calculating the fitness value of each individual by a defined fitness function, in IGA, users subjectively evaluate and decide the fitness value for each individual\u00a0 [17]. A few example applications are reported recently. Bush and Sayama\u00a0 [18] introduced hyperinteractive evolutionary computation (HIEC); a new class of interactive evolutionary computation (IEC) that extends the role of the user rather than the simple fitness evaluator commonly found in IEC applications. Compared with traditional evolutionary algorithms, IGA has the advantage of reflecting personal preferences. [16]. In addition, IGA encourages diversified individuals, because a standard of \u2018goodness of design\u2019 need not be defined, meaning no ranking of designs is necessary.  Because of the above advantages, IGA has been used in various CAD applications. For example, Sato and Hagiwara\u00a0 [19] developed an interactive evolutionary system for 3D shape design. Gu et\u00a0al.\u00a0 [20] used an interactive evolutionary system (IES) to design facial character. Takagi and Ohsaki\u00a0 [21] proposed a hearing aid fitting method based on the techniques of IEC. Brintrup et\u00a0al.\u00a0 [22] developed an IES framework in combination with qualitative and quantitative criteria to design an ergonomic chair. Sugahara et\u00a0al.\u00a0 [23] provided an IGA-based design support system to choose fabric colours and patterns for traditional Japanese garments\u2014Yukata. Avigad and Moshaiov\u00a0 [24] presented a new interactive concept-based multi-objective evolutionary algorithm to solve a structural engineering problem. Hastings et\u00a0al.\u00a0 [25] developed a new design, representation and animation approach for particle systems by using IEC. Zamani et\u00a0al.\u00a0 [26] developed a carpet pattern generation method using IGA. Sun et\u00a0al.\u00a0 [27] proposed a grid-based knowledge guided IGA for curtain design.  In terms of clothing related studies, one key area of research has focused on the development of interactive evolutionary algorithms. For example, Gong et\u00a0al.\u00a0 [28] established a model of IGA with multi populations and designed a strategy for individuals\u2019 migration. Fashion design was used to demonstrate the effectiveness of this IGA algorithm. Later, Gong et\u00a0al.\u00a0 [29] proposed an adaptive IGA, in which an individual fitness is expressed as an interval. Another focus area of clothing related research is the development of IGA-based design systems. For instance, Inui\u00a0 [30] constructed a design system combining a genetic algorithm with an apparel CAD system to search for sleeve patterns that users prefer. Hu et\u00a0al.\u00a0 [31] proposed an interactive co-evolutionary CAD system to design parametric patterns for a leisure shirt. Apart from pattern design, Nakanishi\u00a0 [32] developed a system to assist fashion design using genetic programming, which evolved each dress design according to the user\u2019s selection. Ogata and Onisawa\u00a0 [33] designed a clothes design support system based on IGA. The system helped laypersons design clothes to reflect their \u2018Kansei\u2019, by rating candidate designs in terms of shape, colour and materials used. It is believed that such a system can be used to understand customers\u2019 design preferences; however, since domain-specific knowledge is note considered in the system formulation, often impractical designs are generated. Kim and Cho\u00a0 [34] proposed an evolutionary system based on the knowledge of fashion design, to encode genotype with OpenGL design models for 3D garment design. Kim and Cho\u00a0 [34] described a dress as a 3D model, being a combination of three parts: neck and body, sleeve and skirt, whereas traditional approaches model dress designs in 2D sketches by several spline curves. The pros and cons of 2D and 3D fashion design have been thoroughly discussed in\u00a0 [11,12]. Generally speaking, although 3D clothing design has received a lot of attention in the past decade, it has a number of intrinsic restrictions that the 3D garments may look attractive on 3D avatars, but they are impractical to produce as real garments.  In this paper, designs are presented in the form of two-dimensional sketches. In the fashion industry, designers prefer to use free-hand sketches, also called conceptual sketches, to address design concepts of silhouette and detailing. Later on, technical sketches are developed for communicating with the factory and pattern cutters for production purpose. Technical sketches, namely proportioned drawings showing the exact details of style elements (type and positions), seam lines and trimmings presented in both the front view and the back view, are the necessity of everyday operation in the fashion industry\u00a0 [35]. The proposed design support system outputs technical sketches directly, and the output sketches must be feasible and practical designs. It means the system must incorporate the design and patternmaking knowledge in the process of sketch creation.  The proposed system includes three key parts: (1) a sketch representation and composing method, (2) an IGA-based design model, and (3) a user-friendly interface. The sketch composing and representation method outputs feasible design sketches based on the design parameters defined by the IGA-based design model and presents to customers through the user-friendly interface.  The sketch representation and composing method includes four components: a parametric design model, a style database, a design knowledge model, and a design sketch composing engine. Following a substantial review of fashion design and patternmaking literature, design theory and design sketches available from various online resources\u00a0 [36], a three-level design representation model is proposed for classifying design elements. A database is developed that classifies and records design elements according to the three-level design model. The design elements can be composed into different designs and each design element is stored as a parametric model. Because the proposed system is designed for general customers and thus, to ensure practical and realistic designs are generated for customers, a design knowledge model is defined to govern feasible design element combinations. Lastly, a design sketch composing engine is developed to construct complete design sketches from the selected design elements.  With the above sketch representation and composing method, different styles can be composed by defining the respective design elements parameters. However, it would be too complex for a customer to define all the parameters in order to construct her preferred designs. Some studies have pointed out that mass confusion (or information overload), due to the complexity in the co-design process of mass customisation, tends to overwhelm and dissatisfy customers\u00a0 [37]. \u2018Mass confusion\u2019 comes from the burden of finding the right fit from a large number of customisation options\u00a0 [38] and the difficulty of addressing individual needs and transferring them into a concrete product specification\u00a0 [37]. In order to hide the tedious design parameter definition from customers but effectively construct design sketches based on customer\u2019s preferences, an IGA-based design model is used and details will be explained in Section\u00a0 5. Fig.\u00a01 shows the system architecture of the proposed method.  For the sake of simplicity, skirts are used as examples in this paper to illustrate the proposed method. Nevertheless, it is important to note that the proposed method is applicable to more complicated fashion products, such as trousers, blouses, dresses and jackets.  In the fashion industry, sketch is the most common way to present a design. However, design information presented in a sketch may be vague, leading to varied interpretations, such as the volume of fullness of a dress. It is suggested that the proposed sketch design system should integrate with an intelligent patternmaking system\u00a0 [11] that automates the related patternmaking process, so that customers can truly customise their designs. Therefore, explicit design information, for example, how many darts are included and the position and the shape of the darts, must be provided for sketch construction and subsequent automatic patternmaking; a parametric design model is favourite.  Following a comprehensive review of the fashion design and patternmaking literature and online resources, a three-level design model is proposed that is capable of representing most ready-to-wear styles. The first level defines the silhouette or the shape. The second level defines key style elements to realise the silhouette and the third level defines additional parts that would not alter the silhouette but provide design details or functions. Fig.\u00a02 shows the design model for skirts. Such a three-level design model is also consistent with the optimal workflow of patternmaking\u00a0 [11]. Different design elements can be classified according to the three-level structure. With such a design model, complicated or simple designs can each be represented as a unique combination of the three-level design elements.  In the three-level design model, the first level of silhouette is the most important and it determines the design elements of other levels. Taking skirts as examples, the silhouette includes information on the waist and hem level plus the shape category. Eight silhouette parameters  S  =  [   S   1   ,   S   2   , \u2026 ,   S   8   ]  are defined for classifying skirt silhouettes, as shown in Eq. (1) and Table\u00a01 . These silhouette parameters are defined based on the knowledge of fashion design and patternmaking. In fashion design, every company has its own set of template models or croquis (Fig.\u00a03 ), on which designers prepare technical sketches, and such models depict the body shape of the company\u2019s target customer. The silhouette parameters  S  give the key proportions in skirt design and such proportions are defined as ratio parameters to some standard measurements of the given template model, for instance, body waist width. By defining different values of the eight silhouette parameters, various skirt shapes can be obtained, such as tapered, straight and round.     (1)  S i l h o u e t t e   ( S h a p   e   1   , S h a p   e   2   , \u2026 , S h a p   e   N   )  =   f    ( S )     (   S   1   ,   S   2   , \u2026 ,   S   8   )    where N is the number of shape groups.  A set of shape classifiers  C  =  [   C   1   ,   C   2   , \u2026 ,   C   7   ]  (Table\u00a02 ) are calculated based on the eight silhouette parameters  S  , as follows:     (2)  S h a p e  C l a s s i f i e r   (   C   1   ,   C   2   , \u2026 ,   C   7   )  =   f    ( C )     (   S   1   ,   S   2   , \u2026 ,   S   8   )  .      Different skirt shapes must be realised by the incorporation of the second level key style elements in fashion design, such as yoke or panel. Without these key style elements, patternmaking cannot achieve the required silhouette defined in the first level. Shape classifiers  C  control the allowable key style elements for the given skirt silhouette, as presented in Eq. (3a). A design knowledge model is defined to present the relationship between the key style elements and silhouette, which will be described in Section\u00a0 4.3.      (3a)  K e y  style\u00a0elements   ( D   F    ( 1 )    , D   F    ( 2 )    , \u2026 , D   F    ( H )    )  =   f    ( D F )     (   C   3   ,   C   5   /   C   7   )     where D   F    ( K )    are H different categories of key style elements, including yoke, panel, wrap, layers, pleat, dart, gathers and nil. For each category of key style element K , there are a total number of M feature styles, denoted as D   F   i    ( K )    , where i = 1 , \u2026 , M . Parametric models are defined to describe the characteristic details of each key feature style D   F   i    ( K )    , for example, to give the position and size information, as shown in Eq. (3b):  (3b)  D e s i g n  f e a t u r e  d e t a i l s   ( D F   T   i 1    ( K )    , D F   T   i 2    ( K )    , \u2026 )  =   f    ( D F T )     ( D   F   i    ( K )    )  .   The third level of the design model classifies additional details that would not alter the silhouette but would provide decorative details or additional functions for the style. In patternmaking, patterns are adjusted or new pattern pieces are constructed, in addition to the main panels, for the introduction of design details, such as waist and pocket patterns, or marking zip and placement. The third level design elements are determined by the first level silhouette and/or the second level of key style elements, as seen by the relationship model equations\u00a0 (4)\u2013(8), parts (a). Similar to key style features, the parametric model is defined for each third level design element to describe the detail characteristics, as shown in Eqs. (4)\u2013(8) parts\u00a0(b)   (4a)  W a s i t  s t y l e   (   W   1   ,   W   2   , \u2026 )  =   f    ( W )     (   S   2   , D F )     (4b)  W a s i t  s t y l e  d e t a i l s   ( W   T   i 1   , W   T   i 2   , \u2026 , )  =   f    ( W T )     (   W   i   )         (5a)  H e m  f i n i s h i n g   ( H   F   1   , H   F   2   , \u2026 )  =   f    ( H F )     ( D F ,   C   5   /   C   7   )     (5b)  H e m  f i n i s h i n g  d e t a i l s   ( H F   T   i 1   , H F   T   i 2   , \u2026 , )  =   f    ( H F T )     ( H   F   i   )         (6a)  S l i t s   ( S   L   1   , S   L   2   , \u2026 , )  =   f    ( S L )     (   S   3   ,   C   5   , H   F   i   )     (6b)  S l i t s   ( S L   T   i 1   , S L   T   i 2   , \u2026 , )  =   f    ( S L T )     ( S   L   i   )         (7a)  P o c k e t s   (   P   1   ,   P   2   , \u2026 )  =   f    ( P )     ( D F )     (7b)  P o c k e t s  d e t a i l s   ( P   T   i 1   , P   T   i 2   , \u2026 )  =   f    ( P T )     (   P   i   )         (8a)  O p e n i n g   (   O   1   ,   O   2   , \u2026 )  =   f    ( O )     ( D F , W )     (8b)  O p e n i n g  d e t a i l s   ( O   T   i 1   , O   T   i 2   , \u2026 )  =   f    ( O T )     (   O   i   )  .    With this three-level design model, various styles can be represented in parametric form as different combinations of the three-level design elements.  A style database is constructed based on the design model, by which various design elements are classified and recorded accordingly. Three types of design element are defined in the database, which is consistent with the three-level design model, as shown in Fig.\u00a02. Following a substantial review of the available online resources and fashion design literature, different design elements are defined and stored to the database. For each design element, the information on shape, size and position is parameterised and recorded, accordingly.  In the database, the first type of design element defines the skirt silhouette, including the waist level, hem level and the shape. Various skirt shapes are categorised into seven groups, as shown in Fig.\u00a04 . The range values of  S  for different groups of shape, waist level and skirt length (hem level) are defined in the style database. The second type of design element defines key style features such as yokes, panels, and pleats. Each type of key feature includes a number of feature subgroups, and a parametric model of each subgroup is defined to describe the shape, size and position of the feature. Fig.\u00a05 shows some examples of key features and the relevant subgroups of those features. The third type of design element, named as design details, is related to other additional parts of a design, such as waist styles, pockets and slits. Design details are again classified into subgroups; for example, waist styles are classified into 13 subgroups. Fig.\u00a06 shows some examples of design details. It is important to know that the style database can be easily expanded by adding new subgroups of design elements and key features, or even introducing new categories of key features or design details.  Design is different from arts because it is a process rather than the seeking of aesthetic appeal. Fashion designers must have extensive knowledge of material properties and patternmaking in order to compose practical and aesthetically appealing fashion products. Professional designers can easily point out any impractical design, which cannot be realised in a real garment, for example Fig.\u00a07 (a). In patternmaking, a certain silhouette must be realised by incorporation of a few possible style features, according to the textile material properties. For example, a trumpet skirt (bell shape) must incorporate panels (Fig.\u00a07(b)) but not darts (Fig.\u00a07(a)).  In this paper, a knowledge model is developed based on the knowledge of fashion design, to govern the creation of design sketches and overcome impractical designs. The knowledge model is formulated based on the design parametric model described in Section\u00a0 4.1 and the knowledge model defines the inter-relationships of the 3-level design elements in matrix form.  Skirt silhouette is defined in the first level of the design model, by 8 silhouette parameters  S  =  [   S   1   ,   S   2   , \u2026 ,   S   8   ]  , which in turn calculate the shape classifying parameters  C  =  [   C   1   ,   C   2   , \u2026 ,   C   7   ]  . By defining different range values of these parameters, the design knowledge model classifies various skirt silhouettes into N shape groups, with reference to Eq. (1). In this paper, a total of twenty shape groups  ( N = 20 )  are defined.  The second level of the design model defines key style features, which are necessary to realise the silhouettes defined in the first level. Such knowledge is defined by a relationship matrix    F     ( K )           F     ( K )    =    [      f   1 , 1    ( K )      \u22ef     f   1 , j    ( K )      \u22ef     f   1 , N    ( K )        \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       f   i , 1    ( K )      \u22ef     f   i , j    ( K )      \u22ef     f   i , N    ( K )        \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       f   M , 1    ( K )      \u22ef     f   M , j    ( K )      \u22ef     f   M , N    ( K )       ]    M \u00d7 N   =    [      F   1    ( K )        \u22ee       F   i    ( K )        \u22ee       F   M    ( K )       ]    M \u00d7 N ,     and   F   i    ( K )    =    [      f   i , 1    ( K )      \u22ef     f   i , j    ( K )      \u22ef     f   i , N    ( K )       ]    1 \u00d7 N      where K = 1 , 2 , \u2026 , H represents different categories of key feature. In skirt design, with reference to the Eq. (1), K = 1 is for the key feature of Yoke, K = 2 is for the key feature of Panel with reference to the style database. Assuming that there are M feature styles (feature subgroups) of a specific category of key feature K in the style database, the relationship matrix  F  is thus a M \u00d7 N matrix, indicating the compatibility of the M feature styles with the N shape groups. N shape groups have been defined by\u00a0Eq. (1). Each entry   f   i , j    ( K )     ( i = 1 , \u2026 , M , j = 1 , \u2026 , N )  of the relationship matrix    F     ( K )    is defined as:  (9)    f   i , j    ( K )    =  {    1   if\u00a0the j th\u00a0silhouette\u00a0shape\u00a0can\u00a0be\u00a0realised      in\u00a0pattern\u00a0making\u00a0by\u00a0incorporation\u00a0of i th      style\u00a0of\u00a0key\u00a0feature K ;     0   otherwise.           f   i , j    ( K )    records the compatibility between the i -th style of the key feature K with the j -th shape group. For example, for key feature of pleat  ( K = 5 )  , there are 6 pleat styles  ( M = 6 )  in the style database, comprising: accordion pleats, inverted box pleats, knife pleats, cartridge pleats, fluted pleats and puff knife pleats, then    F    5   is a 6-by-20 matrix showing whether these 6 pleat styles are allowed in the N = 20 different silhouette shapes. In other words, relationship matrices  F  , with either 1 or 0 entries, define the relationships between the key features and silhouette shapes.  By summing the relationship matrix    F     ( K )    across columns, a row vector    FR     ( K )    =    [    f   r   1    ( K )      \u22ef   f   r   j    ( K )      \u22ef   f   r   N    ( K )       ]    1 \u00d7 N   is produced, where each entry is calculated by:  (10)  f   r   j    ( K )    =   \u2211   i = 1   M     f   i , j    ( K )    ,  for j = 1 , \u2026 , N .     f   r   j    ( K )    denotes whether key feature K among all M feature subgroups are compatible with different shapes j   ( j = 1 , \u2026 N )  . If the incorporation of such key features can create the j -th shape, then f   r   j    ( K )    > 0 ; otherwise, f   r   j    ( K )    = 0 .  Another matrix  T  =    [      t   1 , 1     \u22ef     t   1 , j     \u22ef     t   1 , N       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       t   K , 1     \u22ef     t   K , j     \u22ef     t   K , N       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       t   H , 1     \u22ef     t   H , j     \u22ef     t   H , N      ]    H \u00d7 N   is defined\u00a0based on the row vectors    FR     ( K )    for the H different categories of key style feature. The entry value of  T  is  (11)    t   K , j   =  {    1   if f   r   j    ( K )    > 0 ;     0    otherwise.        If   t   K , j   = 1 , it implies that the key style feature K among all its M feature subgroups, is compatible with the j -th shape group, j = 1 , 2 , \u2026 , N . If   t   K , j   = 0 , it implies that none of the subgroups in the key style feature K is compatible with the j -th shape group.  In addition to key design features, the knowledge on the use of various design details (the third level design elements) can be defined in a similar way. In patternmaking, the possible design details depend on the silhouette as well as the selected key features. As shown in Eqs. (4)\u2013(8), different design details are functions of the silhouette parameters   S   i   , shape classifying parameters   C   i   and selected features. It is consistent with the three-level design model, in which the level 2 design elements (key features) are dependent on the level 1 elements (the silhouettes), while the level 3 elements (design details) are dependent on the elements of both levels 1 and\u00a02.  Let z be a third level design element, assuming that there are P style subgroups of z in the style database, the relationships between these P subgroups and various key features (classified in H categories) are defined by matrix  U  :    U  =    [      u   1 , 1     \u22ef     u   1 , K     \u22ef     u   1 , H       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       u   i , 1     \u22ef     u   i , K     \u22ef     u   i , H       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       u   P , 1     \u22ef     u   P , K     \u22ef     u   P , H      ]    P \u00d7 H   =    [      U   1       \u22ee       U   i       \u22ee       U   P      ]    P \u00d7 H   ,    U   i   =  [      u   i , 1     \u22ef     u   i , K     \u22ef     u   i , H      ]    where the entry value of  U  is defined as follows:     (12)    u   i , K   =  {    1   if\u00a0the i th\u00a0style\u00a0group\u00a0of z is\u00a0compatible      with\u00a0style\u00a0feature K ;     0    otherwise.        The design element z , also depends on a certain silhouette parameter   S   i   or   C   i   , which classifies the design characteristics into Q subgroups. The relationships between the P style groups of z and the Q silhouette subgroups are defined by matrix  V  :    V  =    [      v   1 , 1     \u22ef     v   1 , j     \u22ef     v   1 , Q       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       v   i , 1     \u22ef     v   i , j     \u22ef     v   i , Q       \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       v   P , 1     \u22ef     v   P , j     \u22ef     v   P , Q      ]    P \u00d7 Q   =    [      V   1       \u22ee       V   i       \u22ee       V   p      ]    P \u00d7 Q   ,    V   i   =  [      v   i , 1     \u22ef     v   i , j     \u22ef     v   i , Q      ]    where the entry value of  V  is defined as follows:  (13)    v   i , j   =  {    1   if\u00a0the i th\u00a0style\u00a0group\u00a0of z is\u00a0compatible\u00a0with      the j th\u00a0silhouette\u00a0subgroup\u00a0of Q ;     0    otherwise.        The Kronecker product,  Z  , is calculated for the row vectors of matrices  U  and  V  by Eq. (14), to define whether design element z is allowed in different combinations of H categories of key feature and Q subgroups of silhouette in Box\u00a0I .  Upon obtaining the matrix  Z  , row vector  ZR  can be calculated in a similar way as that for  FR  in Eq. (10).  Based on knowledge of fashion design, patternmaking and textile material properties, designers or pattern makers can easily decide the entry value of the relationship matrices, namely the compatibility of design elements in the style database, by Eqs. (9), (13) and (14). When a new category of design element is introduced to the style database, its dependency on other levels/categories of design elements is formulated in a parametric form, see examples of Eqs. (3)\u2013(8). The compatibility of this category of design element with the dependent design elements is defined in matrix form, like the matrices  F  ,  U  and  V  . When a new design element is updated to the database, the relevant matrix entries are updated. A user interface is provided for designers to define feature association and input the relationship matrix entries. The compatibility matrices are pre-computed offline by Eqs. (9) and (12)\u2013(14) for later use in interactive genetic algorithm (Section\u00a0 5).  A design sketch composing engine is developed in this paper to construct design sketches based on user selected features. Although the design support system is developed for customers to create their preferred designs, a true design customisation system requires that the output sketches must be compatible with other CAD systems, such as for patternmaking. In this project, a pilot system was developed in the C# and AutoLisp languages, which output sketches in a DXF file format. DXF file format is compatible with most commercial CAD systems. For a larger scale system, it can be developed on the VisualStudio.Net platform with Teigha.Net class library of OpenDesign\u00a0 [39].  The sketch composing engine consists of two types of algorithms, namely silhouette drafting algorithms (SDA) and adaptation and attachment algorithms (AAA) (see architecture in Fig.\u00a08 ). The system first reads in a human template model/croquis, and some key landmarks\u00a0 [40], and the body outline curves necessary for sketch design are defined (see an example of Fig.\u00a03(a)). Next, the skirt silhouette shape is sketched based on the body information and a set of silhouette parameters  S  using silhouette drafting algorithms. Later, level 2 key design features and level 3 waist style and hem finishing are sketched in an optimised sequence, based on the parametric models. Lastly, other level 3 design elements are sketched based on the relevant parametric models. Adaptation and Attachment Algorithms are used.  The silhouette curve is composed of one or several splines (lines), and the number of splines is related to the skirt shapes. SDA first calculate the maximum number of spline by:  (15)  M a x N u m = N u m F u n c t i o n  ( S i l h o u e t t e  ( S h a p e )  =   f    ( s )     (   S   1   ,   S   2   , \u2026 ,   S   8   )  )    where Silhouette (Shape) is defined in Eq. (1) and  S  =  [   S   1   ,   S   2   , \u2026 ,   S   8   ]  are silhouette parameters defined in Section\u00a0 4.1. Next, SDA construct silhouette curve using the silhouette parameter  S  and Eq. (15) by calling a sequence of low-level geometrical operations using AutoCAD function library.  One example is illustrated in Fig.\u00a09 . The silhouette parameter  S  classifies the skirt shape as \u2018Straight\u2019 by Eq. (1). SDA then decide the silhouette curve is composed of one spline and one line by Eq. (15) and calculate the positions of Points A, B and C accordingly. \u2018TA1A\u2019 and \u2018TA1B\u2019 denote the tangential angles for \u2018Spline 1\u2019 at \u2018Point A\u2019 and \u2018Point B\u2019, respectively. These parameters are defined based on silhouette shape and parameters  S  .  As defined in Eq. (3), every design feature comprises several parameters; these parameters can be classified as position, variable and inherent parameters. Design features are sketched by two types of construction rules: adaptation rules and attachment rules. The adaption rules work in a similar way as SDA, see Fig.\u00a010 . It first calculates all the key points of the design feature using position, variable and inherent parameters; inherent parameters record information of the upper level features, e.g.\u00a0the silhouette curve. Next, it composes the design feature by calling a sequence of low-level geometrical operations for modifying and/or drafting feature curves using AutoCAD function library. Adaptation rules allow flexible construction of design features. Another type of rules, attachment rules, are used that design features are first recorded as object blocks; each block is characterised by a size and a pick point. Attachment rules do not alter the features except size scaling; attachment rules also refer the pick point to a target position. The two types of rules can be used together to compose complex design features.  To compose design features, adaptation and attachment algorithms first decode the information of the parametric design model to invoke the right feature by applying the relevant adaptation rules or attachment rules.  An example skirt sketch, as shown in Fig.\u00a08, is used to illustrate how the design sketch composing engine works. The parametric model of the skirt tells that design features of yoke (level 2 key feature), panel, slit and pocket (level 3 features) are involved in addition to waist and hem features. The construction of yoke and pocket are explained below.  The decoded parametric model invokes the second level key features as angle yoke style 1, see Fig.\u00a011 (a). In the style database, angle yoke style 1 is defined by a \u2018Position Parameter\u2019 and a \u2018Variable Parameter\u2019 (as shown in Fig.\u00a011(b)), and it is constructed by an adaptation rule\u2014\u2018Angle yoke style 1\u2019 sub-function. The sub-function first correspond point \u2018P1\u2019 in Fig.\u00a011(b) to \u2018Point A\u2019 in Fig.\u00a09, which is known from the inherent parameter of the silhouette curve. With the known silhouette curve, point \u2018P2\u2019 is calculated by \u2018Position Parameter\u2019. Secondly, points \u2018P3\u2019 and \u2018P4\u2019 are calculated based on point \u2018P2\u2019 and \u2018Variable Parameter\u2019. Finally, \u2018Angle yoke style 1\u2019 sub-function constructs the feature by connecting all points with straight lines.  The decoded parametric model defines that patch pocket style 3 (Fig.\u00a012 (a)) should be included in the sketch. The patch pocket style 3 is defined as an object block in the style database with 3 parameters \u2018Pick Point\u2019, \u2018Default Width\u2019 and \u2018Default Height\u2019, and it is constructed by attachment rule. The attachment rule first calculates the position of \u2018Insert Point\u2019 using \u2018X Position Parameter\u2019 and \u2018Y Position Parameter\u2019 (as shown in Fig.\u00a012(b)), which are defined as fractions of half hip-width and of waist-to-hip length. Next, scaling ratios in X and Y directions are calculated from \u2018Target Width\u2019, \u2018Default Width\u2019 and \u2018Target Height\u2019 and \u2018Default Height\u2019. Finally, the attachment rule assigns the \u2018Pick Point\u2019 of the pocket block to the \u2018Insert Point\u2019 position and scales the pocket block according to the scaling ratios.  In this section, interactive genetic algorithms are used to construct realistic and practical design sketches. As shown in the sketch representation and composing method described in Section\u00a0 4, a design is obtained by defining relevant parameters of the three-level design model. However, it is difficult for customers to understand the construction mechanism and the design parameter definition. In this paper, the tedious parameter definition is hidden from users by formulating the design parameters as an individual \u2018chromosome\u2019 in evolutionary algorithms. The decoding of such individual chromosomes is governed by the design knowledge model (Section\u00a0 4.3), which ensures the output sketches are realistic and practical designs. The IGA-based method for sketch design is explained in detail as follows.  Although there are many different representations to implement interactive genetic algorithms, the most natural representation for the skirts design problem is the value encoding representation [41]. The information contained in an individual is used to construct a feasible solution, which in this study, corresponds to a unique design sketch.  In this study, the individual representation is composed of three segments, as shown in Fig.\u00a013 . The first segment of the string indicates the design silhouette, corresponding to silhouette parameters  S  . The second segment of the string comprises bits for selecting the key feature category K , style subgroup of the selected key feature D F and the detail characteristics of the selected key feature style D F   T   i   . Both the front view and back view details are defined. The third segment of the string defines the parameters for design details to increase the complexity of the design, which correspond to the third-level design elements, including waist style, hem finishing, pockets, opening, slits and additional features. The formulation of the individual chromosome is a string of real numbers, each in the range of  [ 0.0 , 1.0 ]  .  To ensure the system generate realistic and practical designs, the knowledge model described in Section\u00a0 4.3 should govern the decoding of the individuals as the parameter values for the three-level design model. The decoding is done in segments, i.e.\u00a0the first segment of the string is decoded first, then the second segment, and lastly the third segment. The decoding of the later segment depends on the decoded value of the previous segments.  The first segment of the individual is a string of eight real numbers with the value range  [ 0.0 , 1.0 ]  , the decoding is to convert the bit value to a specific parameter value range  \u230a   S   i _ l o w e r   ,   S   i _ u p p e r   \u230b  by linear interpolation. These parameter value ranges  \u230a   S   i _ l o w e r   ,   S   i _ u p p e r   \u230b  are defined based on the design knowledge of skirt design. The shape classifying parameters  C  are then calculated from the decoded  S  using Eq. (2). The  S  and  C  define to which of the N shape groups the current silhouette belongs, e.g.,\u00a0the j -th group.  The second segment of the string defines the relative parameter values of the key design features, corresponding to the second level elements of the design model. The first bit of the second string segment defines which of the H key feature categories is selected for the given j -th shape group. This can be done by converting the bit value to an integer by proportion, in a value range of  [    1 ,     \u2211   K = 1   H     t   K , j      ]  .The upper limit of the parameter value range   \u2211   K = 1   H     t   K , j   is the summation of the j -th column of matrix  T  . The decoded integer value \u03b1 defines which one of the allowable key feature categories is selected for the given j -th silhouette shape, i.e.\u00a0the \u03b1 -th non-zero entry of the j -th column of matrix  T  . The \u03b1 -th non-zero entry of the j -th column of matrix  T  is referred as key feature K in the following discussion. Next, the second bit of the second segment defines which feature subgroup of key feature K is selected from the style database. The decoding is done in a similar way by converting the bit value  [ 0.0 , 1.0 ]  to a natural number  [ 1 , f   r   j    ( K )    ]  , where the upper limit of the parameter value range f   r   j    ( K )    is the summation of the j -th column of relationship matrix    F     ( K )    . Assuming the i -th feature subgroup is selected for key feature K , then other bits of the second segment are decoded to define the required parameters for detail characteristics of key feature D F   T   i    ( K )    for both front view and back view sketches.  The third segment of the string defines the relative parameter values of the design details, which correspond to the third level elements of the design model. In this segment, the decoding of bit values is done in a similar way to that of the key feature, with reference to matrix  Z  based on the selected key feature D   F    ( K )    and other dependent silhouette parameters. Fig.\u00a014 shows an example of the decoded chromosome, which defines a bell skirt with yoke, pleat, waist band, flounce hem and zip opening at side.  It is important to define the population size for any genetic search-based optimisation or design applications. In this research, because of special coding scheme (Section\u00a0 5.2), the search space and the dimensionality are reduced. Therefore, an appropriate population of nine individuals is chosen to ameliorate the shortcomings of population size to ensure a good compromise between the required computational time and the quality of the solution.  Although the initial population is generated randomly in traditional genetic algorithms, in this study, an initial population of nine individuals is created by a predetermined method. This initialisation differs from other traditional and interactive genetic algorithms in that it consists of two parts: user preferred individuals and randomly generated individuals. The former allows users to subjectively choose waist level and hem level in order to achieve a fast search speed by confining the search space based on user\u2019s preferred solutions; the latter is adopted when users do not have a desired style to create and this option improves the diversity of individuals. The user preferred individuals initialisation can be achieved by adjusting the decoding value ranges  \u230a   S   i _ l o w e r   ,   S   i _ u p p e r   \u230b  for specific parameters of waist level and hem level,   S   2   and   S   3   , respectively.  Despite the decoding of   S   2   and   S   3   , the decoding of other silhouette parameters,   S   4   \u2013   S   8   , are controlled by adjusting the relevant decoding value ranges, so that diverse silhouettes, such as tapered, straight, flared, round and bell shapes are included in the initial population. This special initialisation process ensures a wider coverage of the search space and accelerates the process of users searching to reach their preferred styles.  Meghna and Barbara\u00a0 [42] developed a method called \u2018human ranks\u2019 for fitness evaluation in IGA. The advantage of \u2018human rank\u2019 lies in its accuracy but it may overwhelm users because of cognitive overload. Bush and Sayama\u00a0 [18] pointed out that human users can play a more central role, beyond that of a fitness evaluator, as the main driver of a search process. Therefore, in this algorithm, the fitness evaluation and selection process are combined, so that users need not rate the \u2018goodness of design\u2019 for each individual design, but just select a few individuals (design sketches) per generation. Aesthetic evaluation is usually subjective; by selecting what users like from a pool of design sketches, the selection process itself reflects users\u2019 preferences. Selection and evaluation are combined in our method to lower user fatigue without compromising the diversity of individuals.  Assuming n individuals are selected to form a mating pool for crossover operation, the total number of possible mating is binomial coefficient   C   n   2   , reproducing 2   C   n   2   new individuals. To ensure diversity of the population, if 2   C   n   2   is a value smaller than the population size, then all possible mating combinations are included. To form a new population of nine individuals, the leftover individuals are selected randomly from the mating pool for the crossover reproduction operation. If 2   C   n   2   is a value larger than the population size, a random selection is carried out after the reproduction process to form a new population for the mutation operation.  In this study, two types of crossover operator are employed. The first type governs the operations to take place only after the first segment, whereas the second type of crossover operator does not have such a positional constraint. The positional constraints of the first type crossover operator avoids changing the skirt silhouette shape but alters the key features and design details. With a few trials of different crossover operators, a multi-point discrete crossover operator, as shown in Fig.\u00a015 , is applied to recombine the individuals. The coding scheme described in Section\u00a0 5.2 ensures the recombined individuals can also be decoded as practical designs.  When the crossover operation is completed, the mutation operator is used to introduce variation to the new population. In this study, two types of mutation operator are used: Gaussian mutation and uniform mutation operators. The Gaussian mutation operator changes the bit value to a random value generated from a normal probability distribution:  (16)    X   \u2032   = G  ( \u03bc , \u03c3 )    where the mean value \u03bc = 0.5 and the standard deviation \u03c3 = 0.167 . Based on the characteristics of a normal distribution, 99.7% of the generated random number is within the range of  [ 0.0 , 1.0 ]  . The Gaussian mutation operator is employed to the first segment of the string, except for the silhouette parameters   S   1   and   S   6   .  The uniform mutation operator is employed to the second and the third segments of the string. The uniform mutation is obtained by:  (17)    X   \u2032   = U  (   X    min    ,   X    max    )    where   X    min    and   X    max    are the lower bound and upper bound, respectively.  The crossover operation is carried out with pairs of individuals based on a defined crossover probability and mutation takes place at each bit of the string, based on a defined mutation probability.  To avoiding losing good designs, an elitism operation is used to retain individuals in the evolution process. If the user is satisfied with the major features of some individuals, then these individuals (design sketches) can be \u2018locked\u2019 by users. The locked individuals will be copied directly to the next generation, so that preferred designs or style features are preserved. In other words, these individuals survive until they are deselected by the users and replaced by better individuals. The intention is to improve search speed while maintaining design variability.  User interactive controls are adopted to govern the design evolution process. The proposed system is an open-ended system that users are given more control over the design process. Users can determine the genetic operations to perform in each design cycle, i.e.\u00a0which crossover operation and whether crossover and mutation operations are employed in each cycle. In addition to selecting the genetic operations to be included in each design cycle, users can also select an arbitrary number of individuals for crossover and mutation operations. The crossover rate and the mutation rates are not fixed throughout the experiments. Users are allowed to define the mutation and crossover probabilities in every design cycle.  The steps for implementing this IGA are outlined in Fig.\u00a016 .  The proposed system allows users to interactively select designs from a pool of practical and realistic designs, in order to gradually evolve designs with user preferred style features. A user-friendly user interface (UI) is critical because the proposed system is for the use of general customers. Firstly, it is necessary to decide the number of individuals to be presented to users. As users are required to assess the aesthetic appeal of each sketch in the proposed system, a large number of designs could easily cause user fatigue. A few initial layout designs of 2-by-2, 2-by-3, 3-by-3 and 4-by-4, were presented to users for their comments. Users commented that a 4-by-4 layout would be too much information to assess because both front and back view designs are shown and that the design details are hard to see in a 4-by-4 layout. Users\u2019 feedback is consistent with the finding of Bentley\u00a0 [43] who suggested a population of less than 10 could be cognitively manageable for users. Although users found that the 2-by-2 or 2-by-3 layout displayed the design details clearly, they indicated that they prefer not to assess one cycle of designs over multiple pages. A population size of six or below has a small coverage of the search space, and slows down the speed of convergence. As discussed in Section\u00a0 5.3, an appropriate population of nine individuals is chosen in order to achieve a good balance between the computational effort required and the quality of the solution. Therefore, a 3-by-3 grid layout of UI design is adopted for the IGA-based design system with population size of nine.  To help users perceive and assess their designs, the technical sketches in both front and back views are displayed together with the figure template (Fig.\u00a03). This helps users visually perceive the design proportions, instead of defining numerical values of the various silhouette parameter  S  .  The key requirement for a UI design is user friendliness, especially when the system is designed for general customers to create their preferred designs. The system must be designed in a manner allowing users to easily complete the genetic operations in a sequential order but hiding from users the \u2018alien\u2019 concepts of selection, crossover and mutation. Therefore, the two types of crossover, fixed position and random position ones, are presented to users as \u2018feature swapping\u2019 and \u2018new silhouette\u2019 function buttons; mutation is presented as \u2018random factors\u2019. Check boxes and slider bars are provided for users to indicate whether crossover and/or mutation are used and the relevant probabilities. Regarding the design assessment, \u2018selection\u2019 check boxes are provided for users to pick their preferred designs in each design cycle. In addition, \u2018lock\u2019 check boxes are also provided so that users can preserve individuals to later generations. Fig.\u00a017 shows the UI design of the design support system.  The procedure to create a customised sketch design is as follows:   Step \u00a01: User first presses the \u2018start\u2019 button to initiate the design process. The user will be asked to indicate his preference on waist level and hem level (see Fig.\u00a018 ). This information will be used to generate the initial population, as discussed in Section\u00a0 5.4.1. A set of nine design sketches will then be displayed.   Step \u00a02: The user selects any number of designs that appeals to him/her by clicking the checkboxes next to the particular designs.   Step \u00a03: The user presses the \u2018update selection\u2019 button and decides on the genetic operations (\u2018feature swapping\u2019 or \u2018new silhouette\u2019 for crossover and \u2018random factor\u2019 for mutation) to be included to generate new designs. The user can define the fix position crossover (i.e.\u00a0\u2018feature swapping\u2019) and the mutation rates by the sliding bars provided.   Step \u00a04: The user can \u2018lock\u2019 some designs, which avoids losing preferred designs in the iterative design process.   Step \u00a05: After selecting the genetic operations, the user presses the \u2018design\u2019 button to generate a new set of nine designs. Any locked designs will be preserved in the new generation.   Step \u00a06: Repeat steps 2\u20135 to iteratively generate designs. Fig.\u00a019 shows the generated designs after four generations, in which designs #1 and #4 have been locked and the user has selected designs #1, #3 and #5.   Step \u00a07: The user presses \u2018End\u2019 button when he/she is satisfied with the created designs. The user\u2019s preferred solutions are returned and saved as the final solutions, as shown in Fig.\u00a020 .  As discussed in Section\u00a0 5.5, the proposed design system allows a high degree of user interaction. Users are allowed to choose the genetic operations, select different number of design individuals, and set the parameters of genetic operations to create new designs in each design cycle. A number of experiments were carried out; a few findings are observed.  At the beginning of the search process, the fix position crossover operation \u2018swapping feature\u2019 could be employed to explore as much of the search space as possible. When the individuals are close to the target, i.e.\u00a0when the generated designs possess the right type of style features, then crossover operations may be avoided but only apply mutation operations for fine tuning. After a number of design cycles, if the individuals are found to be quite similar to each other, users can choose the \u2018new silhouette\u2019 random position crossover to introduce new variations to the design process.  Experimental results showed that the number of selected individual affects the speed of converging to the preferred silhouette and styles. Therefore, to speed up the design process, users should select fewer individuals at the beginning of the simulation; in the later stages of the simulation, as the designs are close to the user\u2019s preferred styles, the user could select more individuals from the population. If users select more individuals, then the speed of converging would be slower than if fewer individuals are selected.  For parameter setting, the crossover and mutation rates can adjust the variations in the design evolution. At the beginning of the design process, larger values of the crossover rate and the mutation rate should be used. As the evolution of the design continues and when the generated designs are close to the users\u2019 preferred designs, the crossover rate should be reduced. Alternatively, only mutation should be used. The second type of crossover operation, \u2018new silhouette\u2019, is designed for users to introduce new variations to the population. A default crossover rate of 0.7 is set for this type crossover operation.   Table\u00a03 shows the computation time of one design cycle; it took less than 0.5\u00a0s to about 1.5\u00a0s to generate each of the nine designs. The computation time needed for each design depends on the complexity of the design, i.e.\u00a0number of design features involved. For complex designs, it takes slightly longer than one second to generate; for simpler ones, it takes less than half seconds. The computation of genetic operations costs very little time, about 50\u00a0ms, for the entire population. A supplementary Video can be found online at http://dx.doi.org/10.1016/j.cad.2013.06.014, which demonstrates the real operating speed of the system. As Autodesk DWG TrueView software plug-in is used, the current system takes about 1.5\u00a0s to display a sketch. In general, this speed is acceptable for interactive design because the sketches are shown to the user one by one and the user needs time to examine each generated design.   Table\u00a03 shows the computation time of one design cycle; it took less than 0.5\u00a0s to about 1.5\u00a0s to generate each of the nine designs. The computation time needed for each design depends on the complexity of the design, i.e.\u00a0number of design features involved. For complex designs, it takes slightly longer than one second to generate; for simpler ones, it takes less than half seconds. The computation of genetic operations costs very little time, about 50\u00a0ms, for the entire population. Following is the supplementary Video, which demonstrates the real operating speed of the system. As Autodesk DWG TrueView software plug-in is used, the current system takes about 1.5\u00a0s to display a sketch. In general, this speed is acceptable for interactive design because the sketches are shown to the user one by one and the user needs time to examine each generated design.  Video S1  A video demonstrating the IGA-based sketch design system for skirts.       The design system is not aimed for optimisation; instead, it is mainly used for helping non-professional users to create their own styles. Therefore, users\u2019 experiences are examined to evaluate the effectiveness of the system. As outlined in the introduction that an effective design support system must fulfil a number of requirements, a questionnaire with eight questions (Table\u00a04 ) was then prepared and used in experimental system evaluation. Fifty subjects were recruited including practitioners of the fashion industry and students of The Hong Kong Polytechnic University to use and evaluate the system. All recruited subjects are females aged between 22 and 40, some of them have previous experience in fashion design and majority of them do not. Each subject participated in the evaluation individually. Upon agreeing to participate in the study, the subject was shown a short video explaining how the system operates. Each subject was given 5\u00a0min to familiarise with the system and was then asked to run the system to design three skirts reflecting their individual preferences. After the experiment, each subject was asked to complete the questionnaire to rate the system in eight aspects (Table\u00a04) using a 5-point scale, from strongly disagree (1) to strongly agree (5).   Table\u00a04 summarises the survey results in mode, median, range and percentages in agreement and disagreement. In terms of user friendliness, subjects generally agreed that the user interface of the proposed system (questions 1 and 2) is simple to operate. 49 and 48 out of 50 respondents agreed or strongly agreed the user interface is simple to understand and operate. To evaluate the effectiveness of the system, respondents were asked if satisfactory designs can be generated using the system in question 3. The results show that users are in general satisfied with the design outputs of the system because no disagreement on the statement was found. An effective design system must have the ability to generate new designs. 74% of respondents agreed that the system can generate new designs (question 4), which is much larger than those disagree (12%). About 14% respondents remain neutral on whether the system can create new design. The respondents disagreed are probably industry practitioners, who prefer to sketch their own designs, see qualitative comments from respondents later. The survey also revealed that even if users are not familiar with patternmaking, they could create practical and realistic design sketches (question 5), representing 92% of the respondents. It is a must-have capability if the system is designed for the use of general customers. Majority of the subjects were satisfied with the speed of the system to create design sketches with 58% agreed and 16% strongly agreed (question 6). However, there are still 10% subjects who were not satisfied with the speed. The proposed system is a new idea in computer-aided fashion design. To examine this new idea, subjects were asked to rate two statements in questions 7 and 8. As shown in result of question 7, only less than half of the subjects know their design preferences before the actual design process. Therefore, the proposed system helps users to visualise design ideas and guides users to confirm their preferred styles iteratively. It is exciting to know that the system works even if the user does not have a general idea of their preferred skirt (question 7). The result of question 8 showed that the system is a sound idea because only less than 25% respondents can design without a support system. In particular, subjects without fashion design knowledge mostly agreed that it is difficult to design their favourite skirts without any design support system (question 8).  In addition to the structured survey questions, some qualitative comments were collected from users after the system trial run evaluation. Industrial practitioners generally welcome the new idea of design support system, and they agreed that standardised sketches can improve the communication between designers and offshore product development team, and the system is effective to visualise designs. However, they were concerned about the variations in style allowed and the comprehensiveness of the style database. General users find the idea interesting to create their own designs; on the other hand, industrial practitioners may prefer to sketch their own designs instead of selecting from a pool computer generated designs. The limited variability can be improved by continuously expanding the style database. To sum up, the experiment proved that the system is effective in helping non-professional users to design realistic and practical skirt styles that reflect their own preferences.   CONCLUSIONS   In this study, a customised fashion design system has been proposed for non-professional users (general customers) to create fashion designs in a user-friendly way. Firstly, a parametric design model for defining and classifying silhouette and design elements has been proposed based on the knowledge of fashion design and patternmaking. Secondly, a style database has been constructed based upon the defined design model and this database allows flexible expansion through the introduction of new silhouettes and design elements. Thirdly, a design sketch composing engine has been developed, in which new designs, in the form of design sketches, are composed by integrating various compatible silhouette and design elements. Fourthly, a design knowledge model has been proposed to regulate feasible sketch composition, which ensures only practical and realistic designs are generated. Finally, an IGA-based design model has been designed for hiding tedious design parameter definitions from customers but sill constructing effective design sketches based on customer\u2019s preferences. All these components are integrated in a user-friendly design support system, by which customers can easily create their preferred designs. The subjective evaluation results have shown that the proposed system is effective in helping non-professional users create fashion styles in a user-friendly manner.   ACKNOWLEDGEMENTS   The authors would like to thank all anonymous reviewers for constructive comments. The work described in this paper was partially supported by a grant from the Research Grants Council of the Hong Kong Special Administrative Region, China (Project Nos PolyU5254/08E and PolyU5269/09E). The research project was also financially supported by another project of The Hong Kong Polytechnic University (with project account: A-PL78).   REFERENCES", "highlights": "In this paper, a customised fashion design system is proposed for non-professional users (general customers) to create their preferred fashion designs in a user-friendly way. The proposed sketch design system consists of a sketch representation and composing method, an interactive genetic algorithm (IGA)-based design model, and a user-friendly interface. The sketch representation and composing method generates feasible design sketches, based on the design parameters defined by the IGA-based design model, and the sketches are presented to customers via the user-friendly interface. Experimental results have demonstrated that the proposed system is effective in generating fashion design sketches reflecting users\u2019 preference.      (14)   Z  =    [      U   1   \u2297   V   1       \u22ee       U   i   \u2297   V   i       \u22ee       U   P   \u2297   V   P      ]    P \u00d7 H Q   =    [      u   1 , 1     v   1 , 1     \u22ef     u   1 , 1     v   1 , Q       u   1 , 2     v   1 , 1     \u22ef     u   1 , H     v   1 , 1     \u22ef     u   1 , H     v   1 , Q       \u22ee   \u22f1   \u22ee   \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       u   i , 1     v   i , 1     \u22ef     u   i , 1     v   i , Q       u   i , 2     v   i , 1     \u22ef     u   i , H     v   i , 1     \u22ef     u   i , H     v   i , Q       \u22ee   \u22f1   \u22ee   \u22ee   \u22f1   \u22ee   \u22f1   \u22ee       u   P , 1     v   P , 1     \u22ef     u   P , 1     v   P , Q       u   P , 2     v   P , 1     \u22ef     u   P , H     v   P , 1     \u22ef     u   P , H     v   P , Q      ]    P \u00d7 H Q   ."}