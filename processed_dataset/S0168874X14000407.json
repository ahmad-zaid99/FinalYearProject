{"id": "S0168874X14000407", "article": "MAIN-TITLE Convergence and accuracy of displacement based finite element formulations over arbitrary polygons: Laplace interpolants, strain smoothing and scaled boundary polygon formulation   HIGHLIGHTS          Three displacement based finite element formulations over arbitrary polygon are investigated.      Discusses the capability of extending scaled boundary polygon formulation for higher order polygons.      Direct computation of stress intensity factors within the framework of scaled boundary formulation.      A simple   Matlab   \u00ae   routine is presented for each of the formulations considered to compute the stiffness matrix.          KEYPHRASES   Polygonal finite elements  Scaled boundary polygon formulation  Strain projection  Patch test  Linear elastic fracture mechanics  Generalized stress intensity factor   The finite element method (FEM) is a versatile technique for the numerical approximation of solutions of partial differential equations (PDEs). Traditional FEM simulations rely strictly on tetrahedral or hexahedral meshes in 3D (or triangular, quadrilateral meshes in 2D). In generating a FE mesh, a balance is required between the accuracy and the flexibility in the mesh generation. For example, triangulation of a domain is relatively easy when compared with quadrangulation, whilst the quadrilateral mesh is more accurate than the triangular mesh. It is relatively easy to construct interpolants over standard shapes, viz., triangles and tetrahedrals. The use of standard shapes, viz., triangles (or quadrilaterals) and tetrahedrals (or hexahedral) simplifies the approach, however, allowing only a few element shapes can be too restrictive, because  \u2022 it may require sophisticated meshing algorithm to generate high-quality meshes, especially with quadrilaterals, for meshing complex geometries;  it may require complex remeshing to capture topological changes, for instance due to discontinuous surface growth.   BACKGROUND   With a goal to decrease the constraints imposed on finite element meshes different methods have been introduced. For instance, the meshfree methods [1], the partition of unity methods (PUMs) [2,3], the smoothed finite element methods (SFEM) [4,5] and the recent, isogeometric analysis [6]. However, the PUMs and the SFEM still require the domain to be discretized using a combination of triangles and quadrilaterals in 2D, unless the boundary is defined implicitly. This causes additional difficulties in imposing boundary conditions and ensuring an accurate definition of the boundary of the domain [7,8]. The introduction of the isogeometric analysis has revolutionized the analysis procedure. The isogeometric analysis provides a natural link with the CAD model. The isogeometric finite element method requires the domain to discretize the domain with standard shapes. However, the recently proposed isogeometric boundary element method circumvents the need to discretize the domain. On another related front, generalizations of FEM to arbitrary polygonal and polyhedral meshes have been the subject of increasing attention in the research community, both in computational physics [9\u201314] and in computer graphics [15,16].   Polygonal FEM: In polygonal finite elements, the use of elements with more than four sides can provide the flexibility in meshing and the solution accuracy [17]. Ghosh et al. [9] developed the Vorono\u00ef cell finite element method (VCFEM) to model the mechanical response of heterogeneous microstructures of composites and porous materials with heterogeneities. The VCFEM is based on the assumed stress hybrid formulation and was further developed by Tiwary et al. [18] to study the behaviour of microstructures with irregular geometries. Rashid and Gullet [19] proposed a variable element topology finite element method (VETFEM), in which the shape functions are constructed using a constrained minimization procedure. Sukumar [20] used Vorono\u00ef cells and natural neighbour interpolants to develop a finite difference method on unstructured grids. Biabanaki and Khoei [21] employed the polygonal FEM technique to model the large deformation response of interfaces. In their approach, the polygonal finite elements were generated from a non-conforming regular mesh. Wachspress interpolants were employed over the polygons. Kraus et al. [14] presented a polygonal FEM based on the constrained adaptive Delaunay tessellation. The polygonal elements can also be used as transition elements to simplify meshing or to describe the microstructure of polycrystalline alloys [11\u201313] in a rather straightforward manner. However, approximation functions on polygonal elements are usually non-polynomial, which introduces difficulties in the numerical integration. Improving numerical integration over polytopes has gained increasing attention [17,22\u201324]. Biabanaki et al. [25] recently employed the polygonal finite element method to contact-impact problems. In [25], the authors have only investigated the capability of the polygonal FEM with various shape functions, 1   1 For example: Wachspress interpolants, Metric coordinates, Natural neighbour based interpolants and mean value coordinates. within the context of contact mechanics.   Polygonal SFEM: In the stabilized conforming nodal integration [26], the strain is written as the divergence of a spatial average of the standard (compatible) strain field, i.e., the symmetric gradient of the displacement field. This concept was incorporated into the FEM by Liu [27] and extensively studied in [28,5,29]. Depending on the number and geometry of the subcells used, a spectrum of methods, each exhibiting a set of unique properties, can be formulated. Interested readers are referred to the literature [4] and references therein. Generalizations of the SFEM to arbitrarily shaped polygons were reported in [30,29].   Polygonal SBFEM: Wolf and Song [31] introduced the scaled boundary finite element method (SBFEM) for elasto-statics and elasto-dynamic problems. The SBFEM reduces the governing PDE to a set of ordinary differential equations. Like the FEM, no fundamental solution is required and like the boundary element method, the spatial dimension is reduced by one, since only the boundary needs to be discretized, resulting in a decrease in the total degrees of freedom. The SBFEM relies on defining a \u2018scaling centre\u2019 from which the entire domain is visible. By exploiting the unique feature of the scaling centre, the method allows the computation of stress intensity factors directly from their definitions. Natarajan and Song [32] combined the extended FEM and the SBFEM, thus, circumventing the need to know a priori the enrichment functions, required by the former. Recently, Ooi et al. [33] employed scaled boundary formulation in polygonal elements to study crack propagation, but its performance and application in the context of linear elasticity were not studied.  Apart from the aforementioned formulations, recent studies among others include developing polygonal elements based on the virtual nodes [34] and the virtual element methods [35]. The other possible approach is to employ basis functions that satisfy the differential equation locally [36,37]. This method has been studied in detail in [38,39] and extended to higher order polygons in [40,41].  To the best of author\u05f3s knowledge, a comparison of different displacement based formulations over arbitrary polygons has not yet been reported in the literature, which could be very beneficial for practising researchers, especially on polygonal elements. The main contribution of the manuscript are the following:  \u2022 Compare the accuracy and convergence properties of existing formulations over arbitrary polygons, especially, the polygonal FEM, the polygonal SFEM and the scaled boundary polygon in the context of linear elasticity and linear elastic fracture mechanics. The shape functions used in these formulations are Laplace interpolants for the polygonal FEM, simple averaging technique for the polygonal nSFEM and Gauss\u2013Lagrange shape functions for the scaled boundary polygon formulation.  Highlight the capability of the scaled boundary polygon formulation in constructing higher order polygonal elements.  The paper is organized as follows. Section 2 presents the governing equations and weak form for 2D static elasticity problem. The different displacement based finite element formulations is also discussed. In Section 3, with a few benchmark problems from linear elasticity, the accuracy and the convergence properties of various finite element techniques are studied. Later, the scaled boundary polygon formulation is applied to study problems in linear elastic fracture mechanics. The results from scaled boundary polygon formulation are compared with results available in the literature, for example with the extended FEM. The major conclusions of this study are summarized in Section 4.  For a 2D static elasticity problem defined in the domain \u03a9 bounded by \u0393 =   \u0393   u   \u22c3   \u0393   t   ,   \u0393   u   \u22c2   \u0393   t   = \u2205 , in the absence of body forces, the governing equation is given by  (1)    \u2207   s   \u00b7 \u03c3 = 0  in  \u03a9   with the following conditions prescribed on the boundary  (2)  u =   u   \u00af    in    \u0393   u   \u03c3 \u00b7 n =   t   \u00af    on    \u0393   t     where \u03c3 is the stress tensor. The discrete equations for this problem are formulated from the Galerkin weak form  (3)     \u222b    \u03a9     (  \u2207  \u03b4 u )   T   D (  \u2207  u )  d \u03a9 \u2212    \u222b    \u03a9     ( \u03b4 u )   T   b  d \u03a9 \u2212    \u222b      \u0393   t       ( \u03b4 u )   T     t   \u00af    d \u0393 = 0   where u and \u03b4 u are the trial and the test functions, respectively and D is the material constitutive matrix. The FEM uses the following trial and test functions:  (4)    u   h   ( x ) =   \u2211   I = 1   NP     N   I   ( x )   d   I   ,  \u03b4   u   h   ( x ) =   \u2211   I = 1   NP     N   I   ( x ) \u03b4   d   I     where NP is the total number of nodes in the mesh, N is the shape function matrix and   d   I   is the vector of degrees of freedom associated with node I. Upon substituting Eq. (4) into Eq. (3) and invoking the arbitrariness of \u03b4 u , we obtain the following discretized algebraic system of equations:  (5)  Kd = f   with  (6)  K =    \u222b      \u03a9   h       B   T   DB  d \u03a9 f =    \u222b      \u03a9   h       N   T   b  d \u03a9 +    \u222b      \u0393   t       N   T     t   \u00af    d \u0393   where K is the stiffness matrix and \u03a9  h is the discretized domain formed by the union of elements \u03a9  e and with a strain\u2013displacement matrix defined as  (7)    B   I   ( x ) =   \u2207   s     N   I   ( x ) =   [       \u2202   N   I   ( x )   \u2202 x     0     \u2202   N   I   ( x )   \u2202 y       0     \u2202   N   I   ( x )   \u2202 y       \u2202   N   I   ( x )   \u2202 x       ]   T        The stiffness matrix is computed over each element and assembled to the global matrix. The size of the stiffness matrix depends on the number of nodes in an element.  The growing interest in the generalization of FE over arbitrary meshes has opened up a new area of finite elements called \u2018polygonal finite elements\u2019. In polygonal finite elements, the number of sides of an element is not restricted to three or four as in the case of 2D.   Polygonal mesh: The Vorono\u00ef tessellation is a fundamental geometrical construct to generate a polygonal mesh covering a given domain. Polygonal meshes can be generated from Vorono\u00ef diagrams. The Vorono\u00ef diagram is a subdivision of the domain into regions V (   p   I   ) , such that any point in V (   p   I   ) is closer to node p  I than to any other node. Fig. 1 shows a Vorono\u00ef diagram of a point P. The first order Vorono\u00ef V(N) is a subdivision of the Euclidean space   R   2   into convex regions, mathematically  (8)    T   I   = { x \u2208   R   2   : d ( x ,   x   I   ) < d ( x ,   x   J   )  \u2200 J \u2260 I }   where d (   x   I   ,   x   J   ) , the Euclidean matrix, is the distance between   x   I   and   x   J   . The quality of the generated polygonal mesh depends on the randomness in the scattered points. Fig. 2 shows a typical Vorono\u00ef tessellation of two sets of scattered data set. The quality of a polygonal mesh determines the accuracy of the solution [17]. To improve the quality of the Vorono\u00ef tessellation, the generating point of each Vorono\u00ef cell can be used as its centre of mass, leading to a special type of Vorono\u00ef diagram, called the centroidal Vorno\u00ef tessellation (CVT) [42]. Sieger et al. [43] presented an optimizing technique to improve the Vorono\u00ef diagrams for use in FE computations. A polygonal mesh can also be constructed from a triangular mesh by connecting the centroid of all the triangular elements circumventing a particular node [33]. Fig. 3 shows a sequence of steps required to generate a polygonal mesh from an underlying triangular mesh. This procedure is also adopted in the edge based smoothed FEM [29]. In the following sub-sections we briefly discuss three different displacement based formulations.  In polygonal finite elements, the domain is discretized with elements having arbitrary number of edges. The shape functions are constructed over each polygonal element. The construction of shape functions over arbitrary polygons can be broadly categorized as  \u2022 Length and area measures (Wachspress interpolants) [44,45].  Natural neighbour interpolants (Sibson, Laplace interpolant) [46,47].  Harmonic coordinates [16,48].  Maximum entropy approximants [49].  Mean value coordinates [15].  For recent advances in polygonal elements, interested readers are referred to the literature [50] and the references therein. In this study, we consider only Laplace interpolants with isoparametric mapping. 2   2 When using the isoparametric formulation, the Wachspress interpolants and the Laplace interpolants are identical [17]. Hence, the interpretation of the results with the Laplace interpolants is applicable when Wachspress interpolants are used. The Laplace interpolant is also called the natural neighbour interpolant [46,47,17]. It provides a natural weighting function for irregularly spaced nodes. For a point P with n natural neighbours, the Laplace shape functions for node P  I can be written as [17]   (9)    \u03d5   I   ( x ) =     \u03b1   I   ( x )     \u2211   I = 1   n     \u03b1   J   ( x )   ,    \u03b1   J   ( x ) =     s   J   ( x )     h   J   ( x )   ,  x \u2208   R   2     where   \u03b1   I   ( x ) is the Laplace weight function,   s   I   ( x ) is the length of the Vorono\u00ef edge associated with P and node P  I and   h   I   ( x ) is the Euclidean distance between P and P  I (see Fig. 1). Listing 1 gives a   Matlab   \u00ae   function to compute the Laplace interpolants for a point P. 3   3 Original source code in FORTRAN is available from [51].   Listing\u00a01 Laplace interpolant over convex polytope.             The computation of the stiffness matrix and the force vectors involves evaluating the integrals given by Eq. (6). The shape functions over arbitrary polygons are rational polynomials and hence the formulation of efficient integration rules poses a unique challenge. This has received much attention in recent years [17,22,23,29] as evidenced by the growing literature. One potential solution is to sub-divide the physical element into triangles 4   4 The polygonal element can be triangulated by connecting the element nodes to the element centroid. and then use the well-known quadrature on a triangle for the numerical integration [17]. The purpose of subdivision is solely for the purpose of numerical integration and does not introduce additional unknowns. Although straightforward, this process involves a two-level isoparameteric mapping and relies on the positivity of the Jacobian matrix involved in the transformation. Lyness and Monegato [52] presented quadrature rules for regions with hexagonal symmetry. Natarajan et al. [22] proposed a numerical integration technique over arbitrary polygons based on complex mapping. This procedure eliminates the need for a two level isoparametric mapping while guaranteeing the positivity of the Jacobian, but is restricted to only 2D. Sommariva and Vianello [53] presented a Gauss-like cubature over arbitrary polygons. Mousavi et al. [23] presented a numerical algorithm based on group theory and optimization scheme to compute quadrature rules over arbitrary polygons and very recently. Thiagarajan and Shapiro [54] presented an adaptively weighted numerical integration scheme over arbitrary domains. For the present study, we employ sub-triangulation of the polygonal domain unless otherwise mentioned.  Once the stiffness matrix and the force vector over each element is computed, then the conventional FE procedure is adopted for the assemblage process and the solution of the system of equations [17,22]. Listing 2 presents the   MATLAB   \u00ae   function to compute the stiffness matrix. The shape functions are computed by Laplace interpolants using the routine given in Listing 1. Listing\u00a02 Computation of the stiffness matrix using conventional Polygonal FEM.             Similar to the Polygonal FEM, the Polygonal SFEM also discretizes the domain into polygonal elements with arbitrary edges. However, the stiffness matrix given by Eq. (6) is computed by using the strain projection procedure. In this approach, the strain field,     \u03b5   \u02dc     ij   h   , used to compute the stiffness matrix is computed from a weighted average of the standard strain field \u03b5  ij   h . At a point   x   C   in an element \u03a9  h , the smoothed strain field is given by  (10)      \u03b5   \u02dc     ij   h   =    \u222b      \u03a9   h       \u03b5   ij   h   ( x ) \u03a6 ( x \u2212   x   C   )  d x =    \u222b      \u03a9   C     Bq \u03a6 ( x \u2212   x   C   )  d x =   B   \u02dc   q   where q is a vector of degrees of freedom, \u03a6 is a smoothing function is given by   \u03a6 = {        1     A   C          x   C   \u2208   \u03a9   C       0     x   C   \u2209   \u03a9   C         where A  C is the area of the subcell. The smoothed strain\u2013displacement matrix   B   \u02dc   is given by  (11)    B   \u02dc   =   1     A   C        \u222b      \u03a9   C     [       \u2202   N   I     \u2202 x     0     0     \u2202   N   I     \u2202 y         \u2202   N   I     \u2202 y       \u2202   N   I     \u2202 x       ] d \u03a9   Using the divergence theorem, we obtain  (12)    B   \u02dc   =   1     A   C        \u222b      \u0393   C     [       n   x     N   I     0     0     n   y     N   I         n   y     N   I       n   x     N   I       ] d \u0393   where N  I is the shape function at node I. The smoothed stiffness matrix is given by [4]   (13)    K   \u02dc   =     B   \u02dc     T   D   B   \u02dc     A   C     This process of smoothing the gradient field is known as \u2018cell-based smoothed finite element method\u2019 (CSFEM) in the literature [27]. Until now, no assumption has been made on the shape of the element. The procedure outlined so far is general and is applicable to polygons of arbitrary shapes [30]. Other smoothing techniques [4] can also be extended to polygons, for example, Nguyen-Thoi et al. [29] applied the edge based smoothing technique over polygons for problems in solid mechanics. In this study we investigate the properties of the CSFEM over arbitrary polygons.   Construction of shape functions: Due to the process of strain smoothing, only the shape function is involved in the calculation of the field gradients and hence the stiffness matrix. Moreover, no analytical form of the shape functions or its derivatives is required. In this study, we use the simple averaging technique outlined in [30] to compute the shape function over arbitrary polygons. The construction of the shape functions is as follows: for a general polygonal element, a central point O is located by (see Fig. 4 )  (14)  (   x   O   ,   y   O   ) =   1   n     \u2211   I   n   (   x   I   ,   y   I   )   where n is the number of nodes of the polygonal element. The shape function at point O is given by [ 1 / n \u22ef 1 / n ] with size 1\u00d7n. In this study, the shape function along each edge is linear and one Gauss point is sufficient to evaluate the integral in Eq. (12). For the midpoint on the side of the element, the shape functions are averaged over two related nodes while for the interior point, its shape functions are evaluated using the point O and its related node. Once the shape functions are evaluated, the stiffness matrix can be computed, following the procedure outlined in [27,30].   Choice of number of subcells: When the strain smoothing is applied to quadrilateral elements, each element can be subdivided into a number of triangular or quadrilateral subcells. Liu et al. [27] showed that upper and lower bound solutions in SFEM can be obtained by varying the number of smoothing cells. In the case of arbitrary polygons, Dai et al. [30] showed that for the stiffness matrix to be non-singular and stable, an n-sided polygon should be sub-divided into n triangular subcells. In this study, we adopt n triangular subcells for the construction of the stiffness matrix. A simple   Matlab   \u00ae   function to compute the smoothed stiffness matrix is given in Listing 3. Listing\u00a03 Smoothed stiffness matrix.             Polygonal elements can be conveniently developed from the scaled boundary FEM (SBFEM). The SBFEM [31] is a semi-analytical computational technique that reduces the governing partial differential equations to a set of ordinary differential equations. In the SBFEM, a local radial-circumferential-like coordinate system is introduced. Numerical solutions are sought around the circumferential direction using conventional FEM, whilst in the radial direction, the solution is defined by smooth analytical functions. A scaling centre O is selected at a point from which the whole boundary of the domain is visible. This \u2018scaling requirement\u2019 can always be satisfied by sub-structuring, i.e. dividing the structure into smaller subdomains.   Fig. 5 shows a polygon modelled by the SBFEM. There is no restriction to the number of sides that a polygon can have. The radial coordinate \u03be is defined from the scaling centre ( \u03be = 0 ) to the polygon boundary ( \u03be = 1 ) . Each edge on the polygon boundary is discretized using 1D finite elements with local coordinate \u03b7. The local coordinate is defined in the range \u2212 1 \u2264 \u03b7 \u2264 1 and is similar to the standard finite elements. Remark\u00a01 The geometry of the polygon has to only satisfy the aforementioned scaling requirement. This condition is automatically satisfied for all convex polygons and many concave polygons. The scaling requirement is equivalent to the notion of \u201cstar convexity\u201d [48].   Displacement approximation: The geometry of the element described by the coordinates on the boundary   x   b   ( \u03b7 ) is expressed as  (15)    x   b   ( \u03b7 ) = N ( \u03b7 )   x   b     where N ( \u03b7 ) is the shape function matrix in the circumferential direction. The displacements of a point in a polygon is approximated by  (16)  u ( \u03be , \u03b7 ) = N ( \u03b7 ) u ( \u03be )   where u ( \u03be ) are radial displacement functions. Along the circumferential direction, the standard 1D Gauss\u2013Lobatto shape functions or Lagrange shape functions can be used. In this study, we employ Lagrange shape functions, unless mentioned otherwise. Remark\u00a02 Higher order shape functions can be employed to approximate the displacement field along each element sector on the polygon boundary. This does not affect the way in which the stiffness matrix and the load vectors are evaluated.  By following the procedure outlined in [31,55], the following ODE is obtained:  (17)    E   0     \u03be   2   u   ( \u03be )   , \u03be \u03be   + (   E   0   +   E   1   T   \u2212   E   1   ) \u03be u   ( \u03be )   , \u03be   \u2212   E   2   u ( \u03be ) = 0   where   E   0   ,   E   1   and   E   2   are coefficient matrices given by  (18)    E   0   =   \u222b   \u03b7     B   1     ( \u03b7 )   T     DB   1   ( \u03b7 ) | J ( \u03b7 ) |  d \u03b7 ,   E   1   =   \u222b   \u03b7     B   2     ( \u03b7 )   T     DB   1   ( \u03b7 ) | J ( \u03b7 ) |  d \u03b7 ,   E   2   =   \u222b   \u03b7     B   2     ( \u03b7 )   T     DB   2   ( \u03b7 ) | J ( \u03b7 ) |  d \u03b7 .   where D is the material constitutive matrix and the determinant of the Jacobian matrix is  (19)  | J ( \u03b7 ) | =   x   b   ( \u03b7 )   y   b     ( \u03b7 )   , \u03b7   \u2212   y   b   ( \u03b7 )   x   b     ( \u03b7 )   , \u03b7     The coefficient matrices are evaluated element-by-element on the polygon boundary and assembled over a polygon. This process is similar to the standard FE procedure of assemblage. The boundary nodal forces are related to the displacement functions by  (20)    F   sbfem   = (   E   0   \u03be u   ( \u03be )   , \u03be   +   E   1   T   u ( \u03be ) )   |   \u03be = 1        Eq. (17) is a homogeneous second-order ordinary differential equation, the general solution is given by [31,55]   (21)  u ( \u03be ) = \u03d5   \u03be   \u2212 \u03bb   c =   \u2211   i     c   i     \u03be   \u2212   \u03bb   i       \u03d5   i     where   \u03d5   i   and \u03bb  i can be interpreted as the deformation modes and the corresponding scaling factors that closely satisfy internal equilibrium in the \u03be direction respectively [31,55], and the constants c  i are the contribution of each mode. The deformation modes are obtained from the following quadratic eigenvalue problem obtained by substituting Eq. (21) into Eq. (17)   (22)  (   \u03bb   i   2     E   o   \u2212   \u03bb   i   (   E   1   T   \u2212   E   1   ) \u2212   E   2   )   \u03d5   i   = 0   The quadratic eigen-problem in Eq. (22) is rewritten as a standard eigen-problem of the matrix:  (23)  Z = [       E   0   \u2212 1     E   1   T     \u2212   E   0   \u2212 1       \u2212   E   2   +   E   1     E   0   \u2212 1     E   1   T     \u2212   E   1     E   0   \u2212 1       ]   The eigenvalues and eigenvectors are partitioned as  (24)  Z [       V   11       V   12         V   21       v   22       ] = [       V   11       V   12         V   21       V   22       ] [     \u2212 \u03bb   0     0   \u03bb     ]   where \u03bb consists of all the eigenvalues with negative real parts. The displacement solution is expressed as (Eq. (21))  (25)  u ( \u03be ) =   V   11     \u03be   \u2212 \u03bb   c   The boundary nodal force (Eq. (20)) is written as  (26)    F   sbfem   =   V   21   c   The stiffness matrix is obtained as  (27)    K   sbfem   =   V   21     V   11   \u2212 1        For a 2 noded line element, the coefficient matrices given by Eq. (18) can be written explicitly. The one dimensional shape functions up to order 3 is given in Listing 4. A simple   Matlab   \u00ae   function is given in Listing 5 to compute the coefficient matrices and the corresponding stiffness matrix. Listing\u00a04 One dimensional shape functions.             When the SBFEM is applied to arbitrary polygons, the stiffness matrix is computed directly using Eq. (27). An explicit form of the shape functions or its derivatives is not required for linear problems. For nonlinear problems, the shape functions can be derived by solving the elasticity equation [56].  Scaled boundary polygon formulation: stiffness matrix.             In the first part of this section, the results from the three different finite element techniques discussed above are compared using three benchmark problems in the context of linear elasticity. The results are compared with the analytical solution where available. In the later part of the section, problems involving strong discontinuity (e.g. plate with a crack, two cracks emanating from a hole) are solved using the scaled boundary polygon formulation. The results from the scaled boundary polygon formulation are compared with the results from other techniques taken from the literature [57\u201359]. We employ the following convention while discussing the results:  \u2022 Polygonal FEM \u2013 conventional polygonal FEM with Laplace interpolants: For the purpose of numerical integration, sub-triangulation is employed and sixth order Dunavant quadrature rule [60] over each triangle is employed.  Polygonal nSFEM \u2013 n-sided smoothed finite element method: A simple averaging technique is employed to compute the shape functions and the corresponding stiffness matrix. In this study, along each edge, the shape functions are assumed to be linear and hence, only one Gauss point is sufficient to integrate the terms in the stiffness matrix.  Polygonal SBFEM \u2013 scaled boundary polygon formulation is employed over each polygon. In this case, only the polygon boundary is discretized and 1D shape functions along the boundary are used to approximate the displacement field. Hence, no special numerical integration technique is required to compute the stiffness matrix.  The built-in   Matlab   \u00ae   function voronoin and   Matlab   \u00ae   functions in PolyTop [61] for building the mesh-connectivity are used to create the polygonal meshes. For the purpose of error estimation and convergence studies, the relative error, L 2 and H 1 norms, are used. The displacement norm is given by  (28)  \u2016 u \u2212   u   h     \u2016     L   2   ( \u03a9 )   =      \u222b    \u03a9   [ ( u \u2212   u   h   ) \u00b7 ( u \u2212   u   h   ) ]  d \u03a9     where u  h is the numerical solution and u is the analytical solution or a reference solution. The energy norm is given by  (29)  \u2016 u \u2212   u   h     \u2016     H   1   ( \u03a9 )   =      \u222b    \u03a9   [   ( \u03b5 \u2212   \u03b5   h   )   T   D ( \u03b5 \u2212   \u03b5   h   ) ]  d \u03a9        In this section, the equilibrium path test is performed to study the accuracy and the convergence properties of different finite element techniques. Consider a uniaxial stress \u03c3=1, under the condition of plate stress applied in the y-direction on the top edge of a unit square, whilst essential boundary conditions are applied at the bottom edge as shown in Fig. 6 . The exact displacement field is given by  (30)  u ( x , y ) =   \u03bd   E   ( 1 \u2212 x ) v ( x , y ) =   y   E         Fig. 7 shows the relative error in displacement norm L 2 as a function of total number of degrees of freedom (dofs) for the different formulations. The same mesh is used when comparing the performances of the different polygonal elements. It is seen that the L 2-error is very small, 1e\u22128 in case of polygonal FEM, but does not decrease down to machine precision. This can be attributed to the integration error as discussed in [24]. The numerical integration over polygons/polyhedras can be improved by modifying the shape function derivatives as discussed in [62,48]. The order of accuracy is similar to that reported in [17] for polygonal FEM with Laplace interpolants. In case of the polygonal nSFEM, the method fails to pass the patch test. Again, this can be attributed to the numerical integration, in which the simple averaging technique introduces additional errors when computing the stiffness matrix. The scaled boundary polygon formulation satisfies the patch test down to machine precision. This can be attributed to the semi-analytical nature of the SBFEM technique.  Higher order interpolants can be conveniently formulated using the scaled boundary polygon formulation. This involves only increasing the order of the one-dimensional shape function N ( \u03b7 ) in Eq. (16). The process is simpler compared with the other polygon formulations reported in the literature. For example, the approach developed by Sukumar [49] requires the solution of an optimization problem. Table 1 presents the relative error in the displacement norm L 2 for different orders of shape functions along each edge of the polygonal element with the scaled boundary polygon formulation. It is seen that the polygon SBFEM satisfies the linear patch test down to machine precision.  A two-dimensional cantilever beam subjected to a parabolic shear load at the free end is examined as shown in Fig. 8 . The geometry is length L=10 and height D=2. The material properties are Young\u05f3s modulus E=3e7, Poisson\u05f3s ratio \u03bd=0.25 and the parabolic shear force P=150. The exact solution for displacements are given by  (31)  u ( x , y ) =   Py   6   E   \u00af   I   [  ( 9 L \u2212 3 x ) x + ( 2 +   \u03bd   \u00af   ) (    y   2   \u2212     D   2     4    )  ] v ( x , y ) = \u2212   P   6   E   \u00af   I   [  3   \u03bd   \u00af     y   2   ( L \u2212 x ) + ( 4 + 5   \u03bd   \u00af   )     D   2   x   4   + ( 3 L \u2212 x )   x   2    ]   where I =   D   3   / 12 is the moment of inertia,   E   \u00af   = E ,   \u03bd   \u00af   = \u03bd and   E   \u00af   = E / ( 1 \u2212   \u03bd   2   ) ,   \u03bd   \u00af   = \u03bd / ( 1 \u2212 \u03bd ) for plane stress and plane strain, respectively. Fig. 9 shows a sample polygonal mesh used for this study.  The numerical convergence of the relative error in the displacement norm and the relative error in the energy norm is shown in Fig. 10 . The results from different approaches are compared with the available analytical solution. The numerical integration error is evident in both the Polygonal FEM and the Polygonal nSFEM, but is more pronounced in case of the Polygonal nSFEM. Both the Polygonal FEM and the Polygonal SBFEM yield optimal convergence in L 2 and H 1, whilst the polygonal nSFEM yields sub-optimal convergence rate. This can be attributed to the error in the numerical integration introduced by the simple averaging technique. It is seen that with mesh refinement, all the methods converge to the exact solution. An estimation of the convergence rate is also shown. From Fig. 10, it can be observed that the scaled boundary polygon formulation yields more accurate results. It is also noted that in case of the polygonal SBFEM, no special numerical integration technique is required to compute the stiffness matrix and extension to higher order shape function is straight forward. Fig. 10 also shows the error in the displacement norm when quadratic shape functions are used along each edge within the scaled boundary polygon formulation. It is seen that as the order of the shape functions is increased, the error decreases while the convergence rate increases.  In this example, an infinite plate with a traction free hole under uniaxial tension ( \u03c3 = 1 ) along x-axis Fig. 11 is considered. The exact solution of the principal stresses in polar coordinates ( r , \u03b8 ) is given by  (32)    \u03c3   11   ( r , \u03b8 ) = 1 \u2212     a   2       r   2     (    3   2    cos  2 \u03b8 + cos  4 \u03b8  ) +   3   a   4     2   r   4      cos  4 \u03b8   \u03c3   22   ( r , \u03b8 ) = \u2212     a   2       r   2     (    1   2    cos  2 \u03b8 \u2212  cos  4 \u03b8  ) \u2212   3   a   4     2   r   4      cos  4 \u03b8   \u03c3   12   ( r , \u03b8 ) = \u2212     a   2       r   2     (    1   2    sin  2 \u03b8 + sin  4 \u03b8  ) +   3   a   4     2   r   4      sin  4 \u03b8   where a is the radius of the hole. Owing to symmetry, only one-quarter of the plate is modelled. Fig. 12 shows a typical polygonal mesh used for the study. The material properties are Young\u05f3s modulus E=105 and Poisson\u05f3s ratio \u03bd=0.3. In this example, analytical tractions are applied on the boundary. The convergence rate in terms of the displacement norm is shown in Fig. 13 . It can be seen that the Polygonal SBFEM yields more accurate results when compared with the Polygonal FEM and the Polygonal nSFEM. The convergence rates of the polygonal FEM and the polygonal SBFEM are similar. The convergence rate of the polygonal nSFEM is inferior compared with the polygonal FEM and the polygonal SBFEM. All the techniques converge to exact energy with mesh refinement. The relative error in terms of the displacement norm for the polygon SBFEM with quadratic shape functions is shown in Fig. 13. It is observed that the error decreases as the order of the shape functions is increased.  The polygonal finite element techniques discussed above can be applied to problems in linear elastic fracture mechanics. However, to accurately capture the singularity at the crack tip, a very fine mesh in combination with singular elements at the crack tip is usually required. This poses numerical difficulties when the crack evolves. Another possibility is to augment the existing finite element approximation basis with additional functions [57]. In the literature, the latter method is referred to as the \u2018extended finite element method\u2019 (XFEM). The flexibility provided by the XFEM also has certain difficulties, such as numerical integration and blending of enriched and non-enriched elements [3]. In this section, we discuss the application of the polygonal SBFEM to problems with strong discontinuities and singularities. By exploiting the special characteristics of the scaling centre [31], the stress intensity factors can be computed directly. When modelling a cracked/notched structure, the scaling centre is placed at the crack tip. The straight crack/notch edges are formed by scaling the nodes A and B on the boundary and the crack surfaces are not discretized (see Fig. 5). In this study, a polygonal mesh that conforms to the crack surface is generated.   Calculation of the stress intensity factors: A unique feature of the scaled boundary polygon formulation is that stress singularities, if present, are analytically represented in the radial displacement functions u ( \u03be ) . When a crack is modelled by a polygon element with the scaling centre chosen at its crack tip in Fig. 5, some of the eigenvalues in   \u039b   n   satisfy \u2212 1 < \u03bb (   \u039b   n   ) < 0 . The stress field \u03c3 ( \u03be , \u03b7 ) can be expressed as [31]   (33)  \u03c3 ( \u03be , \u03b7 ) =   \u03a8   \u03c3   ( \u03b7 )   \u03be   \u2212   \u039b   n   \u2212 I   c   where   \u039b   n   = diag (   \u03bb   1   ,   \u03bb   2   , \u2026 ,   \u03bb   n   ) are the eigenvalues, c =   \u03a6   u   \u2212 1     u   b   , u  b is the displacement vector on the boundary \u03be=1, obtained by solving the algebraic system of equations. The stress mode   \u03a8   \u03c3   ( \u03b7 ) is defined as  (34)    \u03a8   \u03c3   ( \u03b7 ) = D ( \u2212   B   1   ( \u03b7 )   \u03a6   u     \u039b   n   +   B   2   ( \u03b7 )   \u03a6   u   )   It can be discerned from Eq. (33) that these eigenvalues lead to singular stresses at the crack tip. This enables the stress intensity factors (SIFs) to be computed directly from their definitions. For a crack that is aligned with the Cartesian coordinate axes shown in Fig. 14 , the SIFs are defined as  (35)  {       K   I         K   II       } =   lim   r \u2192 0   {       2 \u03c0 r     \u03c3   yy     |   \u03b8 = 0         2 \u03c0 r     \u03c4   xy     |   \u03b8 = 0       }   In the limit when r \u2192 0 or \u03be \u2192 0 , Eq. (33) shows that the stresses vanish when the real parts of eigenvalues in   \u039b   n   , \u03bb (    \u039b   n    ) \u2264 \u2212 1 . The diagonal submatrix   \u039b   n   ( s )   = \u2212 0.5 I becomes dominant. For this diagonal submatrix, the singular stress field   \u03c3   ( s )   ( \u03be , \u03b7 ) can be expressed as  (36)    \u03c3   ( s )   ( \u03be , \u03b7 ) =   \u03a8   \u03c3   ( s )   ( \u03b7 ( \u03b8 ) )   \u03be   \u2212 0.5 I     c   ( s )     where   \u03a8   \u03c3   ( s )   ( \u03b7 ( \u03b8 ) ) =   [   \u03a8     \u03c3   xx     ( s )   ( \u03b7 ( \u03b8 ) )    \u03a8     \u03c3   yy     ( s )   ( \u03b7 ( \u03b8 ) )    \u03a8     \u03c4   xy     ( s )   ( \u03b7 ( \u03b8 ) ) ]   T   and   c   ( s )   are respectively the stress modes and integration constants corresponding to the diagonal submatrix in   \u039b   n   satisfying \u2212 1 < \u03bb (   \u039b   n   ) < 0 . Substituting the stress components in Eq. (36) at angle \u03b8 = 0 into Eq. (35) and using the relation \u03be = r /   L   0   at \u03b8 = 0, the SIF is  (37)  {       K   I         K   II       } =   2 \u03c0   L   0     {       \u03a8     \u03c3   yy     ( s )   ( \u03b7 ( \u03b8 = 0 ) )   c   ( s )         \u03a8     \u03c4   xy     ( s )   ( \u03b7 ( \u03b8 = 0 ) )   c   ( s )       }      The plate with double edge crack subjected to a uniform tension at both ends as shown in Fig. 15 is considered. In the computations, the ratio of the crack length, a, to the width of the plate, H, is a/H=0.25. The material properties of the plate are Young\u05f3s modulus E=200GPa and Poisson\u05f3s ratio \u03bd = 0.3 . In this example, plane stress conditions are assumed. The empirical mode I SIF is given by  (38)    K   I   ref   = C \u03c3   \u03c0 a     where C is a correction factor. For a / b > 0.4 ,  b = H / 2 , the correction factor is given by [63]   (39)  C = 1.12 + 0.203 (    a   b    ) \u2212 1.197   (    a   b    )   2   + 1.930   (    a   b    )   3        The above correction factor is for an infinite plate and with an accuracy of 2% [63]. For the chosen parameters, the reference normalized SIF is   K   I   /   \u03c0 a   = 1.1635 . The plate is discretized using a polygon mesh of arbitrary number of sides. For the cracked polygon, each edge is discretized with 12 elements so that the angular variation of the SIF can be captured accurately. Table 2 presents the results from the Polygonal SBFEM with linear and quadratic shape functions along the each edge of the element. The results from the Polygonal SBFEM are compared with the XFEM results [57]. The number of nodes is maintained approximately the same as reported in [57]. It can be seen that the results from the Polygonal SBFEM are in good agreement with the results in the literature. It is noted that, no special functions are required in case of the polygonal SBFEM and the SIF can be computed directly as outlined above. In Table 3 , the results from the Polygonal SBFEM are compared with the Body Force Method (BFM) [58] with L/H=3. It is observed that the results from the Polygonal SBFEM are in very good agreement with the BFM and also with the empirical relation given in [63]. Also, the error decreases as the order of the shape functions is increased.  In the next example, a plate with an angled crack subjected to far field bi-axial stress field, \u03c3 (see Fig. 16 ) with a/w=0.1,   \u03c3   1   = 1 and   \u03c3   2   = 2 is considered. In this example, the mode I and the mode II SIFs,   K   I   and   K   II   , respectively, are obtained as a function of the crack angle \u03b2. For the loads shown, the analytical SIF for an infinite plate is given by [64,57]   (40)    K   I   = (   \u03c3   2      sin   2    \u03b2 +   \u03c3   1      cos   2    \u03b2 )   \u03c0 a     K   II   = (   \u03c3   2   \u2212   \u03c3   1   )  sin  \u03b2  cos  \u03b2   \u03c0 a        The material properties of the plate are Young\u05f3s modulus, E=200GPa and Poisson\u05f3s ratio, \u03bd = 0.3 . In this example, the plate is discretized with polygon meshes containing approximately 300 polygons for all values of beta considered. For the element containing the crack tip, five elements (linear or quadratic) were used along each edge to capture the angular variation of the SIF accurately. The variations of the mode I and the mode II SIF with crack orientation \u03b2 are presented in Table 4 and Fig. 17 . The results from the XFEM [57] are also listed in the table, which is for the case of a/w=10. The influence of the order of the shape functions and the plate width-to-the crack length ratio is studied using the polygonal SBFEM. It is observed that the results compared very well with the reference solutions. Table 5 presents the influence of the a/w ratio on the numerical SIF in case of the Polygonal SBFEM with quadratic elements. It is seen that, as the plate width-to-the crack length ratio is increased, the numerical SIFs approach the analytical solutions (see Eq. (40)) for the infinite plate.  As a last example, a plate with a centrally located hole of radius r and two cracks emanating from a hole (see Fig. 18 ) is considered. The dimensions of the plate are H = 2 W and the radius of the hole r = 2 W . The normalized stress intensity factors are defined as   F   I   =   K   I   / \u03c3   \u03c0 a   and   F   II   =   K   II   / \u03c3   \u03c0 a   . The results from the polygonal SBFEM are compared with the results of Woo et al. [65] and Daux et al. [59]. In this example, 1D quadratic element is used along each edge of the polygonal element that contains the crack tip. Table 6 shows the computed SIFs F  I and F  II for several ratios of a/W and for different angles \u03b8. It can be seen from Table 6 that the results from the polygonal SBFEM are in very good agreement with the results in the literature. It is noted that, when compared to Daux et al. [59], no additional enrichment functions are required to resolve the singularity at the crack tip. Moreover, higher order elements can be employed for the element containing the crack tip. The scaled boundary polygon formulation when combined with the extended FEM eliminates the need to compute the enrichment functions and improves the accuracy of the computed SIF. Interested readers are referred to [32] where the XFEM was combined with the SBFEM for quadrilateral elements.   CONCLUSIONS   In this paper, we compared three different displacement based finite element formulations over arbitrary polygons. The accuracy and the convergence properties of different approaches were studied with a few benchmark problems from linear elasticity. From the numerical examples, it is seen that the Polygonal SBFEM yields the most accurate results. Although, the Polygonal FEM yields optimal results, the numerical integration should be carried out accurately to improve the results, as discussed in [24]. The numerical integration over polygons/polyhedras can be improved by modifying the shape function derivatives as discussed in [62,48]. The results from the Polygonal nSFEM are stiffer and yield sub-optimal convergence in both the displacement norm and the energy norm. It is noted that for this study, we had employed cell-based smoothed FEM, whilst other smoothing techniques are possible. The Polygonal SBFEM eliminates the need to compute the shape functions or to employ special numerical integration technique. Only the boundary of the polygon is discretized and the stiffness matrix is computed directly. Moreover, an extension to higher order shape functions along the boundary of the polygon is straightforward. When applied to linear elastic fracture mechanics, the scaled boundary polygon formulation yields accurate results. It is noted that the polygonal SBFEM does not require enrichment of the approximation basis and the stress intensity factors can be computed directly. This approach can readily be combined with the extended FEM. By combining the scaled boundary formulation with the XFEM, a priori knowledge of the asymptotic fields is not required.   ACKNOWLEDGMENTS   S. Natarajan would like to acknowledge the financial support of the School of Civil and Environmental Engineering, The University of New South Wales for his research fellowship for the period September 2012 onwards. The authors would also like to acknowledge the comments and suggestions from the reviewers which have been useful to write in a more clear way some of the statements in the paper.   REFERENCES", "highlights": "Three different displacement based finite element formulations over arbitrary polygons are studied in this paper. The formulations considered are the conventional polygonal finite element method (FEM) with Laplace interpolants, the cell-based smoothed polygonal FEM with simple averaging technique and the scaled boundary polygon formulation. For the purpose of numerical integration, we employ the sub-triangulation for polygonal FEM and classical Gaussian quadrature for the smoothed FEM and the scaled boundary polygon formulation. The accuracy and the convergence properties of these formulations are studied with a few benchmark problems in the context of linear elasticity and the linear elastic fracture mechanics. The extension of scaled boundary polygon to higher order polygons is also discussed."}