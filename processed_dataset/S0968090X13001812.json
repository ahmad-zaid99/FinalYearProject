{"id": "S0968090X13001812", "article": "MAIN-TITLE Exploratory visualisation of congestion evolutions on urban transport networks   HIGHLIGHTS          New approaches to visualise evolution of traffic congestions in large size cities such as London.      Enable identifying dispersion and dissipation of congestion on the entire road network.      Allow seeing dispersion and dissipation of congestion at the link level.          KEYPHRASES   3D visualisation  Travel time  Road network  Space\u2013time  Congestion   Traffic congestion occurs where a given area (space) designated for movement is insufficient for the smooth and continuous flow of traffic, within an acceptable time or speed for most users (Lee et al., 2008). It is a major source of despair for road users, affecting individual commuters physically and mentally (Hennessy et al., 2000). It is also a substantial problem for the urban community, environmentally and economically (TTI, 2009). However, due to increasing mobility demands, traffic congestion is day-by-day becoming more acute in many big cities around the world. In order to alleviate congestion, we need to understand how traffic transforms itself on the road, and how congested areas form, develop, and spread in space and time simultaneously.  With advances in technology, various traffic sensors are now available, including traffic cameras, loop detectors, ramp metering systems, and GPS receivers on probe vehicles. These devices can provide us with an overwhelming amount of traffic data in the form of traffic parameters, e.g. velocity, travel time, and number of vehicles. There are many approaches to studying traffic congestion in space\u2013time using these traffic data. Some use mathematical models to describe data such as traffic flow (Lighthill and Whitham, 1955; Jin and Zhang, 2003; Li, 2005). Others replicate traffic conditions using simulations (Helbing and Treiber, 1999; Helbing et al., 2001; Jiang et al., 2007).  Among other approaches, visualisation is an effective tool for studying traffic congestion, transforming non-visual data into \u2018readable\u2019 and \u2018recognisable\u2019 images (Shekhar et al., 2002; Kosara et al., 2008). We use the term exploratory visualisation to emphasise that visualisation techniques seek to be a part of data exploration that integrates human perceptual capabilities into the analysis process (Andrienko and Andrienko, 2005; Silva and Freire, 2008). It differs from other visualisation techniques that seek to summarise analytical findings. Exploratory visualisation presents data in visual form to enable data analysts to understand their data better. When analysts begin to understand the data, they can combine their flexibility, creativity, and knowledge of data analysis to form new hypotheses that will lead to further exploration and insight into the data (Keim, 2002).  A number of researchers have employed visualisation techniques to study traffic data. The Isoline (or contour line) is a visualisation method that has been employed to display many traffic parameters. The term isoline refers to a curve along which points of equal value are connected (Richard et al., 1996). An early example of an isoline is May (1962), who developed density contour maps to show the heterogeneity of traffic density of highway links over time. The density contour map can show the discontinuity of traffic flow, and consequently, it is possible to see the boundaries of congested areas. These enable us to measure the spatial extent and hotspots of congested areas (Cheng et al., 2010). Isolines have also been employed to present changes in speed. Marchand (1973), for example, presented isolines of average speeds between cities in Venezuela in 1936, 1941, 1950 and 1961, to reflect changes in the physical road conditions. A special type of isoline is an isochrone which connects points of equal travel time from a given origin (Brunsdon et al., 2007), which can be useful in making a decision to buy a property (Mysociety, 2007).  Distortions of real physical geometry have been employed to represent travel time. This technique is called a \u2018cartogram\u2019. Weir (1975) illustrated the changes in travel time arising from a new bypass construction. He placed the nodes on the network within geographical space into time\u2013space by using Multi-Dimensional Scaling (MDS), where distances between the nodes represented units of travel time rather than Euclidean distance. The corresponding nodes before and after the construction were connected, and the distance showed the degree of travel time change after the bypass was built. Another more recent example can be found at (Kaiser et al., 2010).  Q-Analysis has also been employed to show relative changes in travel times (Johnson, 1981; Gatrell, 1983). Q-Analysis is referred to as a language of structure. It was proposed to describe the linkage among components in a very complicated system, and the way they change (Legrand, 2002). Q-Analysis has been employed to describe and display how congestion moves through the road system (Johnson, 1981). The presentations of Q-Analysis are, however, difficult to understand.  The spatial treemap is another technique that has been employed to display traffic parameters, which was proposed by Wood and Dykes (2008) to represent hierarchical data. The spatial treemap consists of coloured rectangles. Each large rectangle is subdivided into small rectangles to represent a smaller group. Wood et al. (2008) used the spatial treemap to produce road maps of traffic speed and volume, obtained from GPS data. The spatial treemap represents the level of speed and volume by variations in brightness. Therefore, congested areas in the city can be seen as darker colours. When zooming into a specific area, small rectangles that represent the level of speed of each time interval can be distinguished. The spatial treemap provides information on how traffic parameters changed in each area within a day, and by vehicle type. Moreover, it can display multi-level data. For example, users can zoom into see hourly data inside a rectangle. However, the spatial treemap still does not provide information about the traffic congestion process, since the data in the smaller rectangles within a larger rectangle is static and isolated. It is, therefore, quite difficult to see how congestion propagates through the road network.  Although the visualisations mentioned above present traffic parameters in space or time, the movement and evolution of traffic congestion cannot be clearly distinguished except at individual roads. For example, Kerner and Rehborn (1996) and Bertini et al. (2004) employed line graphs to plot the velocity and flow at loop detector stations. The line graphs show abrupt changes in velocity and flow. Movement in congested areas can be seen when displaying the line graphs of several stations in series. They can also show information about the movement and displacement of congested areas when comparing data between adjacent stations. Coloured pixels, another technique of 2D space\u2013time, is popularly used to study the evolution of traffic congestion in space\u2013time by visualising the traffic speed of individual links obtained from loop detectors (Zhang and Rice, 1999). The space\u2013time coloured pixels consists of two axes: a device position axis and a time axis. Each pixel represents the magnitude of a traffic parameter measured from a monitoring device at a particular time, in colours. Later, a 3D space\u2013time coloured pixels technique was proposed (Treiber and Helbing, 2002; Sch\u00f6nhof and Helbing, 2007). Beyond the 2D, a third dimension is used to display the magnitude of a traffic parameter. Colours are still employed for the magnitude to give better contrast. The congested areas can be clearly seen in the 3D space\u2013time coloured pixels since the boundaries between congested and free flow areas are quite distinct for individual roads. Since the display space is limited, congestion over a long time period cannot be displayed so an animation technique is employed to move the congestion information downwards with time (iTIS Holdings, 2011).  Existing techniques, however, normally only depict the spatial dimension along a single road or link. There is a failure to present the whole road network layout, and information is not available on how congestion spreads from one link to other contiguous links. Moreover, the study of congestion in space\u2013time is normally applied to open highways, but not to roads in central city areas where the road network is very dense. There are a few exceptions in visualising congested areas within the city. Duan et al. (2009) and Zhang et al. (2004) presented the traffic state of the whole road network using a pseudo-colour and contour map. The evolution of traffic congestion over a wide area was shown by a series of maps (Zhang et al., 2004). These time series maps can inform the variability of traffic flow over space, but, in our opinion, they are still not able to present certain important aspects of changes over time due to the limitations of the snap-shot technique. For example, it is difficult to observe the change of the positions of congested areas unless maps of different time periods are compared.  In summary, despite many attempts to visualise traffic parameters in space\u2013time, most existing works do not display the evolution of traffic congestion on the whole road network. And although many researchers focus on studying how congested areas have changed, almost all of them study only one or several highway roads. The aim of this paper, therefore, is to develop a 3D exploratory visualisation technique that can present traffic behaviours and congested areas in the space\u2013time of an entire city road network. We will focus on where/when congested areas are formed, developed, and moved on dense road networks in the centre of big cities such as London.  The paper is organised as follows: Section 2 describes the traffic data used in this research. Section 3 presents two new exploratory visualisation methods: the 3D isosurface and the 3D wall map. The methods and their application to the test data set are discussed. Section 4 concludes the paper with suggestions for future research.  The link travel time data used in this study, supplied by Transport for London (TfL), were captured as part of the current London Congestion Analysis Project (LCAP). LCAP consists of around 2200 ANPR (Automatic Number Plate Recognition) cameras on 1039 core central London roads. The data retrieved from LCAP is the average link travel time (in s) between two cameras at 5-min intervals. It is the average travel time taken by all vehicles passing a pair of cameras (which define the link) during this chosen interval of 5min. Currently, around 440,000 records are received per day from the whole LCAP network. Link travel time is bi-directional: inbound and outbound. Inbound is the direction of the road that goes towards the city centre. Outbound is the opposite direction (Cheng et al., 2010).  The geographic coverage of our data is within the M25 motorway, which encircles greater London (Fig. 1 ). The road network data consists of parts of motorway roads within M25 and \u2018A\u2019 type roads, and some roads within the city centre that are considered to have high volume of traffic. Motorways are the major roads in the UK. They are designed for long distance travel between major cities. \u2018A\u2019 type roads are defined as not being part of the motorway but being \u2018main roads\u2019 because they link places of importance such as large towns, airports, important bridges and tunnels. They tend to have heavy traffic flows, though generally not as high as motorways. Some sections of \u2018A\u2019 type road have been upgraded to motorway standard such as the A1(M) (http://www.dft.gov.uk). \u2018A\u2019 type roads within our road network data set include the North (A406) and South Circular (A205) roads, which encircle Central London, and other \u2018A\u2019 types road near the city centre. Note that other types of roads within the city centre are also included. They are small and short but they have high traffic volume.  We selected the data for 6th September 2010 and 7th September 2010 as our sample dataset. A strike on the London Underground began at 7pm on 6th September 2010, and finished at 9pm on 7th September. We use travel time per km (which is also called unit journey time) instead of link travel time, so that the relevance to link length is removed and the traffic congestion could be compared fairly for each link. Unit journey time (UJT) is also preferred by TfL over speed since the delay can be easily mapped into minor delay (i.e. journeys less than 3min per km, and severe delay (journeys more than 5min per km).  We employed three visualisation techniques to present the process of congestion development: isosurface, network-constrained isosurface and wall map. All the techniques are presented in a space consisting of three dimensions, two of which are geographical coordinates and the other of which is time. The 3D space representation is rooted from in space\u2013time cube concept, which was proposed by H\u00e4gerstrand (1970) and originally used to visualise space\u2013time paths of geographic objects. It has been subsequently applied to display various type of data, including volume data using volume rendering (Demsar and Virrantaus, 2010; Nakaya and Yano, 2010), and scatter points of event data in the space\u2013time cube (Gatalsky et al., 2004; Madzudzo, 2007).  In the following subsections, we will introduce each technique in detail with the case of LCAP data introduced in the previous section. We would like to show that congested areas propagate over the network, and then subsequently dissipate. All maps presented here use the British National Grid reference system. The distance unit of all maps is in kilometres. All the results are generated with R (R Development and Core Team, 2011), an open source software environment for data analysis and visualisation. The colours were selected from the Colour Universal Design (http://jfly.iam.u-tokyo.ac.jp/color/) that is suitable for both normal and colour blind people. We run R on 64-bit Windows 7. The total memory allocation is 12,285Mb.  An isosurface shows points of equal value (i.e., isovalues) in a 3D volume. Thus, the points on the surface share the same constant values, and the points that are outside or within the surface boundary have either greater or smaller values. The isosurface has been employed in various applications of 3D visualisation such as medical imaging, fluid dynamics, astrophysics, chemistry, quantum mechanics and many other scientific researches (von Rymon-Lipinski et al., 2004; Zhao and Li, 2004). Normally, an isosurface is used to visualise a volumetric dataset, which consists of a three-dimensional location with one scalar or vector attribute (Levoy, 1988) such as a measurement of soil contamination (Smith and Paradis, 1989), sea temperature variation (Wright and Bartlett, 2000), or soil pH values (Neteler, 2001) at a 3D location. The data sets are structured as (x, y, z, v), where (x, y, z) are three dimensional coordinates and v is the attribute. The 3D isosurface has also been applied to visualise scatter points of incident data, which are structured as (x, y, t), where (x, y) are two dimensional location and t is the time when the incident, i.e., crime and syndrome event, occurred (Brunsdon et al., 2007). Those data are all 3D point data which are different from our dataset which is network (link) data with attributes (unit journey time) that change with time.  R provides 3D visualisation functions (misc3D with rgl) to generate an isosurface from 3D point data. The Misc3D package (Feng and Tierney, 2013) provides the contour3D function to compute and render an isosurface from the data, which needs rgl (Adler and Murdoch, 2013), a 3D real-time rendering package that provides interactive 3D navigational tools such as mouse and wheel control. The contour3D function requests point data to be first arranged in regular gridded voxels, then it uses volume rendering to create the isosurface. To generate regular gridded voxels from the network data, we first convert single link data into scattered points and assign the UJT of the link to those points. To generate regular gridded voxels from the network data, we first simplified road link geometries using the Douglas\u2013Peucker algorithm (Douglas and Peucker, 1973) with 50m tolerance. The algorithm reduces the number of points representing the line while keeping the overall shape of the line. Then, we convert single link data into scattered points along the road link and assign the UJT of the link to those points. This process employed the maptools package (Bivand et al., 2013) to retrieve geographic locations of the road network from a shape file, then the rgeos package (Bivand and Rundel, 2011) to simplify the network data. The scattered data of UJT are shown in Fig. 2 , where the bottom surface shows its spatial location (x and y dimensions) and the vertical axis shows the time (at 5min intervals).  To create the isosurface, we first defined 3D mesh grid that covers over every point of our scattered data shown in Fig. 2. We chose 100points\u00d7100 points\u00d7181 points to be the mesh grid size, i.e. around 600m\u00d7600m grid cell resolution in x, y, and 5min in time dimension, in order to optimise computation time while keeping most details of congestion.  After the mesh grid data has been defined, we interpolate the values for these grids from the scattered travel time data (as shown in Fig. 2). We do this by calculating the distance along the x\u2013y plane and along the temporal (z) axis. Then, we define the weight as a function of the two distances (as defined below). The equation below shows how the interpolation was performed:  (1)    d   xy   =   (   x   i   -   x   g   )   2   +   (   y   i   -   y   g   )   2        (2)    d   z   =   (   z   i   -   z   g   )   2        (3)    w   ij   = exp      -   d   xy       \u03c3   s        \u2217 exp      -   d   z       \u03c3   t             (4)    UJT   i   =     \u2211   i = 1   n     UJT   i     w   ij       \u2211   i = 1   n     w   ij       where xg , yg , zg is the location of the grid point j; xi, yi, zi is the location of the (scatter) sample point i; dxy is the spatial distance between a grid point (j) and the known point i; dz is the temporal distance between a grid point and the known point i; wt is the weight of point i; \u03c3s is the spatial bandwidth parameter; \u03c3t is the temporal bandwidth parameter; UJTi is the UJT at point i, and UJTj is the interpolated UJT at the grid point j.  Here, the known points are used to interpolate the grid points. The spatial and temporal bandwidth parameters \u03c3s and \u03c3t control the rate of distance decay in the spatial and temporal dimensions. The smaller the value, the faster the rate of decay, and the more complex the resultant isosurface is. Conversely, large values will smooth local fluctuations in the data and result in a smooth isosurface. In general, the choice of \u03c3s and \u03c3t is largely subjective and depends on the patterns that one would like to show in the data. In the context of traffic data, large values will display broader trends, for example, city centre versus the outskirts, while small values will display local areas of high and low travel times. While applicable for other data, a smooth isosurface is undesirable in the current context since it may spuriously interpolate travel times at locations that are not proximal in the network sense. Therefore, small values are recommended. To simplify the selection of \u03c3s and \u03c3t , the spatial and temporal distances are standardized to have mean zero and standard deviation 1, allowing both values to be drawn from the same range.  As a starting point, values of \u03c3s can be chosen from percentiles of the distribution of the squared distances between the grid points and the measurement points, ||x  i  \u2212 x  g ||2, where x  i and x  g are the vectors of spatial coordinates (x and y) at the measurement locations and grid locations respectively. Likewise, values of \u03c3t can be chosen from ||zi  \u2212 zg ||2. We found that the 1st percentile (\u03c3s  =0.14) provided a good starting point in this particular case. Following this, we adjusted the values of \u03c3s and \u03c3t until the isosurface displayed the congested areas clearly, which were \u03c3s  = \u03c3t  =0.03. Once deciding on initial values, the authors recommend searching a grid of values of \u03c3s and \u03c3t . Depending on the chosen bandwidth values, the contributions of distant points to the solution is negligible, and speed enhancements could be realised in the future by introducing a cutoff point.  The interpolated 3D mesh grid is used as an input of the isosurface. The contour3D function of the misc3D package (Feng and Tierney, 2013) was used to create the isosurface. An isovalue is also needed to generate the isosurface since the isosurface connects points that have a specified isovalue, much like contour lines connecting points of equal elevation. Two isovalues (3 and 5min per km) are chosen here to show how traffic changes within 1day (from 6am to 9pm) in Figs. 3\u20135   . Fig. 3 shows the data of inbound roads on 7th September 2010 with isovalue 3min per km (in yellow) compared to 5min per km (in red). The isosurface in Fig. 3a shows that congestion spread out during the peak hour (7:00am\u20139:00am) over the London road network, and it lasted nearly the whole day within the city centre. A similar trend can be seen in the isosurface of the very high congestion level (travel time more than 5min per km), which is shown in Fig. 3b.   Fig. 4 shows three views of two isosurfaces on both 6th September 2010 and 7th September 2010, each could give us a different perspective to understand the congestion. By comparing the top view (Fig. 4a1 and b1), the figure shows that there were more scattered congested areas on 7th September than on 6th September. There were some areas that were affected by congestion on both 6th and 7th September; for example, road A13 (Ripple Road), and an intersection of road A23 and road A24 (Toothing High Street). Most of the areas became bigger as congestion became more severe on the 7th; for example, there was only a small high congested area (UJT is more than 5min per km) within the city centre on 6th September but their coverage were bigger on 7th September.  The side view of the isosurface (Fig. 4a2 and b2) shows when the congestion started and how long it lasted. It also showed that the traffic congestion was more severe on the 7th than on the 6th. Fig. 4a2 shows that on 6th September 2010, there were small high-congested areas (UJT is more than 7min per km) including A1 Folloden way on the North near North Circular Road, A13 Ripple Road on the East side of the city centre, and an intersection of road A23 and road A24 (Tooting High Street) on the South of the city centre. Almost all congested areas on 6th September existed on 7th September but they were more severe and lasted longer than on the 6th; for example, the congested areas around an intersection of road A23, A24 (Toothing High Street) (in the middle of Fig. 4a2 and b2) were severe all day, and the congested area around Fulham Broadway became severe for 3h (between 8:00 am and 11:00 am).  An oblique view (Fig. 4a3 and b3) of the isosurface provides an overview of congestion within 1day. It can be seen that the congested areas at these two levels on 7th September were much larger than on 6th September, and the severe delay on 7th September was continuous over large areas of the City of London. Moreover, one can see that, on both days, the congested areas propagated from the North and South to the central area in the morning.   Fig. 5 shows the difference between the inbound and outbound roads on 7th September 2010. The oblique view of the isosurface shows that the congested areas of the inbound roads spread out into a wide area in the morning (around 8:00 am). By contrast, the congested areas of the outbound roads spread out from the city centre to a wide area in the evening (around 4:00pm\u20136:00pm). This is because most people normally use the inbound roads to go to work in central London in the morning, and go home via the outbound roads in the late afternoon or evening.  One shortcoming of continuous isosurface presented in the previous section is that the gridding and interpolation has been performed without any restriction, i.e. it assumes that congestion values are continuously distributed all over the geographic space regardless of the network constraint. This means that congestion values will be interpolated in the area between the roads, where there are no cars (no roads at all). Another problem is for parallel roads with no connection in-between. The congestion values on one road should not influence the other, which is not possible in the continuous interpolation since there are no barriers between those parallel roads. Therefore, we implement a network-constrained interpolation. We took the data created in Fig. 2, then interpolated 3D grid along the road network only.  This means that the 3D volumetric grid becomes a 2D grid, with one horizontal (spatial) dimension along the links, and one vertical dimension along the time. Then a moving window average is used to estimate the UJT of the grid associated with road links. The size of a moving window average is 50m\u00d750m so that the congestion areas will not spread out too far. Similarly, time intervals of 5min were used, for constructing the wall \u2018panels\u2019. Only the points on that road within the grid are considered for the interpolation \u2013 this differs from the standard 3D isosurface approach, which considers any points in the (x, y, z) space in the 3D grid. Although these points may have some relevance \u2013 for instance if a nearby road is congested, then this may result in increased traffic levels in the nearby (or adjacent) road under study, as some vehicles may seek an alternative route \u2013 it is important to consider roads as if in isolation, so that congestions of each road can be more directly visualised. Similar to the isosurface above, the constrained isosurface was built using R, with the rgeos and rgl libraries.  Essentially, the network-constrained isosurface works just like generating a wall by extruding the road in the z-dimension, in a similar sense to the Wall map (to be discussed in Section 3.3). The wall is embedded in 3D space, with the x and y dimensions representing geographical locations (in km) and the z-dimension the time. A specific level of congestion can be visualised as a panel drawn on the wall with a level of congestion exceeding some amount. Here, two examples are given (Fig. 6 , for 3min, and Fig. 7 for 5min). Similar to the isosurface, the constrained isosurface also shows us the difference in the level of congestion between 6th September 2010 and 7th September 2010.   Fig. 8 shows the side view (look from the East of the city) of the constrained isosurface for 3min per km on 7th September 2010 inbound roads compared to outbound roads. Similar to the isosurface in Fig. 5, congestion in inbound roads spread over the wider area in the morning than in the evening while congestion in outbound roads spread over the wider area in the evening than in the morning.  The 3D isosurface shows the process of development of congestion (accumulating, propagating and subsequently dissipating) over the entire network. Neither the 3D isosurface nor the constrained isosurface can inform us about the details of each individual road link. Here, we use a 3D wall map to visualise the delay of individual links. The 3D wall map is a 2D link map (Becker et al., 1995) with an additional time dimension. It was employed in (ITO!, 2009), to show the changes in traffic counts on UK highways between 2001 and other years. It has also been used to display the change in travel time on different days (Cheng et al., 2010) and more recently to display trajectory data (Tominski et al., 2012). Here we built a 3D wall map to show the change in UJT on both the 6th and 7th of September 2010 (during 6am\u20139pm) in order to reveal the impact of the tube strike on road transport on both days.  We created a 3D wall map using R with rgeos, rgl, and maptools packages. From the 2D road network, we stacked a layer at a time. Each layer is equivalent to 5min interval. As already described in the result in Fig. 4, the isosurface shows that the congestion in the South of the city became more severe on 7th September. We then employed a wall map to see exactly when the congestion became severe, and why the congested areas on 7th September were larger than on 6th September. Fig. 9 shows the wall map of travel time data on 6th September, compared with 7th September. The road enclosed in the rectangle is the A23. The figure shows that on 7th September the congestion was more severe in the morning than on 6th September, but congestion existed on both days at the same location, according to the width of the red strips, which represent a high delay value.  While the isosurface gives a general view of traffic congestion and circumvents the problem of hidden elements, the constrained isosurface provides more precise and more sensible locations of congestion. The wall map reveals how congestion changed on each link. Therefore, we propose to use all these techniques in order to gain comprehensive insights.   DISCUSSION AND CONCLUSIONS   Since few techniques have been developed to reveal how traffic congestion develops, moves, and dissipates on urban road networks in space\u2013time, we explored 3D visualisation to discern how congestion evolves on road networks in central London. We developed three methods. One is an isosurface of travel time, which shows the distribution of congestion at different levels. An isosurface of travel time data can reveal the origin and dissipation of congestion, and the duration of each congested area in a side view, and also sizes and shapes in a top view. The other is a network-constrained isosurface that gives similar information as the isosurface. However, locations of congestion are more localized. This is because the constrained isosurface does not consider congestion as a continuous surface and is constrained by the road network. In addition, the 3D wall map displays the changes in travel time on each link. We recommend that the isosurface and wall map be combined, in order to leverage their respective strong points. The developed visualisation techniques are designed to be suitable for visualising traffic congestion in the city centre, where the road network is very dense such as the case study of central London. Compared to existing travel time visualisation, which uses 2D visualisation, this research can reveal the evolution and dissipation of traffic congestion better, and over the entire road network.  We are currently working on combining the two methods with some interactive features, in order to provide more effective visualisation of traffic data. We are also working to enable the visualisation system to support the exploration of large volumes of travel time data, through the exploitation of database technology; for example, Online Analytical Processing (OLAP). We believe that the methodology developed here will be applicable to analysing traffic patterns in many other large cities around the world.   ACKNOWLEDGMENTS   This research is support by UK EPSRC (EP/G023212/1, project STANDARD). The experimental data was provided by Transport for London (TfL). The support received from TfL and the STANDRAD project team is highly appreciated.   REFERENCES", "highlights": "Visualisation is an effective tool for studying traffic congestion using massive traffic datasets collected from traffic sensors. Existing techniques can reveal where/when congested areas are formed, developed, and moved on one or several highway roads, but it is still challenging to visualise the evolution of traffic congestion on the whole road network, especially on dense urban networks. To address this challenge, this paper proposes three 3D exploratory visualisation techniques: the isosurface, the constrained isosurface, and the wall map. These three techniques have different advantages and should be combined to leverage their respective strong points. We present our visualisation techniques with the case of link travel time data from Automatic Number Plate Recognition (ANPR) in London."}