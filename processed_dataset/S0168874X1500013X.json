{"id": "S0168874X1500013X", "article": "MAIN-TITLE Modified fixed-pole approach in geometrically exact spatial beam finite elements   HIGHLIGHTS          We analyse fixed-pole approach in geometrically exact beam theory.      We propose a new formulation using standard degrees of freedom.      We assess the new formulation with respect to invariance and path dependence.          KEYPHRASES   Geometrically exact beam theory  Fixed-pole approach  Strain invariance  Path dependence   A family of novel spatial beam finite elements is proposed in this paper. The elements are geometrically exact and are conceptually founded in the fixed-pole approach proposed by Bottasso and Borri, of which we give our own interpretation. The main objective of this paper has been to propose elements which reap the benefits of the fixed-pole approach but use the standard system unknowns and are generalised to an arbitrary order. This has been achieved by using the relationship between the fixed-pole and standard unknowns at a nodal level. Three different interpolation options for the position vectors have been proposed.  As the proposed formulations all stem from the same framework as the standard, iterative elements given by Simo and Vu-Quoc, they all exhibit path-dependence and non-invariance of strain measures, which has been demonstrated in representative numerical examples. For two of three proposed interpolation options we have managed to solve this problem by introducing the generalised shape functions given in [9]. Interpolation options 1 and 2 have become path-independent and strain-invariant, but Interpolation option 3 has not. The reason for this lies in the fact that within this option the displacements are not interpolated, but directly updated at integration points on the basis of non-invariant interpolation of the iterative changes of the position vector and such an interpolation cannot be proven to be strain-invariant and path-independent. In future, we attempt to derive a strain-invariant and path-independent interpolation for the position vector for this interpolation option. We will also further investigate the analogy between SO ( 3 ) and SR ( 6 ) , in particular the development of a generalised interpolation function applied not only to rotations, but to a 6-dimensional configuration parameter. As it was shown in [25], using the helicoidal interpolation along with the configuration update consistent with the group yields not only strain-invariant and path-independent results, but also a very robust procedure. It is expected that this robustness will be retained by implementing the helicoidal interpolation into the present 6D representation and this hypothesis will be investigated in our future work along with the generalisation of the helicoidal interpolation to arbitrary order following the ideas presented in [20].   ACKNOWLEDGEMENT   These results were obtained within the research projects \u201cImproved accuracy in non-linear beam elements with finite 3D rotations\u201d (No. 114-0000000-3025) financially supported by the Ministry of Science, Education and Sports of the Republic of Croatia and \u201cConfiguration-dependent approximation in non-linear finite-element analysis of structures\u201d (No. 1631) financially supported by the Croatian Science Foundation. We also acknowledge the University of Rijeka financial support for ongoing research on the project \u201cTesting of slender spatial beam structures with emphasis on model validation\u201d (No. 13.05.1.3.06) and the support of the Croatian Science Foundation which funded the project \u201cPreservation of mechanical constants in numerical time integration of non-linear beam equations of motion\u201d (No. 03.01/129).   REFERENCES", "highlights": "A family of spatial beam finite elements based on the fixed-pole approach is developed and presented in this work. The family consists of three different interpolation options, which arise as a consequence of the fact that the virtual position vector has been interpolated in a non-linear manner, and depends on the actual position vector not only at the nodal points, but also at the integration points. All three formulations turn out to be non-invariant and path-dependent. In two of them, however, this problem may be easily solved by interpolating the total local rotations, which also makes the procedure more robust in handling large load increments.   The topic of this paper is the development of a family of spatial beam finite elements based on the geometrically exact beam theory given by Reissner [1] for 2D beams and extended to 3D beams by Simo [2]. Implementation of this theory in a finite-element framework becomes non-trivial because of the properties of rotations in 3D. These are defined by orientation matrices, elements of a special orthogonal group SO(3), which is also a Lie group (see e.g. [3]). By definition, a Lie group is also a differentiable manifold, and in order for the solution to stay on the manifold, we must acknowledge existence of the so-called exponential map, a specific operation between a Lie group and a related Lie algebra (in this case the algebra of 3D skew-symmetric tensors so(3)). This theory was first implemented by Simo and Vu-Quoc, interpolating the infinitesimal rotations, the so-called spin vectors [4]. Similar results can be obtained interpolating the incremental rotational changes (between two converged configurations) as proposed by Cardona and G\u00e9radin [5], or the total rotations (the change between the initial and current configuration) as given in [6]. The additive interpolation of any of these rotational fields was shown to be the source of non-invariance of strain measures with respect to a rigid motion [7], while Romero [8] thoroughly examined and discussed how different interpolations affect the invariance properties.  An invariant formulation was proposed in [9] which not only solved the problem of non-invariance of the strain measures but also the problem of path dependence which also existed in some of those formulations, by interpolating only the relative rotations between specific nodes i.e. the rotations from which the rigid-rotation is removed. In a different vein, Betsch and Steinmann [10] have proposed a formulation where interpolation of the rotational degrees of freedom is circumvented by reparametrising the orientation matrix using and interpolating its base triad, while Zupan and Saje [11] developed a finite element where the strain vectors are interpolated.  In this work we want to shed more light on the fascinating and highly promising fixed-pole concept, and investigate alternative options of its implementation into the geometrically exact 3D beam theory to those currently available. In the context of this theory, the fixed-pole concept was first introduced by Borri and Bottasso in 1994 [12] and thoroughly researched in a series of subsequent papers [13\u201316]. In the context of simple-material and polar-material elastomechanics, the concept was presented in [17,18].  It appears that Borri and Bottasso were concerned with modelling curved mechanical elements such as wind or helicopter blades, for which it ceased to be obvious how to define a \u201cproper\u201d reference axis. In [12,13] they approached this problem by interpolating the kinematic quantities along the beam arc-length: the authors assumed that the reference axis of the beam element had a shape of a spatial helix and that both the translational and the rotational strain measures along it should be constant. This resulted in a so-called helicoidal interpolation. Although it does not appear that this was their chief motivation such interpolation also solved the problem of non-invariance of the strain measures but it was naturally applied only to two-node elements [19]. Their idea has been recently explored and generalised to an element of arbitrary order by Papa Duki\u0107 et. al. [20].  In [14\u201316] Borri and Bottasso with co-workers managed to merge the displacement and the rotation fields and introduced a configuration tensor which uniquely determined both the position and the orientation of a cross-section under consideration. This tensor turned out to be an element of the special group of rigid motions SR(6), a matrix representation of the special Euclidean group SE(3) [15,16] and a Lie group. They further proved the existence of a closed form of the exponential map between SR(6) and the related Lie algebra sr(6), which, in contrast to the earlier helicoidal interpolation, they now interpolated using Lagrangian polynomials. By employing all this, they obtained an extremely elegant formulation which used a unique operation for updating the kinematic fields, which in turn appeared to be particularly suitable for simultaneous conservation of energy and momenta in conservative time-stepping integrators. The complexities associated with simultaneous conservation of energy and momenta in 3D beams were explored in [21\u201324]. Recently, Sonneville and co-workers [25] proposed a formulation for static and dynamic analysis of geometrically exact beams which combined the ideas of the configuration tensor and helicoidal interpolation. Their particular algorithm was based on a 4D matrix representation of SE(3) and a helicoidal interpolation [12].  We emphasise the two distinct novelties proposed by Borri, Bottasso and their co-workers: the helicoidal interpolation and the configuration-tensor approach. Although they may go together, as they do in [25], there is no reason not to address (and implement) them separately. In our recent work [20] we have proposed a possible generalisation of the helicoidal interpolation [12] to higher-order elements without any reference to the configuration-tensor aspect of the fixed-pole approach. In the present work, in contrast, we focus on this aspect only and investigate possible improvements. In particular, the system unknowns used in the fixed-pole approach using the configuration-tensor representation are non-standard, and as a consequence, (i) the finite elements based on this approach cannot be combined with meshes of standard elements (with displacements and rotations as the system unknowns) and, (ii) the boundary conditions also have to be imposed in a specific non-standard manner.  In the present paper, we present a family of novel 3D beam finite elements based on the fixed-pole concept with the standard degrees of freedom (displacements and rotations) as the nodal unknowns. We investigate these elements with respect to their strain-invariance and path-independence properties and propose a method of designing reliable and well-behaving elements.  The Reissner\u2013Simo [1,2] non-linear beam theory may be derived from the principle of virtual work which states that the virtual work done by internal and inertial forces must be equal to the work done by applied external loading. The translational and rotational material strain measures are defined as  (1)  \u0393 =   \u039b   T     r   \u2032   \u2212   E   1        (2)    K   ^   =   \u039b   T     \u039b   \u2032   ,   with r as the position vector of a cross section,   E   1   as the unit vector along the beam reference axis in the material coordinate system and \u039b \u2208 SO ( 3 ) as the rotation matrix of a cross-section with respect to the origin of the spatial orthogonal frame {   e   1   ,   e   2   ,   e   3   } and, for   E   i   =   e   i   , also a linear mapping between the spatial and the material objects. It enjoys the properties of unimodularity and orthogonality while, for any 3D vector a , the hat operator   a   ^   defines a skew-symmetric matrix operating on another 3D vector b as a cross-product   a   ^   b = a \u00d7 b . As a result,     a   ^     T   = \u2212   a   ^   ,   a   ^   b = \u2212   b   ^   a ,   a \u00d7 b   ^   =   a   ^     b   ^   \u2212   b   ^     a   ^   and   \u039b a   ^   = \u039b   a   ^     \u039b   T   . The material stress resultants N , M are, for a linear elastic material, related to the material strain measures via N =   C   N   \u0393 and M =   C   M   K with   C   N   = diag [   EA   1      GA   2      GA   3   ] and   C   M   = diag [ GJ    EI   2      EI   3   ] as the translational and rotational constitutive matrices. Here,   A   1   ,   A   2   ,   A   3   denote the cross-sectional and shear areas and J,   I   2   ,   I   3   denote the torsional constant and cross-sectional second moments of area, while G and E are the shear and Young\u05f3s modulus, respectively.  The material triad   E   i   and the moving triad   t   i   rigidly attached to the beam reference axis are related via   t   i   = \u039b   E   i   . We can obtain the spatial strain measures by mapping the material strain measures into the ambient space via \u039b . In this way  (3)  \u03b3 = \u039b \u0393 =   r   \u2032   \u2212   t   1   ,      (4)    \u03ba   ^   = \u039b   K   ^     \u039b   T   =   \u039b   \u2032     \u039b   T   \u21d2 \u03ba = \u039b K   and n = \u039b N and m = \u039b M . The virtual work of internal forces is  (5)    V   i   =   \u222b   0   L   ( \u03b4 \u0393 \u00b7 N + \u03b4 K \u00b7 M )  d x =   \u222b   0   L   (    \u03b4    \u25bf   \u03b3 \u00b7 n +   \u03b4   \u25bf   \u03ba \u00b7 m  ) .   The virtual change of the translational strain measure (1) follows as   \u03b4 \u0393 = \u03b4 (    \u039b   T     r   \u2032   \u2212   E   1    ) =   \u039b   T   (  \u03b4   r   \u2032   +   r   \u2032   \u00d7 \u03b4 \u03d1  ) ,   since the virtual change of \u039b follows as \u03b4 \u039b =   \u03b4 \u03d1   ^   \u039b , with \u03b4 \u03d1 as the spatial spin vector (see [2] for details). The virtual change of the rotational strain measure (2) follows as   \u03b4   K   ^   = \u03b4 (    \u039b   T     \u039b   \u2032    ) =   \u039b   T   \u03b4     \u03d1   ^     \u2032   \u039b \u21d2 \u03b4 K =   \u039b   T   \u03b4   \u03d1   \u2032   ,   while the objective spatial strain rates are  \\vskip -15pt{(6)    \u03b4   \u25bf   \u03b3 = \u03b4 \u03b3 + \u03b3 \u00d7 \u03b4 \u03d1 = \u03b4   r   \u2032   +   r   \u2032   \u00d7 \u03b4 \u03d1 = \u039b \u03b4 \u0393 ,   \u03b4   \u25bf   \u03ba = \u03b4 \u03ba + \u03ba \u00d7 \u03b4 \u03d1 = \u03b4   \u03d1   \u2032   = \u039b \u03b4 K ,   where obviously   \u03b4   \u25bf   \u03b3 \u00b7 n +   \u03b4   \u25bf   \u03ba \u00b7 m \u2260 \u03b4 \u03b3 \u00b7 n + \u03b4 \u03ba \u00b7 m . In other words, while ( \u0393 , K ) and ( \u03b3 , \u03ba ) are both the respective strain-energy conjugates to ( N , M ) and ( n , m ) , i.e. \u03d5 =   1   2     \u222b   0   L   (  \u0393 \u00b7 N + K \u00b7 M  )  d x =   1   2     \u222b   0   L   (  \u03b3 \u00b7 n + \u03ba \u00b7 m  )  d x , only ( \u03b4 \u0393 , \u03b4 K ) are the virtual-work conjugates to ( N , M ) , while the virtual-work conjugates to ( n , m ) are (   \u03b4   \u25bf   \u03b3 ,   \u03b4   \u25bf   \u03ba ) rather than ( \u03b4 \u03b3 , \u03b4 \u03ba ) .  The virtual work of inertial forces is   V   m   =   \u222b   0   L   (  \u03b4 r \u00b7   k   \u0307   + \u03b4 \u03d1 \u00b7   \u03c0   \u0307    )  d x with k = A \u03c1   r   \u0307   and \u03c0 = \u039b   J   \u03c1   W as the translational and angular momenta per unit of length, where a superimposed dot denotes a derivative with respect to time, A \u03c1 is the beam mass per unit of length,   J   \u03c1   = diag [   J   1   ,   J   2   ,   J   3   ] is the material tensor of moments of inertia per unit of length and W is the material angular velocity, where   W   ^   =   \u039b   T     \u039b   \u0307   .  Finally, the virtual work of external loading is   V   e   =   \u222b   0   L   (  \u03b4 r \u00b7   n   e   + \u03b4 \u03d1 \u00b7   m   e    )  d x + \u03b4   r   1   \u00b7   F   0   + \u03b4   \u03d1   1   \u00b7   M   0   + \u03b4   r   N   \u00b7   F   L   + \u03b4   \u03d1   N   \u00b7   M   L   , with   n   e   ,   m   e   as the forces and moments per unit of length and   F   0   ,   M   0   ,   F   L   ,   M   L   as the end-point forces and moments.  Substituting V  i , V  m and V  e in the principle of virtual work and interpolating \u03b4 r and \u03b4 \u03d1 using Lagrangian interpolation results in the nodal residual defined as  (7)    g   i   =   q   i   i   +   q   m   i   \u2212   q   e   i   = 0 .   Here,  (8)    q   i   i   =   \u222b   0   L   [         I   i     \u2032   I   0     \u2212   I   i       r   \u2032     ^         I   i     \u2032   I     ] {     n     m     }  d x ,      (9)    q   m   i   =   \u222b   0   L     I   i   {       k   \u0307         \u03c0   \u0307       }  d x ,      (10)    q   e   i   =   \u222b   0   L     I   i   {       n   e         m   e       }  d x +   \u03b4   1   i   {       F   0         M   0       } +   \u03b4   N   i   {       F   L         M   L       } ,   are the nodal vectors of internal, inertial and external forces, respectively, where   I   i   =   I   i   ( x ) is the i-th Lagrangian polynomial of order N, and \u03b4  j   i is the Kronecker delta.  One of the results of the original work by Bottasso and Borri was a unique update procedure for the displacements and rotations. They have achieved this by first describing the kinematic quantities with respect to a fixed-pole (see also [12]) and then realising that the material description and the fixed-pole description are related via a configuration tensor  (11)  C = [     I     r   ^       0   I     ] [     \u039b   0     0   \u039b     ] = [     \u039b     r   ^   \u039b     0   \u039b     ] ,   which has very remarkable properties being an element of a special group of rigid motions, denoted as SR(6) in [14]. The groups SR(6) and SO(3) share many properties which all stem from the fact that they are both also differentiable manifolds and therefore the Lie groups. Bottasso and Borri showed that the exponential map in SR(6) actually exists in a closed form [14], which is of fundamental importance for an efficient and accurate configurational update during the numerical implementation. Remark Borri and co-workers [15] and Borri [16] noted that the special Euclidean group SE(3) can also have a 4D matrix representation with the configuration tensor     C   4 D   = [     \u039b   r       0   3 \u00d7 1   T     1     ] ,   which is also a Lie group with a closed form of the exponential map. Recently, Sonneville and co-workers [25] developed a finite element based on the 4D matrix representation of SE(3) which uses the helicoidal interpolation [12]. Consequently, it results in a very robust and locking-free formulation, but is also limited only to a two-noded case (for a possible extension of the helicoidal interpolation to an element of arbitrary order see [20]).  A new set of fixed-pole stress resultants is further introduced in [14],  (12)  {       n   \u00af         m   \u00af       } = {     n     m + r \u00d7 n     } = [     I   0       r   ^     I     ] {     n     m     } =     [     I   0       r   ^     I     ] [     \u039b   0     0   \u039b     ]   \ufe38       C   \u2212 T     {     N     M     } ,   which can be thought of as the static reduction of the spatial stress resultants at a cross-section, to the stress resultants at a fixed-pole, naturally taken as the origin of the spatial co-ordinate system, and where the presence of the configuration tensor C should be noted. The strain energy may be expressed using the new set of stress resultants to find their corresponding strain measures   \u03b3   \u00af   and   \u03ba   \u00af   from the requirement that it remains invariant to the change of strain measures, i.e.   \u03d5 =   1   2     \u222b   0   L   (  \u03b3 \u00b7 n + \u03ba \u00b7 m  )  d x =   1   2     \u222b   0   L   (    \u03b3   \u00af   \u00b7   n   \u00af   +   \u03ba   \u00af   \u00b7   m   \u00af    )  d x .   It follows that   \u03ba   \u00af   = \u03ba and   \u03b3   \u00af   = \u03b3 + r \u00d7 \u03ba which can be written as  (13)  {       \u03b3   \u00af         \u03ba   \u00af       } = [     I     r   ^       0   I     ] {     \u03b3     \u03ba     } =     [     I     r   ^       0   I     ] [     \u039b   0     0   \u039b     ]   \ufe38     C   {     \u0393     K     } ,   where again the presence of the configuration tensor C should be noted. We again focus our attention to the variation of the strain energy (i.e. the internal virtual work). As shown in the previous section, the objective spatial strain rates are virtual-work conjugate to the spatial stress resultants. Since the fixed-pole strain measures are derived from the spatial strain measures, it is logical to stipulate that the conjugate strain rates to the fixed-pole stress resultants are also not the total variations. This can be illustrated very easily by substituting (12) into the specific internal virtual work   \u03b4   \u25bf   \u03b3 \u00b7 n +   \u03b4   \u25bf   \u03ba \u00b7 m ,     \u03b4   \u25bf   \u03b3 \u00b7 n +   \u03b4   \u25bf   \u03ba \u00b7 m =   \u03b4   \u25bf   \u03b3 \u00b7   n   \u00af   +   \u03b4   \u25bf   \u03ba \u00b7 (   m   \u00af   \u2212 r \u00d7   n   \u00af   ) =   \u03b4   \u2662     \u03b3   \u00af   \u00b7   n   \u00af   +   \u03b4   \u2662     \u03ba   \u00af   \u00b7   m   \u00af   ,   with   \u03b4   \u2662     \u03b3   \u00af   =   \u03b4   \u25bf   \u03b3 + r \u00d7   \u03b4   \u25bf   \u03ba and   \u03b4   \u2662     \u03ba   \u00af   =   \u03b4   \u25bf   \u03ba as the objective fixed-pole strain rates. Substituting (6) in this result we again note the complete correspondence between the objective strain rates in the material, spatial and fixed-pole descriptions via the configuration tensor  (14)  {       \u03b4   \u2662     \u03b3   \u00af         \u03b4   \u2662     \u03ba   \u00af       } = [     I     r   ^       0   I     ] {       \u03b4   \u25bf   \u03b3       \u03b4   \u25bf   \u03ba     } =     [     I     r   ^       0   I     ] [     \u039b   0     0   \u039b     ]   \ufe38     C   {     \u03b4 \u0393     \u03b4 K     } .   This in turn enables us to write the virtual work of internal forces in the fixed-pole description as   V   i   =   \u222b   0   L   (   \u03b4   \u2662     \u03b3   \u00af   \u00b7   n   \u00af   +   \u03b4   \u2662     \u03ba   \u00af   \u00b7   m   \u00af   )  d x , which, after introducing the fixed-pole virtual displacements  (15)    \u03b4 r   \u00af   = \u03b4 r + r \u00d7 \u03b4 \u03d1 ,   and recognising that   \u03b4   \u2662     \u03b3   \u00af   = \u03b4   r   \u2032   +   r   \u2032   \u00d7 \u03b4 \u03d1 + r \u00d7 \u03b4   \u03d1   \u2032   =     \u03b4 r   \u00af     \u2032   and   \u03b4   \u2662     \u03ba   \u00af   = \u03b4   \u03d1   \u2032   , gives an extremely elegant form of the virtual work of internal forces as  (16)    V   i   =   \u222b   0   L   (     \u03b4 r   \u00af     \u2032   \u00b7   n   \u00af   + \u03b4   \u03d1   \u2032   \u00b7   m   \u00af   )  d x .   Since all the forces can be transported to the fixed-pole, the fixed-pole distributed loading and specific inertial forces as well as the point loading can be defined in an analogous manner as (12)   (17)  {         n   \u00af     e           m   \u00af     e       } = {       n   e         m   e   + r \u00d7   n   e       } = [     I   0       r   ^     I     ] {       n   e         m   e       } ,      (18)  {         k   \u00af     \u0307           \u03c0   \u00af     \u0307       } = {        k   \u0307        r \u00d7 k +   \u03c0   \u0307       } = [     I   0       r   ^     I     ] {       k   \u0307         \u03c0   \u0307       } ,      (19)  {         F   \u00af     0           M   \u00af     0       } = [     I   0       r   ^     I     ] {       F   0         M   0       }  and  {         F   \u00af     L           M   \u00af     L       } = [     I   0       r   ^     I     ] {       F   L         M   L       } ,   needed to define the virtual work of inertial and external forces. Note that, again, the conjugate virtual displacements to the fixed-pole forces are   \u03b4 r   \u00af   and \u03b4 \u03d1 . Deciding to interpolate   \u03b4 r   \u00af   and \u03b4 \u03d1 using Lagrangian polynomials we get the fixed-pole virtual work equation  (20)      G   \u00af     h   \u2261   \u2211   i = 1   N   \u3008      \u03b4 r   \u00af     i   T    \u03b4   \u03d1   i   T    \u3009     g   \u00af     i   = 0  \u21d2      g   \u00af     i   = 0 ,   with     g   \u00af     i   as the fixed-pole nodal residual  (21)      g   \u00af     i   \u2261     q   \u00af     i   i   +     q   \u00af     m   i   \u2212     q   \u00af     e   i   = 0 ,   and  (22)      q   \u00af     i   i   =   \u222b   0   L       I   i     \u2032   {       n   \u00af         m   \u00af       }  d x ,      (23)      q   \u00af     m   i   =   \u222b   0   L     I   i   {         k   \u00af     \u0307           \u03c0   \u00af     \u0307       }  d x ,      (24)      q   \u00af     e   i   =   \u222b   0   L     I   i   {         n   \u00af     e           m   \u00af     e       }  d x +   \u03b4   1   i   {         F   \u00af     0           M   \u00af     0       } +   \u03b4   N   i   {         F   \u00af     L           M   \u00af     L       } ,   as the nodal vectors of internal, inertial and external forces, respectively. Obviously, the fixed-pole approach successfully disposes of the irregularity noticed in (8), which has been very profitably exploited in the design of a momentum and energy conserving time-stepping scheme [14].  In the previous section, we have presented our interpretation of the theory given by Bottasso and Borri which lead to the same results as in [14]. Unfortunately, the unknowns of a non-linear system of Eq. (21) are non-standard. Although the non-standard results can be easily transformed to the standard position vectors and orientations, there are a few implementation complications. The first one is that the definition of the boundary conditions is not straightforward. Of course, in unconstrained dynamical problems this does not represent a problem at all. The other problem is that these unknowns make it unable to combine these elements with standard finite element meshes. In order to try to keep the spirit of the fixed-pole approach, but also to have the standard system unknowns, we use the relationship (15) at a nodal level  (25)      \u03b4 r   \u00af     i   = \u03b4   r   i   +   r   i   \u00d7 \u03b4   \u03d1   i   ,   and simply substitute it in (20) so that the virtual work equation becomes  (26)      G   \u00af     h   \u2261   \u2211   i = 1   N   \u3008  \u03b4   r   i   T    \u03b4   \u03d1   i   T    \u3009 [     I   0     \u2212     r   ^     i     I     ]     g   \u00af     i   =   \u2211   i = 1   N   \u3008  \u03b4   r   i   T    \u03b4   \u03d1   i   T    \u3009     g   \u02dc     i   = 0  \u21d2      g   \u02dc     i   = 0 ,   with  (27)      g   \u02dc     i   \u2261     q   \u02dc     i   i   +     q   \u02dc     m   i   \u2212     q   \u02dc     e   i   = 0 ,   and  (28)      q   \u02dc     i   i   =   \u222b   0   L     I     i   \u2032     [     I   0     \u2212     r   ^     i     I     ] {       n   \u00af         m   \u00af       }  d x =   \u222b   0   L     I     i   \u2032     [     I   0         r \u2212 r   ^     i     I     ] {     n     m     }  d x      (29)      q   \u02dc     m   i   =   \u222b   0   L     I   i   [     I   0     \u2212     r   ^     i     I     ] {         k   \u00af     \u0307           \u03c0   \u00af     \u0307       }  d x =   \u222b   0   L     I   i   [     I   0         r \u2212 r   ^     i     I     ] {       k   \u0307         \u03c0   \u0307       }  d x      (30)      q   \u02dc     e   i   =   \u222b   0   L     I   i   [     I   0     \u2212     r   ^     i     I     ] {         n   \u00af     e           m   \u00af     e       }  d x +   \u03b4   1   i   {         F   \u00af     0           M   \u00af     0       } +   \u03b4   N   i   {         F   \u00af     L           M   \u00af     L       } =   \u222b   0   L     I   i   [     I   0         r \u2212 r   ^     i     I     ] {       n   e         m   e       }  d x +   \u03b4   1   i   {       F   0         M   0       } +   \u03b4   N   i   {       F   L         M   L       } .   It can be shown that using a non-linear interpolation of \u03b4 r and \u03b4 \u03d1    (31)  {     \u03b4 r     \u03b4 \u03d1     } =   \u2211   i = 1   N     I   i   {     \u03b4   r   i   + (   r   i   \u2212 r ) \u00d7 \u03b4   \u03d1   i       \u03b4   \u03d1   i       } ,   is equivalent to the standard (Lagrangian) interpolation of the fixed pole virtual quantities [26].  The non-linear equation (27) may be solved using the Newton\u2013Raphson solution procedure. In order to concentrate on the issues that arise when attempting to utilise a fixed-pole approach in the modified manner presented here, in which the standard displacement and rotation quantities have been kept as the problem unknowns, we proceed by considering only the static case. When linearising (27), account has to be taken of the fact that \u0394 \u039b =   \u0394 \u03d1   ^   \u039b and \u0394 \u0393 =   \u039b   T   ( \u0394   r   \u2032   +   r   \u2032   \u00d7 \u0394 \u03d1 ) as well as \u0394 K =   \u039b   T   H ( \u0394 \u03d1 ) \u0394   \u03d1   \u2032    [2], where H ( \u0394 \u03d1 ) = I + ( 1  \u2212  cos \u0394 \u03d1 ) / \u0394   \u03d1   2      \u0394 \u03d1   ^   + ( \u0394 \u03d1 \u2212 sin \u0394 \u03d1 ) / \u0394   \u03d1   3       \u0394 \u03d1   ^     2   . Expanding Eq. (27) into a Taylor series around a known configuration and omitting higher-order terms we have  (32)      g   \u02dc     i   + \u0394     g   \u02dc     i   = 0 ,   where  (33)  \u0394     g   \u02dc     i   = \u0394     q   \u02dc     i   i   \u2212 \u0394     q   \u02dc     e   i   .   Linearising the modified nodal internal force vector (28) gives  (34)  \u0394     q   \u02dc     i   i   =   \u222b   0   L     I     i   \u2032     [     0   0       n   ^     0     ] {     \u0394   r   i   \u2212 \u0394 r     \u0394   \u03d1   i   \u2212 \u0394 \u03d1     }  d x +   \u222b   0   L     I     i   \u2032     [     I   0       r   ^   \u2212     r   i     ^     I     ] [     0   \u2212   n   ^       0   \u2212   m   ^       ] {     \u0394 r     \u0394 \u03d1     }  d x +   \u222b   0   L     I     i   \u2032     [     I   0       r   ^   \u2212     r   i     ^     I     } [     \u039b   C   N     \u039b   T     0     0   \u039b   C   M     \u039b   T       ] {     \u0394   r   \u2032   +   r   \u2032   \u00d7 \u0394 \u03d1     \u0394   \u03d1   \u2032       }  d x .   Linearising the modified nodal external force vector (30) we have  (35)  \u0394     q   \u02dc     e   i   =   \u222b   0   L     I   i   [     0   0         n   ^     e     0     ] {     \u0394   r   i   \u2212 \u0394 r     \u0394   \u03d1   i   \u2212 \u0394 \u03d1     }  d x .   An interesting phenomenon occurs when linearising the external force vector, which is a direct consequence of the use of the fixed-pole virtual quantities and their conversion back to standard virtual quantities: even though the external loading is configuration-independent, the modified nodal external loading vector (30) is not. As a result of this, the nodal stiffness matrix   K   ij   =   K   int   ij   \u2212   K   ext   ij   will have an additional part   K   ext   ij   as a result of the linearisation of     q   \u02dc     e   i   (   K   int   ij   is standard and follows from linearisation of (28)).   K   ext   ij   exists only in the presence of the distributed force loading, i.e. no contribution to the tangent stiffness matrix exists due to point loadings and distributed moment loading. In order to complete the solution procedure, the unknown functions and/or their iterative changes must be interpolated in some way. Within this paper we propose three different interpolation options, which arise as a consequence of the fact that the virtual position vector has been interpolated in a non-linear manner, dependent on the actual position vector not only at the nodal points, but also at x (i.e. the integration point).  Within this option \u0394 r and \u0394 \u03d1 are interpolated in the same way as \u03b4 r and \u03b4 \u03d1 in (31)   (36)  \u0394 r \u2250   \u2211   j = 1   N     I   j   [ \u0394   r   j   + (   r   j   \u2212 r ) \u00d7 \u0394   \u03d1   j   ] , \u0394 \u03d1 \u2250   \u2211   j = 1   N     I   j   \u0394   \u03d1   j   ,   while, in addition, the unknown displacement vector is interpolated using Lagrangian polynomials as  (37)  r \u2250   \u2211   k = 1   N     I   k     r   k   .   It should be noted that this interpolation is in contradiction with the interpolation for \u0394 r in (36), which obviously does not follow as a linearisation of (37). The aforementioned contradiction necessarily results in loss of quadratic convergence of the Newton\u2013Raphson solution process, and has been introduced as a simplest means of providing r ( x ) in (36).  Within this option, r is interpolated using (37). Interpolation of the displacement increments follows consistently by linearising r as  (38)  \u0394 r =   \u2211   j = 1   N     I   j   \u0394   r   j   ,   while  (39)  \u0394 \u03d1 =   \u2211   j = 1   N     I   j   \u0394   \u03d1   j   .      In this interpolation option, different interpolations have been used for the test functions and the trial functions, which is bound to make the tangent stiffness matrix even more non-symmetric.  Within this option r is not interpolated, but only updated as follows:  (40)    r   new   ( x ) =   r   old   ( x ) + \u0394 r ( x ) ,   where   r   old   ( x ) is the last known value for r ( x ) , not necessarily associated with an equilibrium state and \u0394 r ( x ) following interpolation of the Newton\u2013Raphson changes given in (36). This is a consistent choice which yields a tangent stiffness matrix. In this case the values of r at both integration and nodal points must be saved. The earlier results (28), (30), (34) and (35) can still be used, but noting that the position vector must now be computed from (40).  In all of the numerical examples N \u2212 1 point Gaussian quadrature (reduced integration) is used for evaluating the internal forces vector and its stiffness matrix. The Newton\u2013Raphson solution procedure is used for obtaining solutions inside each load increment, with two convergence criteria which must both be satisfied. The displacement norm is defined as the square root of the sum of the squares of nodal iterative displacements over all nodes in the structure M as a percentage of the square root of the sum of the squares of total nodal displacements   u   i   , and it must be less than a prescribed tolerance \u03b4  u  [9]    100       \u2211   i = 1   M   \u0394   u   i   \u00b7 \u0394   u   i       \u2211   i = 1   M     u   i   \u00b7   u   i       <   \u03b4   u   .   The residual norm is defined as the square root of the sum of the squares of the nodal residual forces   g   i   over all the nodes in the structure M as a percentage of the square root of the sum of squares of the nodal external forces vector   q   e   i   , which must be less than a prescribed tolerance \u03b4  r     100       \u2211   i = 1   M     g   i   \u00b7   g   i       \u2211   i = 1   M     q   e   i   \u00b7   q   e   i       <   \u03b4   r   .   Unless noted otherwise, in all numerical examples the convergence criteria are set as   \u03b4   u   =   10   \u2212 7   and   \u03b4   r   =   10   \u2212 7   . All the examples were run using self-made programs coded in Wolfram Mathematica.  This is a simple example given in [9] of a single horizontal beam of length L=1, of the following geometric and material properties: A =   A   2   =   A   3   = 0.1 ,   J   1   = 1.6 \u00d7   10   \u2212 4   ,   I   2   =   I   3   = 8.3 \u00d7   10   \u2212 5   , E = 1.2 \u00d7   10   8   and Poisson\u05f3s ratio \u03bd = 0.3 . The convergence criterion is set as   \u03b4   u   <   10   \u2212 5   . The displacements at the first node are fixed to zero, while both nodes are given prescribed end-point rotations     \u03c8   1   = {     1.00     \u2212 0.50     0.25     }  and    \u03c8   2   = {     \u2212 0.40     0.70     0.10     } ,   such that   \u039b   1   = exp      \u03c8   ^     1   and   \u039b   2   = exp      \u03c8   ^     2   . The end point rotations are applied using two incrementation sequences. At first, we apply the end-point rotations in a single increment. Then, in order to simulate a general situation in which increments of the nodal unknowns may take arbitrary values, we apply the end-point rotations in two sample increments: 0.775    \u03c8   1   , 0.4    \u03c8   2   in the first increment and 0.225    \u03c8   1   , 0.6    \u03c8   2   in the second increment. The rotational strain components K  i at the integration point x = L / 2 as well as the displacements of the free node for the interpolation options MFP1, MFP2 and MFP3 and the incrementation sequences 1 and 2 are given in Table 1 . We can see that all three proposed formulations are path dependent, where path-dependence in the displacements for MFP3 is particularly notable. Next, we test the strain-invariance of these formulations. A rigid rotation   \u03c8   R   T   =   \u3008  0.2  1.2  \u2212 0.5  \u3009   T   is superimposed onto the prescribed rotations   \u03c8   1   ,   \u03c8   2   to produce       \u03c8   \u0332     1   = {     1.00145  66233  24399     0.34679  74254  22351     \u2212 0.83717  18210  05534     }  and      \u03c8   \u0332     2   = {     0.08849  14860  02004     1.93320  47713  48018     \u2212 0.08186  60178  89401     } ,   which are obtained by extraction from exp        \u03c8   ^     \u0332     1   = exp      \u03c8   ^     R   exp      \u03c8   ^     1   and exp        \u03c8   ^     \u0332     2   = exp     \u03c8   ^     R    exp      \u03c8   ^     2   via Spurrier\u05f3s algorithm [27]. Now we subject the beam ends to the \u201cnew\u201d rotations     \u03c8   \u0332     1   and     \u03c8   \u0332     2   in a single increment and compare the results for the obtained rotational strain components     K   \u0332     i   to the results from Table 1 obtained by applying   \u03c8   1   and   \u03c8   2   in a single increment. The results in Table 2 show that all three proposed formulations are non-invariant with respect to a rigid body rotation.  We next consider a hinged right-angle frame given in [4], with the following geometric and material properties   I   3   = 2 ,   A   1   = 6 , E = 7.2 \u00d7   10   6   , \u03bd = 0.3 , and length of each leg L=120. The frame is divided into ten quadratic elements, five along each leg. The horizontal leg of the frame is loaded with a point force F=15000 as shown in Fig. 1 .  The structure is first modelled using ten equally long quadratic elements to analyse the accuracy, which is compared to the reference solution obtained by using 40 quadratic elements from [4]. From the results for the displacement components u 1 and u 2 of the loaded node given in Table 3 we can observe that formulations MFP1 and MFP2 give the same results as the formulation of Simo and Vu-Quoc [4], but MFP3 does not. Additionally, the results obtained using MFP3 appear to be less accurate. Next, path dependence of the presented formulation is tested. The structure is modelled using ten linear elements because path dependence is more evident when using lower-order elements. The load is applied to the structure in 1, 2, 10, and 20 equally sized increments, as shown in Table 4 . The results show that both MFP1 and MFP2 give path-independent results, while MFP3 gives path-dependent results. It is interesting to note, though, that the results obtained using MFP3 now appear to be the most accurate.  Finally, we analyse a well-known spatial problem of a planar curved cantilever loaded with a vertical out-of-plane concentrated force of magnitude F=600 at its tip, as shown in Fig. 2 . The geometric and material characteristics are given as follows: A =   A   2   =   A   3   = 1 ,   J   1   = 16.656 \u00d7   10   \u2212 2   ,   I   2   =   I   3   = 8.3333 \u00d7   10   \u2212 2   , E =   10   7   and G = 0.5 \u00d7   10   7   . The cantilever is in the horizontal plane and it represents one eighth of a circle of radius R=100 and is modelled using eight equally long straight linear elements. We compare our results to the ones obtained using the invariant formulation [9], as shown in Table 5 , using different load incrementations. The load is divided into 3, 7, 10, 15 and 20 equal load increments. Results clearly show that the robustness of the proposed formulation is reduced in comparison to [4] or [9], regardless of the interpolation option applied \u2013 in all of the proposed interpolations the minimum number of equal load increments is 7.  Obviously, the proposed formulation is neither strain-invariant nor path-independent regardless of the interpolation option used. However, the planar example analysed (Lee\u05f3s frame) shows that path-independence is restored in 2D with interpolation options MFP1 and MFP2. Since the Lagrangian interpolation of the spin vector utilised is known to be non-invariant in 3D but invariant in 2D, it is reasonable to assume that both strain-invariance and path-independence in 3D may be restored by applying the strain-invariant interpolation of rotations given in [9]. For MFP3, this remedy alone is not expected to suffice due to a non-typical configuration-dependent interpolation of the iterative changes of the position vector, the non-invariance of which is present even in 2D.  In [7,9] it has been shown that the non-invariance of strain measures and path-dependence is present whenever the rotational changes (iterative, incremental or total) are interpolated. Jeleni\u0107 and Crisfield have suggested an elegant solution to this problem which is based upon the idea of decomposition of the total rotational matrix \u039b ( x ) using a reference rotation matrix   \u039b   R   which is unique for the whole beam and rigidly attached to it, and a rotation matrix defining a local rotation   \u03c8   l   ( x ) between the reference rotation matrix and the total rotation matrix. Only the local rotations are interpolated using Lagrangian polynomials  (41)    \u03c8   l   ( x ) \u2250   \u03c8   lh   ( x ) =   \u2211   k = 1   N     I   k     \u03c8   k   l    and    \u03c8     l   \u2032     ( x ) \u2250   \u03c8     lh   \u2032     ( x ) =   \u2211   k = 1   N     I     k   \u2032       \u03c8   k   l   ,   which leads to a new definition of interpolation functions for the rotational changes, so that, instead of   \u0394 \u03d1 =   \u2211   j = 1   N     I   j   \u0394   \u03d1   j    and  \u0394   \u03d1   \u2032   =   \u2211   j = 1   N     I     j   \u2032     \u0394   \u03d1   j   ,   we use  (42)  \u0394 \u03d1 =   \u2211   j = 1   N       I   \u02dc     j   \u0394   \u03d1   j    and  \u0394   \u03d1   \u2032   =   \u2211   j = 1   N       I   \u02dc       j   \u2032     \u0394   \u03d1   j   .         I   \u02dc     j   ( x ) follows as a direct consequence of the aforementioned decomposition and use of interpolation (41) and its derivation is described in detail in [9]. Here we limit our attention to the simplest case of these interpolating functions, when I=J so that the reference node I = N / 2 for even-noded elements and I = ( N + 1 ) / 2 for odd-noded elements. In such a case the generalised shape functions given in [9] take the following explicit form:  (43)      I   \u02dc     j   ( x ) = {     I \u2212   \u039b   I   H [    \u03c8   lh   ( x )  ]   \u2211   m = 1   N   ( 1 \u2212   \u03b4   I   m   )   I   m   ( x )   H   \u2212 1   (   \u03c8   m   l   )   \u039b   I   T     if  j = I ,       \u039b   I   H [    \u03c8   lh   ( x )  ]   I   j   ( x )   H   \u2212 1   (   \u03c8   j   l   )   \u039b   I   T     if  j \u2260 I ,          (44)      I   \u02dc       j   \u2032     ( x ) = {     \u2212   \u039b   I   {    H   \u2032   [    \u03c8   lh   ( x )  ]   \u2211   m = 1   N   ( 1 \u2212   \u03b4   I   m   )   I   m   ( x )   H   \u2212 1   (   \u03c8   m   l   )        + H [    \u03c8   lh   ( x )  ]   \u2211   m = 1   N   ( 1 \u2212   \u03b4   I   m   )   I     m   \u2032     ( x )   H   \u2212 1   (   \u03c8   m   l   )  }   \u039b   I   T     if  j = I ,       \u039b   I   {    H   \u2032   [    \u03c8   lh   ( x )  ]   I   j   ( x ) + H [    \u03c8   lh   ( x )  ]   I     j   \u2032     ( x )  }   H   \u2212 1   (   \u03c8   j   l   )   \u039b   I   T     if  j \u2260 I ,       with H [    \u03c8   lh   ( x )  ] ,   H   \u2212 1   [    \u03c8   lh   ( x )  ] and   H   \u2032   [    \u03c8   lh   ( x )  ] explicitly given in [9,28]. Implementation into the proposed interpolation options is straightforward (I  j is replaced with     I   \u02dc     j   ), although the fact that these functions are now matrices, not scalars, must be taken into account. The update of strain measures is another intervention and it is the same for all of the interpolation options, with a basic algorithm given in Table 6 . Note that the update of rotational strain measures is a function of only the local rotations and their derivatives.  Substituting (42) into (36) we get  (45)  {     \u0394 r     \u0394 \u03d1     } =   \u2211   j = 1   N   [       I   j   I   (      r   ^     j   \u2212   r   ^    )     I   \u02dc     j       0       I   \u02dc     j       ] {     \u0394   r   j       \u0394   \u03d1   j       } .   Applying this interpolation to (34) and (35) allows us to rewrite   K   int   ij   and   K   ext   ij   as  (46)    K   int   ij   =   \u222b   0   L     I     i   \u2032     [     0   0     (   \u03b4   ij   \u2212   I   j   )   n   ^     \u2212   n   ^   (      r   ^     j   \u2212   r   ^    )     I   \u02dc     j       ]  d x +   \u222b   0   L     I     i   \u2032     [     0   \u2212   n   ^       I   \u02dc     j       0   \u2212 [  (    r   ^   \u2212     r   ^     i    )   n   ^   +   m   ^    ]     I   \u02dc     j       ]  d x +   \u222b   0   L     I     i   \u2032     [     \u039b   C   N     \u039b   T     0     (    r   ^   \u2212     r   ^     i    ) \u039b   C   N     \u039b   T     \u039b   C   M     \u039b   T       ] [       I     j   \u2032     I   (      r   ^     j   \u2212   r   ^    )     I   \u02dc       j   \u2032         0       I   \u02dc       j   \u2032         ]  d x ,   and  (47)    K   ext   ij   =   \u222b   0   L     I   i   [     0   0     (   \u03b4   ij   \u2212   I   j   )     n   ^     e     \u2212     n   ^     e   (      r   ^     j   \u2212   r   ^    )     I   \u02dc     j       ]  d x .      Analogous to the previous case, (42) is substituted into (38) and (39) to obtain   {     \u0394 r     \u0394 \u03d1     } =   \u2211   j = 1   N   [       I   j   I   0     0       I   \u02dc     j       ] {     \u0394   r   j       \u0394   \u03d1   j       } ,   which is applied to (34) and (35) to give     K   int   ij   =   \u222b   0   L     I     i   \u2032     (   \u03b4   ij   \u2212   I   j   ) [     0   0       n   ^     0     ]  d x +   \u222b   0   L     I     i   \u2032     [     0   \u2212   n   ^       I   \u02dc     j       0   \u2212 [  (    r   ^   \u2212     r   ^     i    )   n   ^   +   m   ^    ]     I   \u02dc     j       ]  d x      (48)  +   \u222b   0   L     I     i   \u2032     [       I     j   \u2032     \u039b   C   N     \u039b   T     \u039b   C   N     \u039b   T      r   ^   \u2032      I   \u02dc     j         I     j   \u2032     (    r   ^   \u2212     r   ^     i    ) \u039b   C   N     \u039b   T     (    r   ^   \u2212     r   ^     i    ) \u039b   C   N     \u039b   T      r  ^  '      I   \u02dc     j   + \u039b   C   M     \u039b   T       I   \u02dc       j   \u2032         ]  d x ,   and  (49)    K   ext   ij   =   \u222b   0   L     I   i   (   \u03b4   ij   \u2212   I   j   ) [     0   0         n   ^     e     0     ]  d x .      Implementation of generalised interpolation functions into this option requires the most coding interventions. Namely, this is the only option where we directly calculate the position vectors based on the current incremental values and this means that     I   \u02dc     j   and     I   \u02dc       j   \u2032     appear not only in the stiffness matrix, but also in the update procedure for r and   r   \u2032   at integration points. Remembering that within this option r is updated at integration points as     r   new   ( x ) =   r   old   ( x ) + \u0394 r ( x ) ,   we use (45) to obtain the values of \u0394 r at integration points. After updating r ( x ) and   r   \u2032   ( x ) , the strain measures are updated and from there the same expressions for the stiffness matrix as in the generalised Interpolation option 1 can be used.  In this section, all the numerical examples from Section 4 are repeated using the generalised formulations.  As it is seen from Tables 7 and 8  , the results in this test are improved. GMFP1 and GMFP2 now give path-independent and strain-invariant results. Although comparing rotational strain measure components suggests that GMFP3 is also strain-invariant, the difference in displacement components shown in Table 7 implies that the translational strain measures are non-invariant for this interpolation option. To demonstrate this, consider the position vector   r =   \u3008 0.97592  0.18655  \u2212 0.06552 \u3009   T     of the free end obtained using GMFP3 in a single increment. After applying the rigid rotation to the whole structure this end takes the position   exp      \u03c8   ^     R   r =   \u3008 0.29645  \u2212 0.06797  \u2212 0.94816 \u3009   T   .   Using GMFP3 with     \u03c8   \u0332     1   and     \u03c8   \u0332     2   , however gives a different end-node position     r   \u0332   =   \u3008 0.28697  0.01921  \u2212 0.89881 \u3009   T   ,   which confirms that this interpolation option is non-invariant. In contrast, with GMFP1 and GMFP2, the end-point position vector   r =   \u3008 0.97592  0.20094  \u2212 0.08490 \u3009   T     is rotated into   exp      \u03c8   ^     R   r =   \u3008 0.28697  \u2212 0.04751  \u2212 0.95676 \u3009   T   ,   which is identical to     r   \u0332   =   \u3008 0.28697  \u2212 0.04751  \u2212 0.95676 \u3009   T   ,   obtained when     \u03c8   \u0332     1   and     \u03c8   \u0332     2   are applied for both interpolation options.  Results from Table 4 have shown that MFP3 exhibits path-dependent behaviour, even in the planar case. In Table 9 we show the corresponding results using the generalised approach. The results are identical, suggesting that the path-dependence of MFP3 cannot be solved using the generalised interpolation functions for the spin vectors. Again, this does not come as a surprise as we know that in 2D this interpolation makes no difference.  Depending on the interpolation option analysed, implementation of the generalised shape functions for the spin vectors has improved robustness and path-independence in this example. Results in Table 10 show that, similarly to the planar example, introduction of generalised shape functions has no effect on the path-dependence of MFP3. The solutions obtained using formulation GMFP3 are different than the ones given in Table 5, but without obvious relationship, though the robustness of the procedure is improved and now the solution is obtained in 5 equal load increments. GMFP1 and GMFP2 now produce path independent results, while GMFP2 also has improved robustness (only 3 equal load increments) in comparison to MFP2. The same example was also solved in [25] using a combination of a group configuration update and the helicoidal interpolation of displacement field. As a result of the latter, the formulation is very robust, i.e. it converges in only one load increment."}