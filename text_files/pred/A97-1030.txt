 Like common nouns, ((Jensen and Binot 1987), (Hindle and Rooth 1993) and (Brill and Resnick 1994)), proper names exhibit structural ambiguity in prepositional phrase (PP) attachment and in conjunction scope. Alternatively it may be independent of the preceding NP, as in NP[Carnegie Hall] PP[for NP[Irwin Berlin]], where for separates two distinct names, Carnegie Hall and Irwin Berlin. The location of an organization, for instance, could be part of its name (City University of New York) or an phrases. The components of Victoria and Albert Museum and IBM and Bell Laboratories look identical; however, and is part of the name of the museum in the first example, but a conjunction joining two computer company names in the second. Although this problem is well known, a search of the computational literature shows that few solutions have been proposed, perhaps because the conjunct ambiguity problem is harder than PP attachment (though see (Agarwal and Boggess 1992) for a method of conjunct identification that relies on syntactic category and semantic label). Similar structural ambiguity exists with respect to the possessive pronoun, which may indicate a relationship between two names (e.g., Israel's Shimon Peres) or may constitute a component of a single name (e.g., Donoghue's Money Fund Report). Identification of the type of proper nouns resembles the problem of sense disambiguation for common nouns where, for instance, state taken out of context may refer either to a government body or the condition of a person or entity. A name variant taken out of context may be one of many types, e.g., Ford by itself could be a person (Gerald Ford), an organization (Ford Motors), a make of car (Ford), or a place (Ford, Michigan). In addition, proper names resemble definite noun phrases in that their intended referent may be ambiguous. The man may refer to more than one male individual previously mentioned in the discourse or present in the non-linguistic context; J. Smith may similarly refer to more than one individual named Joseph Smith, John Smith, Jane Smith, etc. Beyond the ambiguities that proper names share with common nouns, some ambiguities are particular to names: noun phrases may be ambiguous between a name reading and a common noun phrase, as in Candy, the person's name, versus candy the food, or The House as an organization versus a house referring to a building. 1972) names, which consist of proper nouns (classified into personal names like Shakespeare, temporal names like Monday, or geographical names like Australia) have 'unique' reference. However, some names do take determiners, as in The New York Times; in this case, they &quot;are perfectly regular in taking the definite article since they are basically premodified count nouns... It applies a set of heuristics to a list of (multi-word) strings, based on patterns of capitalization, punctuation and location within the sentence and the document. Most proper name recognizers that have been reported on in print either take as input text tagged by part-of-speech (e.g., the systems of (Paik et al. 1993)) or perform syntactic and/or morphological analysis on all words, including capitalized ones, that are part of candidate proper names (e.g., (Coates-Stephens 1993) and (McDonald 1993)). Several (e.g., (McDonald 1993), (Mani et al. 1992)) look in the local context of the candidate proper name for external information such as appositives (e.g., in a sequence such as Robin Clark, president of Clark Co.) or for human-subject verbs (e.g., say, plan) in order to determine the category of the candidate proper name. Instead, Nominator makes use of a different kind of contextual information  proper names cooccuring in the document. In fact, this is what many commercially available name identification applications use (e.g., Hayes 1994). A database also has the potential to resolve structural ambiguity; for example, if IBM and Apple Computers are listed individually in the database but IBM and Apple Computers is not, it may indicate a conjunction of two distinct names. Listed are personal titles (e.g., Mr., King), organizational identifiers (including strong identifiers such as Inc. and weaker domain identifiers such as Arts) and names of large places (e.g., Los Angeles, California, but not Scarsdale, N.Y.). Also listed are exception words, such as upper-case lexical items that are unlikely to be single-word proper names (e.g., Very, I or TV) and lower-case lexical items (e.g., and and van) that can be parts of proper names. The precision and recall of Nominator, operating without a database of pre-existing proper names, is in the 90's while the processing rate is over 40Mg of text per hour on a RISC/6000 machine. Many wordsequences that are easily recognized by human readers as names are ambiguous for Nominator, given the restricted set of tools available to it. In ambiguous cases, the module is designed to make conservative decisions, such as including non-names or non-name parts in otherwise valid name sequences. In this section, we give an overview of the process by which Nominator identifies and classifies proper names. Next, 'splitting' heuristics are applied to all candidate names for the purpose of breaking up complex names into smaller ones. After information about names and their referents has been extracted from individual documents, an aggregation process combines the names collected from all the documents into a dictionary, or database of names, representative of the document collection. Nominator forms a candidate name list by scanning the tokenized document and collecting sequences of capitalized tokens (or words) as well as some special lower-case tokens, such as conjunctions and prepositions. The list of candidate names extracted from the sample document contains: Each candidate name is examined for the presence of conjunctions, prepositions or possessive 's. In this minimal sense, Nominator uses the larger context of the document collection to 'learn' more variants for a given name. In order to determine whether 'splitting' should occur, a name sequence containing an ambiguous operator is divided into three segments  the operator, the substring to its left and the substring to its right. The splitting process applies a set of heuristics based on patterns of capitalization, lexical features and the relative 'scope' of operators (see below) to name sequences containing these operators to determine whether or not they should be split into smaller names. From Nominator's point of view, all three operator types behave in similar ways and often interact when they co-occur in the same name sequence, as in New York's MOMA and the Victoria and Albert Museum in London. For example, in Victoria and Albert Museum, the conjunction is within the scope of the lexical head Museum because Museum is a noun that can take PP modification (Museum of Natural History) and hence pre-modification (Natural History Museum). Since pre-modifiers can contain conjunctions (Japanis within the scope of the noun, and so the name is not split. Thus, the string The Natural History Museum and The Board of Education is split at and because each of its substrings contains a strong-scope NP-head (as we define it) with modifiers within its scope. Because of the principle that noisy data is preferable to loss of information, Nominator does not split names if relative strength cannot be determined. As a result, there occur in Nominator's output certain 'names' such as American Television 6 Commu
Special treatment is required for words in sentenceinitial position, which may be capitalized because they are part of a proper name or simply because they are sentence initial. While the heuristics for splitting names are linguistically motivated and rule-governed, the heuristics for handling sentence-initial names are based on patterns of word occurrence in the document. For example, if White occurs at sentence-initial position and also as a substring of another name (e.g., Mr. White) it is kept. If it is found only in sentence-initial position (e.g., White paint is ...), White is discarded. If they are sentenceinitial, Nominator accepts as names both New Sears and New Coke; it also accepts sentence-initial Five Reagan as a variant of President Reagan, if the two co-occur in a document. Nominator cycles through the list of names, identifying 'anchors', or variant names that unambiguously refer to certain entity types. If the heuristic for a certain entity type (a person, for example) results in a high condifence score (highly confident that this is a person name), we determine that the name unambiguously refers to this type. For a human name, these components include a professional title (e.g., Attorney General), a personal title (e.g., Dr.), a first name, middle name, nickname, last name, and suffix (e.g., Jr.). For example, if the name lacks a personal title and a first name, and its last name is listed as an organization word (e.g., Department) in the authority list, it receives a high negative score. The presence or absence of a personal title is also important for determining confidence: If present, the result is a high confidence score (e.g., Mrs. Ruth Lake); No personal title with a known first name results in a low positive confidence score (e.g., Ruth Lake, Beverly Hills); and no personal title with an unknown first name results in a zero score (e.g., Panorama Lake). As a rule, their entity types should be identical as well, to prevent a merge of Boston (PLACE) and Boston (ORG). Thus, Jordan Hills (?PERSON) from one document is aggregated with Jordan Hills (PERSON) from another, where there was sufficient evidence, such as Mr. Hills, to make a firmer decision. An evaluation of an earlier version of Nominator, was performed on 88 Wall Street Journal documents (NIST 1993) that had been set aside for testing. Of these, Nominator correctly identified the boundaries of 91% (1230/1354). In terms of semantic disambiguation, Nominator failed to assign an entity type to 21% of the names it identified. They take as their input text processed by Nominator and further disambiguate untyped names appearing in certain contexts, such as an appositive, e.g., president of CitiBank Corp. Other untyped names, such as Star Bellied Sneetches or George Melloan's Business World, are neither people, places, organizations nor any of the other legal or financial entities we categorize into.